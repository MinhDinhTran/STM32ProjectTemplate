ARM GAS  /tmp/cc5ofa7g.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_cryp_aes.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CRYP_AES_ECB,"ax",%progbits
  18              		.align	1
  19              		.global	CRYP_AES_ECB
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	CRYP_AES_ECB:
  26              	.LFB112:
  27              		.file 1 "./FWLIB/src/stm32f4xx_cryp_aes.c"
   1:./FWLIB/src/stm32f4xx_cryp_aes.c **** /**
   2:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
   3:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @file    stm32f4xx_cryp_aes.c
   4:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @author  MCD Application Team
   5:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @version V1.4.0
   6:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @date    04-August-2014
   7:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          input message using AES in ECB/CBC/CTR/GCM/CCM modes.
   9:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          peripheral.
  11:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          AES-ECB/CBC/CTR/GCM/CCM modes are available on STM32F437x Devices.
  12:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          For STM32F41xx Devices, only AES-ECB/CBC/CTR modes are available.
  13:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  14:./FWLIB/src/stm32f4xx_cryp_aes.c **** @verbatim
  15:./FWLIB/src/stm32f4xx_cryp_aes.c ****  ===================================================================
  16:./FWLIB/src/stm32f4xx_cryp_aes.c ****                   ##### How to use this driver #####
  17:./FWLIB/src/stm32f4xx_cryp_aes.c ****  ===================================================================
  18:./FWLIB/src/stm32f4xx_cryp_aes.c ****  [..]
  19:./FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Enable The CRYP controller clock using 
  20:./FWLIB/src/stm32f4xx_cryp_aes.c ****       RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  21:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
  22:./FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in ECB Mode using CRYP_AES_ECB() function.
  23:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
  24:./FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in CBC Mode using CRYP_AES_CBC() function.
  25:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
  26:./FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in CTR Mode using CRYP_AES_CTR() function.
  27:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  28:./FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in GCM Mode using CRYP_AES_GCM() function.
  29:./FWLIB/src/stm32f4xx_cryp_aes.c ****    
  30:./FWLIB/src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in CCM Mode using CRYP_AES_CCM() function.
  31:./FWLIB/src/stm32f4xx_cryp_aes.c ****      
ARM GAS  /tmp/cc5ofa7g.s 			page 2


  32:./FWLIB/src/stm32f4xx_cryp_aes.c **** @endverbatim
  33:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  34:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
  35:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @attention
  36:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  37:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  38:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  39:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  40:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * You may not use this file except in compliance with the License.
  41:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * You may obtain a copy of the License at:
  42:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  43:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  44:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  45:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * Unless required by applicable law or agreed to in writing, software 
  46:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  47:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  48:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * See the License for the specific language governing permissions and
  49:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * limitations under the License.
  50:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *
  51:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************  
  52:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
  53:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  54:./FWLIB/src/stm32f4xx_cryp_aes.c **** /* Includes ------------------------------------------------------------------*/
  55:./FWLIB/src/stm32f4xx_cryp_aes.c **** #include "stm32f4xx_cryp.h"
  56:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  57:./FWLIB/src/stm32f4xx_cryp_aes.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  58:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @{
  59:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
  60:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  61:./FWLIB/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP 
  62:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief CRYP driver modules
  63:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @{
  64:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
  65:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  66:./FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private typedef -----------------------------------------------------------*/
  67:./FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private define ------------------------------------------------------------*/
  68:./FWLIB/src/stm32f4xx_cryp_aes.c **** #define AESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  69:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  70:./FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private macro -------------------------------------------------------------*/
  71:./FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private variables ---------------------------------------------------------*/
  72:./FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private function prototypes -----------------------------------------------*/
  73:./FWLIB/src/stm32f4xx_cryp_aes.c **** /* Private functions ---------------------------------------------------------*/
  74:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  75:./FWLIB/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Private_Functions
  76:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @{
  77:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */ 
  78:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  79:./FWLIB/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Group6 High Level AES functions
  80:./FWLIB/src/stm32f4xx_cryp_aes.c ****  *  @brief   High Level AES functions 
  81:./FWLIB/src/stm32f4xx_cryp_aes.c ****  *
  82:./FWLIB/src/stm32f4xx_cryp_aes.c **** @verbatim   
  83:./FWLIB/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  84:./FWLIB/src/stm32f4xx_cryp_aes.c ****                        ##### High Level AES functions #####
  85:./FWLIB/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  86:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  87:./FWLIB/src/stm32f4xx_cryp_aes.c **** @endverbatim
  88:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @{
ARM GAS  /tmp/cc5ofa7g.s 			page 3


  89:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
  90:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
  91:./FWLIB/src/stm32f4xx_cryp_aes.c **** /**
  92:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in ECB Mode
  93:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
  94:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
  95:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
  96:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
  97:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
  98:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
  99:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 100:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 101:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 102:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 103:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 104:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 105:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
 106:./FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_ECB(uint8_t Mode, uint8_t* Key, uint16_t Keysize,
 107:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t* Input, uint32_t Ilength, uint8_t* Output)
 108:./FWLIB/src/stm32f4xx_cryp_aes.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 8, pretend = 0, frame = 56
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 28
  36              		.cfi_offset 4, -28
  37              		.cfi_offset 5, -24
  38              		.cfi_offset 6, -20
  39              		.cfi_offset 7, -16
  40              		.cfi_offset 8, -12
  41              		.cfi_offset 9, -8
  42              		.cfi_offset 14, -4
  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 88
  46 0006 8146     		mov	r9, r0
  47 0008 0D46     		mov	r5, r1
  48 000a 1646     		mov	r6, r2
  49 000c DDF85880 		ldr	r8, [sp, #88]
 109:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 110:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 111:./FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
  50              		.loc 1 111 0
  51 0010 0022     		movs	r2, #0
  52              	.LVL1:
  53 0012 0192     		str	r2, [sp, #4]
  54              	.LVL2:
 112:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 113:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 114:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 115:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
  55              		.loc 1 115 0
  56 0014 1C46     		mov	r4, r3
  57              	.LVL3:
ARM GAS  /tmp/cc5ofa7g.s 			page 4


 116:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
  58              		.loc 1 116 0
  59 0016 179F     		ldr	r7, [sp, #92]
  60              	.LVL4:
 117:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 118:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 119:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 120:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
  61              		.loc 1 120 0
  62 0018 02A8     		add	r0, sp, #8
  63              	.LVL5:
  64 001a FFF7FEFF 		bl	CRYP_KeyStructInit
  65              	.LVL6:
 121:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 122:./FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
  66              		.loc 1 122 0
  67 001e C02E     		cmp	r6, #192
  68 0020 3AD0     		beq	.L3
  69 0022 B6F5807F 		cmp	r6, #256
  70 0026 4DD0     		beq	.L4
  71 0028 802E     		cmp	r6, #128
  72 002a 26D0     		beq	.L21
  73              	.LVL7:
  74              	.L2:
 123:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 124:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
 125:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 126:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 127:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 128:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 129:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 130:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 131:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 132:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 133:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 134:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 135:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 136:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 137:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 138:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 139:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 140:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 141:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 142:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 143:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 144:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 145:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 146:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 147:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 148:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 149:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 150:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 151:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 152:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 153:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 154:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 155:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 5


 156:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 157:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 158:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 159:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 160:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 161:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 162:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 163:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 164:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 165:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 166:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 167:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 168:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 169:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 170:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 171:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
  75              		.loc 1 171 0
  76 002c B9F1000F 		cmp	r9, #0
  77 0030 64D1     		bne	.L6
 172:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 173:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 174:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
  78              		.loc 1 174 0
  79 0032 FFF7FEFF 		bl	CRYP_FIFOFlush
  80              	.LVL8:
 175:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 176:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 177:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
  81              		.loc 1 177 0
  82 0036 0423     		movs	r3, #4
  83 0038 0A93     		str	r3, [sp, #40]
 178:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
  84              		.loc 1 178 0
  85 003a 3823     		movs	r3, #56
  86 003c 0B93     		str	r3, [sp, #44]
 179:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
  87              		.loc 1 179 0
  88 003e 0023     		movs	r3, #0
  89 0040 0C93     		str	r3, [sp, #48]
 180:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
  90              		.loc 1 180 0
  91 0042 0AA8     		add	r0, sp, #40
  92 0044 FFF7FEFF 		bl	CRYP_Init
  93              	.LVL9:
 181:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 182:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 183:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
  94              		.loc 1 183 0
  95 0048 02A8     		add	r0, sp, #8
  96 004a FFF7FEFF 		bl	CRYP_KeyInit
  97              	.LVL10:
 184:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 185:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 186:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
  98              		.loc 1 186 0
  99 004e 0120     		movs	r0, #1
 100 0050 FFF7FEFF 		bl	CRYP_Cmd
ARM GAS  /tmp/cc5ofa7g.s 			page 6


 101              	.LVL11:
 102              	.L8:
 187:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 188:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 189:./FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 190:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 191:./FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 103              		.loc 1 191 0 discriminator 2
 104 0054 1020     		movs	r0, #16
 105 0056 FFF7FEFF 		bl	CRYP_GetFlagStatus
 106              	.LVL12:
 107 005a 0246     		mov	r2, r0
 108              	.LVL13:
 192:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 109              		.loc 1 192 0 discriminator 2
 110 005c 019B     		ldr	r3, [sp, #4]
 111 005e 0133     		adds	r3, r3, #1
 112 0060 0193     		str	r3, [sp, #4]
 193:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 113              		.loc 1 193 0 discriminator 2
 114 0062 019B     		ldr	r3, [sp, #4]
 115 0064 B3F5803F 		cmp	r3, #65536
 116 0068 01D0     		beq	.L7
 117              		.loc 1 193 0 is_stmt 0 discriminator 1
 118 006a 0028     		cmp	r0, #0
 119 006c F2D1     		bne	.L8
 120              	.L7:
 194:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 195:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 121              		.loc 1 195 0 is_stmt 1
 122 006e 002A     		cmp	r2, #0
 123 0070 5CD1     		bne	.L17
 196:./FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 197:./FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 198:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 199:./FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 200:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 201:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 202:./FWLIB/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 124              		.loc 1 202 0
 125 0072 0423     		movs	r3, #4
 126 0074 0A93     		str	r3, [sp, #40]
 113:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 127              		.loc 1 113 0
 128 0076 0126     		movs	r6, #1
 129 0078 46E0     		b	.L9
 130              	.LVL14:
 131              	.L21:
 125:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 132              		.loc 1 125 0
 133 007a 0023     		movs	r3, #0
 134 007c 0D93     		str	r3, [sp, #52]
 126:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 135              		.loc 1 126 0
 136 007e 2B68     		ldr	r3, [r5]
 137              	.LVL15:
 138              	.LBB230:
ARM GAS  /tmp/cc5ofa7g.s 			page 7


 139              	.LBB231:
 140              		.file 2 "build/lnInclude/core_cmInstr.h"
   1:build/lnInclude/core_cmInstr.h **** /**************************************************************************//**
   2:build/lnInclude/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:build/lnInclude/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:build/lnInclude/core_cmInstr.h ****  * @version  V3.20
   5:build/lnInclude/core_cmInstr.h ****  * @date     05. March 2013
   6:build/lnInclude/core_cmInstr.h ****  *
   7:build/lnInclude/core_cmInstr.h ****  * @note
   8:build/lnInclude/core_cmInstr.h ****  *
   9:build/lnInclude/core_cmInstr.h ****  ******************************************************************************/
  10:build/lnInclude/core_cmInstr.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:build/lnInclude/core_cmInstr.h **** 
  12:build/lnInclude/core_cmInstr.h ****    All rights reserved.
  13:build/lnInclude/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:build/lnInclude/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:build/lnInclude/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:build/lnInclude/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:build/lnInclude/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:build/lnInclude/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:build/lnInclude/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:build/lnInclude/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:build/lnInclude/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:build/lnInclude/core_cmInstr.h ****      specific prior written permission.
  23:build/lnInclude/core_cmInstr.h ****    *
  24:build/lnInclude/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:build/lnInclude/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:build/lnInclude/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:build/lnInclude/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:build/lnInclude/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:build/lnInclude/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:build/lnInclude/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:build/lnInclude/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:build/lnInclude/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:build/lnInclude/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:build/lnInclude/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:build/lnInclude/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:build/lnInclude/core_cmInstr.h **** 
  37:build/lnInclude/core_cmInstr.h **** 
  38:build/lnInclude/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:build/lnInclude/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:build/lnInclude/core_cmInstr.h **** 
  41:build/lnInclude/core_cmInstr.h **** 
  42:build/lnInclude/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:build/lnInclude/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:build/lnInclude/core_cmInstr.h ****   Access to dedicated instructions
  45:build/lnInclude/core_cmInstr.h ****   @{
  46:build/lnInclude/core_cmInstr.h **** */
  47:build/lnInclude/core_cmInstr.h **** 
  48:build/lnInclude/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:build/lnInclude/core_cmInstr.h **** /* ARM armcc specific functions */
  50:build/lnInclude/core_cmInstr.h **** 
  51:build/lnInclude/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:build/lnInclude/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:build/lnInclude/core_cmInstr.h **** #endif
  54:build/lnInclude/core_cmInstr.h **** 
  55:build/lnInclude/core_cmInstr.h **** 
ARM GAS  /tmp/cc5ofa7g.s 			page 8


  56:build/lnInclude/core_cmInstr.h **** /** \brief  No Operation
  57:build/lnInclude/core_cmInstr.h **** 
  58:build/lnInclude/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:build/lnInclude/core_cmInstr.h ****  */
  60:build/lnInclude/core_cmInstr.h **** #define __NOP                             __nop
  61:build/lnInclude/core_cmInstr.h **** 
  62:build/lnInclude/core_cmInstr.h **** 
  63:build/lnInclude/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:build/lnInclude/core_cmInstr.h **** 
  65:build/lnInclude/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:build/lnInclude/core_cmInstr.h ****     until one of a number of events occurs.
  67:build/lnInclude/core_cmInstr.h ****  */
  68:build/lnInclude/core_cmInstr.h **** #define __WFI                             __wfi
  69:build/lnInclude/core_cmInstr.h **** 
  70:build/lnInclude/core_cmInstr.h **** 
  71:build/lnInclude/core_cmInstr.h **** /** \brief  Wait For Event
  72:build/lnInclude/core_cmInstr.h **** 
  73:build/lnInclude/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:build/lnInclude/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:build/lnInclude/core_cmInstr.h ****  */
  76:build/lnInclude/core_cmInstr.h **** #define __WFE                             __wfe
  77:build/lnInclude/core_cmInstr.h **** 
  78:build/lnInclude/core_cmInstr.h **** 
  79:build/lnInclude/core_cmInstr.h **** /** \brief  Send Event
  80:build/lnInclude/core_cmInstr.h **** 
  81:build/lnInclude/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:build/lnInclude/core_cmInstr.h ****  */
  83:build/lnInclude/core_cmInstr.h **** #define __SEV                             __sev
  84:build/lnInclude/core_cmInstr.h **** 
  85:build/lnInclude/core_cmInstr.h **** 
  86:build/lnInclude/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:build/lnInclude/core_cmInstr.h **** 
  88:build/lnInclude/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:build/lnInclude/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:build/lnInclude/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:build/lnInclude/core_cmInstr.h ****  */
  92:build/lnInclude/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  93:build/lnInclude/core_cmInstr.h **** 
  94:build/lnInclude/core_cmInstr.h **** 
  95:build/lnInclude/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  96:build/lnInclude/core_cmInstr.h **** 
  97:build/lnInclude/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  98:build/lnInclude/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  99:build/lnInclude/core_cmInstr.h ****  */
 100:build/lnInclude/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
 101:build/lnInclude/core_cmInstr.h **** 
 102:build/lnInclude/core_cmInstr.h **** 
 103:build/lnInclude/core_cmInstr.h **** /** \brief  Data Memory Barrier
 104:build/lnInclude/core_cmInstr.h **** 
 105:build/lnInclude/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 106:build/lnInclude/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 107:build/lnInclude/core_cmInstr.h ****  */
 108:build/lnInclude/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
 109:build/lnInclude/core_cmInstr.h **** 
 110:build/lnInclude/core_cmInstr.h **** 
 111:build/lnInclude/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 112:build/lnInclude/core_cmInstr.h **** 
ARM GAS  /tmp/cc5ofa7g.s 			page 9


 113:build/lnInclude/core_cmInstr.h ****     This function reverses the byte order in integer value.
 114:build/lnInclude/core_cmInstr.h **** 
 115:build/lnInclude/core_cmInstr.h ****     \param [in]    value  Value to reverse
 116:build/lnInclude/core_cmInstr.h ****     \return               Reversed value
 117:build/lnInclude/core_cmInstr.h ****  */
 118:build/lnInclude/core_cmInstr.h **** #define __REV                             __rev
 119:build/lnInclude/core_cmInstr.h **** 
 120:build/lnInclude/core_cmInstr.h **** 
 121:build/lnInclude/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 122:build/lnInclude/core_cmInstr.h **** 
 123:build/lnInclude/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 124:build/lnInclude/core_cmInstr.h **** 
 125:build/lnInclude/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:build/lnInclude/core_cmInstr.h ****     \return               Reversed value
 127:build/lnInclude/core_cmInstr.h ****  */
 128:build/lnInclude/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 129:build/lnInclude/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 130:build/lnInclude/core_cmInstr.h **** {
 131:build/lnInclude/core_cmInstr.h ****   rev16 r0, r0
 132:build/lnInclude/core_cmInstr.h ****   bx lr
 133:build/lnInclude/core_cmInstr.h **** }
 134:build/lnInclude/core_cmInstr.h **** #endif
 135:build/lnInclude/core_cmInstr.h **** 
 136:build/lnInclude/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 137:build/lnInclude/core_cmInstr.h **** 
 138:build/lnInclude/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 139:build/lnInclude/core_cmInstr.h **** 
 140:build/lnInclude/core_cmInstr.h ****     \param [in]    value  Value to reverse
 141:build/lnInclude/core_cmInstr.h ****     \return               Reversed value
 142:build/lnInclude/core_cmInstr.h ****  */
 143:build/lnInclude/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 144:build/lnInclude/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 145:build/lnInclude/core_cmInstr.h **** {
 146:build/lnInclude/core_cmInstr.h ****   revsh r0, r0
 147:build/lnInclude/core_cmInstr.h ****   bx lr
 148:build/lnInclude/core_cmInstr.h **** }
 149:build/lnInclude/core_cmInstr.h **** #endif
 150:build/lnInclude/core_cmInstr.h **** 
 151:build/lnInclude/core_cmInstr.h **** 
 152:build/lnInclude/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 153:build/lnInclude/core_cmInstr.h **** 
 154:build/lnInclude/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 155:build/lnInclude/core_cmInstr.h **** 
 156:build/lnInclude/core_cmInstr.h ****     \param [in]    value  Value to rotate
 157:build/lnInclude/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 158:build/lnInclude/core_cmInstr.h ****     \return               Rotated value
 159:build/lnInclude/core_cmInstr.h ****  */
 160:build/lnInclude/core_cmInstr.h **** #define __ROR                             __ror
 161:build/lnInclude/core_cmInstr.h **** 
 162:build/lnInclude/core_cmInstr.h **** 
 163:build/lnInclude/core_cmInstr.h **** /** \brief  Breakpoint
 164:build/lnInclude/core_cmInstr.h **** 
 165:build/lnInclude/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 166:build/lnInclude/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 167:build/lnInclude/core_cmInstr.h **** 
 168:build/lnInclude/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 169:build/lnInclude/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
ARM GAS  /tmp/cc5ofa7g.s 			page 10


 170:build/lnInclude/core_cmInstr.h ****  */
 171:build/lnInclude/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 172:build/lnInclude/core_cmInstr.h **** 
 173:build/lnInclude/core_cmInstr.h **** 
 174:build/lnInclude/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 175:build/lnInclude/core_cmInstr.h **** 
 176:build/lnInclude/core_cmInstr.h **** /** \brief  Reverse bit order of value
 177:build/lnInclude/core_cmInstr.h **** 
 178:build/lnInclude/core_cmInstr.h ****     This function reverses the bit order of the given value.
 179:build/lnInclude/core_cmInstr.h **** 
 180:build/lnInclude/core_cmInstr.h ****     \param [in]    value  Value to reverse
 181:build/lnInclude/core_cmInstr.h ****     \return               Reversed value
 182:build/lnInclude/core_cmInstr.h ****  */
 183:build/lnInclude/core_cmInstr.h **** #define __RBIT                            __rbit
 184:build/lnInclude/core_cmInstr.h **** 
 185:build/lnInclude/core_cmInstr.h **** 
 186:build/lnInclude/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 187:build/lnInclude/core_cmInstr.h **** 
 188:build/lnInclude/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 189:build/lnInclude/core_cmInstr.h **** 
 190:build/lnInclude/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 191:build/lnInclude/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 192:build/lnInclude/core_cmInstr.h ****  */
 193:build/lnInclude/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 194:build/lnInclude/core_cmInstr.h **** 
 195:build/lnInclude/core_cmInstr.h **** 
 196:build/lnInclude/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 197:build/lnInclude/core_cmInstr.h **** 
 198:build/lnInclude/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 199:build/lnInclude/core_cmInstr.h **** 
 200:build/lnInclude/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 201:build/lnInclude/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 202:build/lnInclude/core_cmInstr.h ****  */
 203:build/lnInclude/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 204:build/lnInclude/core_cmInstr.h **** 
 205:build/lnInclude/core_cmInstr.h **** 
 206:build/lnInclude/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 207:build/lnInclude/core_cmInstr.h **** 
 208:build/lnInclude/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 209:build/lnInclude/core_cmInstr.h **** 
 210:build/lnInclude/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 211:build/lnInclude/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 212:build/lnInclude/core_cmInstr.h ****  */
 213:build/lnInclude/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 214:build/lnInclude/core_cmInstr.h **** 
 215:build/lnInclude/core_cmInstr.h **** 
 216:build/lnInclude/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 217:build/lnInclude/core_cmInstr.h **** 
 218:build/lnInclude/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 219:build/lnInclude/core_cmInstr.h **** 
 220:build/lnInclude/core_cmInstr.h ****     \param [in]  value  Value to store
 221:build/lnInclude/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 222:build/lnInclude/core_cmInstr.h ****     \return          0  Function succeeded
 223:build/lnInclude/core_cmInstr.h ****     \return          1  Function failed
 224:build/lnInclude/core_cmInstr.h ****  */
 225:build/lnInclude/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 226:build/lnInclude/core_cmInstr.h **** 
ARM GAS  /tmp/cc5ofa7g.s 			page 11


 227:build/lnInclude/core_cmInstr.h **** 
 228:build/lnInclude/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 229:build/lnInclude/core_cmInstr.h **** 
 230:build/lnInclude/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 231:build/lnInclude/core_cmInstr.h **** 
 232:build/lnInclude/core_cmInstr.h ****     \param [in]  value  Value to store
 233:build/lnInclude/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 234:build/lnInclude/core_cmInstr.h ****     \return          0  Function succeeded
 235:build/lnInclude/core_cmInstr.h ****     \return          1  Function failed
 236:build/lnInclude/core_cmInstr.h ****  */
 237:build/lnInclude/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 238:build/lnInclude/core_cmInstr.h **** 
 239:build/lnInclude/core_cmInstr.h **** 
 240:build/lnInclude/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 241:build/lnInclude/core_cmInstr.h **** 
 242:build/lnInclude/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 243:build/lnInclude/core_cmInstr.h **** 
 244:build/lnInclude/core_cmInstr.h ****     \param [in]  value  Value to store
 245:build/lnInclude/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 246:build/lnInclude/core_cmInstr.h ****     \return          0  Function succeeded
 247:build/lnInclude/core_cmInstr.h ****     \return          1  Function failed
 248:build/lnInclude/core_cmInstr.h ****  */
 249:build/lnInclude/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 250:build/lnInclude/core_cmInstr.h **** 
 251:build/lnInclude/core_cmInstr.h **** 
 252:build/lnInclude/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 253:build/lnInclude/core_cmInstr.h **** 
 254:build/lnInclude/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 255:build/lnInclude/core_cmInstr.h **** 
 256:build/lnInclude/core_cmInstr.h ****  */
 257:build/lnInclude/core_cmInstr.h **** #define __CLREX                           __clrex
 258:build/lnInclude/core_cmInstr.h **** 
 259:build/lnInclude/core_cmInstr.h **** 
 260:build/lnInclude/core_cmInstr.h **** /** \brief  Signed Saturate
 261:build/lnInclude/core_cmInstr.h **** 
 262:build/lnInclude/core_cmInstr.h ****     This function saturates a signed value.
 263:build/lnInclude/core_cmInstr.h **** 
 264:build/lnInclude/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 265:build/lnInclude/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 266:build/lnInclude/core_cmInstr.h ****     \return             Saturated value
 267:build/lnInclude/core_cmInstr.h ****  */
 268:build/lnInclude/core_cmInstr.h **** #define __SSAT                            __ssat
 269:build/lnInclude/core_cmInstr.h **** 
 270:build/lnInclude/core_cmInstr.h **** 
 271:build/lnInclude/core_cmInstr.h **** /** \brief  Unsigned Saturate
 272:build/lnInclude/core_cmInstr.h **** 
 273:build/lnInclude/core_cmInstr.h ****     This function saturates an unsigned value.
 274:build/lnInclude/core_cmInstr.h **** 
 275:build/lnInclude/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 276:build/lnInclude/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 277:build/lnInclude/core_cmInstr.h ****     \return             Saturated value
 278:build/lnInclude/core_cmInstr.h ****  */
 279:build/lnInclude/core_cmInstr.h **** #define __USAT                            __usat
 280:build/lnInclude/core_cmInstr.h **** 
 281:build/lnInclude/core_cmInstr.h **** 
 282:build/lnInclude/core_cmInstr.h **** /** \brief  Count leading zeros
 283:build/lnInclude/core_cmInstr.h **** 
ARM GAS  /tmp/cc5ofa7g.s 			page 12


 284:build/lnInclude/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 285:build/lnInclude/core_cmInstr.h **** 
 286:build/lnInclude/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 287:build/lnInclude/core_cmInstr.h ****     \return             number of leading zeros in value
 288:build/lnInclude/core_cmInstr.h ****  */
 289:build/lnInclude/core_cmInstr.h **** #define __CLZ                             __clz
 290:build/lnInclude/core_cmInstr.h **** 
 291:build/lnInclude/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 292:build/lnInclude/core_cmInstr.h **** 
 293:build/lnInclude/core_cmInstr.h **** 
 294:build/lnInclude/core_cmInstr.h **** 
 295:build/lnInclude/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 296:build/lnInclude/core_cmInstr.h **** /* IAR iccarm specific functions */
 297:build/lnInclude/core_cmInstr.h **** 
 298:build/lnInclude/core_cmInstr.h **** #include <cmsis_iar.h>
 299:build/lnInclude/core_cmInstr.h **** 
 300:build/lnInclude/core_cmInstr.h **** 
 301:build/lnInclude/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 302:build/lnInclude/core_cmInstr.h **** /* TI CCS specific functions */
 303:build/lnInclude/core_cmInstr.h **** 
 304:build/lnInclude/core_cmInstr.h **** #include <cmsis_ccs.h>
 305:build/lnInclude/core_cmInstr.h **** 
 306:build/lnInclude/core_cmInstr.h **** 
 307:build/lnInclude/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 308:build/lnInclude/core_cmInstr.h **** /* GNU gcc specific functions */
 309:build/lnInclude/core_cmInstr.h **** 
 310:build/lnInclude/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 311:build/lnInclude/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 312:build/lnInclude/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 313:build/lnInclude/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 314:build/lnInclude/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 315:build/lnInclude/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 316:build/lnInclude/core_cmInstr.h **** #else
 317:build/lnInclude/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 318:build/lnInclude/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 319:build/lnInclude/core_cmInstr.h **** #endif
 320:build/lnInclude/core_cmInstr.h **** 
 321:build/lnInclude/core_cmInstr.h **** /** \brief  No Operation
 322:build/lnInclude/core_cmInstr.h **** 
 323:build/lnInclude/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 324:build/lnInclude/core_cmInstr.h ****  */
 325:build/lnInclude/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 326:build/lnInclude/core_cmInstr.h **** {
 327:build/lnInclude/core_cmInstr.h ****   __ASM volatile ("nop");
 328:build/lnInclude/core_cmInstr.h **** }
 329:build/lnInclude/core_cmInstr.h **** 
 330:build/lnInclude/core_cmInstr.h **** 
 331:build/lnInclude/core_cmInstr.h **** /** \brief  Wait For Interrupt
 332:build/lnInclude/core_cmInstr.h **** 
 333:build/lnInclude/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 334:build/lnInclude/core_cmInstr.h ****     until one of a number of events occurs.
 335:build/lnInclude/core_cmInstr.h ****  */
 336:build/lnInclude/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 337:build/lnInclude/core_cmInstr.h **** {
 338:build/lnInclude/core_cmInstr.h ****   __ASM volatile ("wfi");
 339:build/lnInclude/core_cmInstr.h **** }
 340:build/lnInclude/core_cmInstr.h **** 
ARM GAS  /tmp/cc5ofa7g.s 			page 13


 341:build/lnInclude/core_cmInstr.h **** 
 342:build/lnInclude/core_cmInstr.h **** /** \brief  Wait For Event
 343:build/lnInclude/core_cmInstr.h **** 
 344:build/lnInclude/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 345:build/lnInclude/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 346:build/lnInclude/core_cmInstr.h ****  */
 347:build/lnInclude/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 348:build/lnInclude/core_cmInstr.h **** {
 349:build/lnInclude/core_cmInstr.h ****   __ASM volatile ("wfe");
 350:build/lnInclude/core_cmInstr.h **** }
 351:build/lnInclude/core_cmInstr.h **** 
 352:build/lnInclude/core_cmInstr.h **** 
 353:build/lnInclude/core_cmInstr.h **** /** \brief  Send Event
 354:build/lnInclude/core_cmInstr.h **** 
 355:build/lnInclude/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 356:build/lnInclude/core_cmInstr.h ****  */
 357:build/lnInclude/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 358:build/lnInclude/core_cmInstr.h **** {
 359:build/lnInclude/core_cmInstr.h ****   __ASM volatile ("sev");
 360:build/lnInclude/core_cmInstr.h **** }
 361:build/lnInclude/core_cmInstr.h **** 
 362:build/lnInclude/core_cmInstr.h **** 
 363:build/lnInclude/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 364:build/lnInclude/core_cmInstr.h **** 
 365:build/lnInclude/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 366:build/lnInclude/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 367:build/lnInclude/core_cmInstr.h ****     memory, after the instruction has been completed.
 368:build/lnInclude/core_cmInstr.h ****  */
 369:build/lnInclude/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 370:build/lnInclude/core_cmInstr.h **** {
 371:build/lnInclude/core_cmInstr.h ****   __ASM volatile ("isb");
 372:build/lnInclude/core_cmInstr.h **** }
 373:build/lnInclude/core_cmInstr.h **** 
 374:build/lnInclude/core_cmInstr.h **** 
 375:build/lnInclude/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 376:build/lnInclude/core_cmInstr.h **** 
 377:build/lnInclude/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 378:build/lnInclude/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 379:build/lnInclude/core_cmInstr.h ****  */
 380:build/lnInclude/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 381:build/lnInclude/core_cmInstr.h **** {
 382:build/lnInclude/core_cmInstr.h ****   __ASM volatile ("dsb");
 383:build/lnInclude/core_cmInstr.h **** }
 384:build/lnInclude/core_cmInstr.h **** 
 385:build/lnInclude/core_cmInstr.h **** 
 386:build/lnInclude/core_cmInstr.h **** /** \brief  Data Memory Barrier
 387:build/lnInclude/core_cmInstr.h **** 
 388:build/lnInclude/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 389:build/lnInclude/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 390:build/lnInclude/core_cmInstr.h ****  */
 391:build/lnInclude/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
 392:build/lnInclude/core_cmInstr.h **** {
 393:build/lnInclude/core_cmInstr.h ****   __ASM volatile ("dmb");
 394:build/lnInclude/core_cmInstr.h **** }
 395:build/lnInclude/core_cmInstr.h **** 
 396:build/lnInclude/core_cmInstr.h **** 
 397:build/lnInclude/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
ARM GAS  /tmp/cc5ofa7g.s 			page 14


 398:build/lnInclude/core_cmInstr.h **** 
 399:build/lnInclude/core_cmInstr.h ****     This function reverses the byte order in integer value.
 400:build/lnInclude/core_cmInstr.h **** 
 401:build/lnInclude/core_cmInstr.h ****     \param [in]    value  Value to reverse
 402:build/lnInclude/core_cmInstr.h ****     \return               Reversed value
 403:build/lnInclude/core_cmInstr.h ****  */
 404:build/lnInclude/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __REV(uint32_t value)
 405:build/lnInclude/core_cmInstr.h **** {
 406:build/lnInclude/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 407:build/lnInclude/core_cmInstr.h ****   return __builtin_bswap32(value);
 141              		.loc 2 407 0
 142 0080 1BBA     		rev	r3, r3
 143              	.LVL16:
 144              	.LBE231:
 145              	.LBE230:
 126:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 146              		.loc 1 126 0
 147 0082 0693     		str	r3, [sp, #24]
 148              	.LVL17:
 128:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 149              		.loc 1 128 0
 150 0084 6B68     		ldr	r3, [r5, #4]
 151              	.LVL18:
 152              	.LBB232:
 153              	.LBB233:
 154              		.loc 2 407 0
 155 0086 1BBA     		rev	r3, r3
 156              	.LVL19:
 157              	.LBE233:
 158              	.LBE232:
 128:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 159              		.loc 1 128 0
 160 0088 0793     		str	r3, [sp, #28]
 161              	.LVL20:
 130:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 162              		.loc 1 130 0
 163 008a AB68     		ldr	r3, [r5, #8]
 164              	.LVL21:
 165              	.LBB234:
 166              	.LBB235:
 167              		.loc 2 407 0
 168 008c 1BBA     		rev	r3, r3
 169              	.LVL22:
 170              	.LBE235:
 171              	.LBE234:
 130:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 172              		.loc 1 130 0
 173 008e 0893     		str	r3, [sp, #32]
 174              	.LVL23:
 132:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 175              		.loc 1 132 0
 176 0090 EB68     		ldr	r3, [r5, #12]
 177              	.LVL24:
 178              	.LBB236:
 179              	.LBB237:
 180              		.loc 2 407 0
 181 0092 1BBA     		rev	r3, r3
ARM GAS  /tmp/cc5ofa7g.s 			page 15


 182              	.LVL25:
 183              	.LBE237:
 184              	.LBE236:
 132:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 185              		.loc 1 132 0
 186 0094 0993     		str	r3, [sp, #36]
 133:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 187              		.loc 1 133 0
 188 0096 C9E7     		b	.L2
 189              	.LVL26:
 190              	.L3:
 135:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 191              		.loc 1 135 0
 192 0098 4FF48073 		mov	r3, #256
 193 009c 0D93     		str	r3, [sp, #52]
 136:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 194              		.loc 1 136 0
 195 009e 2B68     		ldr	r3, [r5]
 196              	.LVL27:
 197              	.LBB238:
 198              	.LBB239:
 199              		.loc 2 407 0
 200 00a0 1BBA     		rev	r3, r3
 201              	.LVL28:
 202              	.LBE239:
 203              	.LBE238:
 136:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 204              		.loc 1 136 0
 205 00a2 0493     		str	r3, [sp, #16]
 206              	.LVL29:
 138:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 207              		.loc 1 138 0
 208 00a4 6B68     		ldr	r3, [r5, #4]
 209              	.LVL30:
 210              	.LBB240:
 211              	.LBB241:
 212              		.loc 2 407 0
 213 00a6 1BBA     		rev	r3, r3
 214              	.LVL31:
 215              	.LBE241:
 216              	.LBE240:
 138:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 217              		.loc 1 138 0
 218 00a8 0593     		str	r3, [sp, #20]
 219              	.LVL32:
 140:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 220              		.loc 1 140 0
 221 00aa AB68     		ldr	r3, [r5, #8]
 222              	.LVL33:
 223              	.LBB242:
 224              	.LBB243:
 225              		.loc 2 407 0
 226 00ac 1BBA     		rev	r3, r3
 227              	.LVL34:
 228              	.LBE243:
 229              	.LBE242:
 140:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 16


 230              		.loc 1 140 0
 231 00ae 0693     		str	r3, [sp, #24]
 232              	.LVL35:
 142:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 233              		.loc 1 142 0
 234 00b0 EB68     		ldr	r3, [r5, #12]
 235              	.LVL36:
 236              	.LBB244:
 237              	.LBB245:
 238              		.loc 2 407 0
 239 00b2 1BBA     		rev	r3, r3
 240              	.LVL37:
 241              	.LBE245:
 242              	.LBE244:
 142:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 243              		.loc 1 142 0
 244 00b4 0793     		str	r3, [sp, #28]
 245              	.LVL38:
 144:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 246              		.loc 1 144 0
 247 00b6 2B69     		ldr	r3, [r5, #16]
 248              	.LVL39:
 249              	.LBB246:
 250              	.LBB247:
 251              		.loc 2 407 0
 252 00b8 1BBA     		rev	r3, r3
 253              	.LVL40:
 254              	.LBE247:
 255              	.LBE246:
 144:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 256              		.loc 1 144 0
 257 00ba 0893     		str	r3, [sp, #32]
 258              	.LVL41:
 146:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 259              		.loc 1 146 0
 260 00bc 6B69     		ldr	r3, [r5, #20]
 261              	.LVL42:
 262              	.LBB248:
 263              	.LBB249:
 264              		.loc 2 407 0
 265 00be 1BBA     		rev	r3, r3
 266              	.LVL43:
 267              	.LBE249:
 268              	.LBE248:
 146:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 269              		.loc 1 146 0
 270 00c0 0993     		str	r3, [sp, #36]
 147:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 271              		.loc 1 147 0
 272 00c2 B3E7     		b	.L2
 273              	.LVL44:
 274              	.L4:
 149:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 275              		.loc 1 149 0
 276 00c4 4FF40073 		mov	r3, #512
 277 00c8 0D93     		str	r3, [sp, #52]
 150:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 17


 278              		.loc 1 150 0
 279 00ca 2B68     		ldr	r3, [r5]
 280              	.LVL45:
 281              	.LBB250:
 282              	.LBB251:
 283              		.loc 2 407 0
 284 00cc 1BBA     		rev	r3, r3
 285              	.LVL46:
 286              	.LBE251:
 287              	.LBE250:
 150:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 288              		.loc 1 150 0
 289 00ce 0293     		str	r3, [sp, #8]
 290              	.LVL47:
 152:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 291              		.loc 1 152 0
 292 00d0 6B68     		ldr	r3, [r5, #4]
 293              	.LVL48:
 294              	.LBB252:
 295              	.LBB253:
 296              		.loc 2 407 0
 297 00d2 1BBA     		rev	r3, r3
 298              	.LVL49:
 299              	.LBE253:
 300              	.LBE252:
 152:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 301              		.loc 1 152 0
 302 00d4 0393     		str	r3, [sp, #12]
 303              	.LVL50:
 154:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 304              		.loc 1 154 0
 305 00d6 AB68     		ldr	r3, [r5, #8]
 306              	.LVL51:
 307              	.LBB254:
 308              	.LBB255:
 309              		.loc 2 407 0
 310 00d8 1BBA     		rev	r3, r3
 311              	.LVL52:
 312              	.LBE255:
 313              	.LBE254:
 154:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 314              		.loc 1 154 0
 315 00da 0493     		str	r3, [sp, #16]
 316              	.LVL53:
 156:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 317              		.loc 1 156 0
 318 00dc EB68     		ldr	r3, [r5, #12]
 319              	.LVL54:
 320              	.LBB256:
 321              	.LBB257:
 322              		.loc 2 407 0
 323 00de 1BBA     		rev	r3, r3
 324              	.LVL55:
 325              	.LBE257:
 326              	.LBE256:
 156:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 327              		.loc 1 156 0
ARM GAS  /tmp/cc5ofa7g.s 			page 18


 328 00e0 0593     		str	r3, [sp, #20]
 329              	.LVL56:
 158:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 330              		.loc 1 158 0
 331 00e2 2B69     		ldr	r3, [r5, #16]
 332              	.LVL57:
 333              	.LBB258:
 334              	.LBB259:
 335              		.loc 2 407 0
 336 00e4 1BBA     		rev	r3, r3
 337              	.LVL58:
 338              	.LBE259:
 339              	.LBE258:
 158:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 340              		.loc 1 158 0
 341 00e6 0693     		str	r3, [sp, #24]
 342              	.LVL59:
 160:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 343              		.loc 1 160 0
 344 00e8 6B69     		ldr	r3, [r5, #20]
 345              	.LVL60:
 346              	.LBB260:
 347              	.LBB261:
 348              		.loc 2 407 0
 349 00ea 1BBA     		rev	r3, r3
 350              	.LVL61:
 351              	.LBE261:
 352              	.LBE260:
 160:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 353              		.loc 1 160 0
 354 00ec 0793     		str	r3, [sp, #28]
 355              	.LVL62:
 162:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 356              		.loc 1 162 0
 357 00ee AB69     		ldr	r3, [r5, #24]
 358              	.LVL63:
 359              	.LBB262:
 360              	.LBB263:
 361              		.loc 2 407 0
 362 00f0 1BBA     		rev	r3, r3
 363              	.LVL64:
 364              	.LBE263:
 365              	.LBE262:
 162:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 366              		.loc 1 162 0
 367 00f2 0893     		str	r3, [sp, #32]
 368              	.LVL65:
 164:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 369              		.loc 1 164 0
 370 00f4 EB69     		ldr	r3, [r5, #28]
 371              	.LVL66:
 372              	.LBB264:
 373              	.LBB265:
 374              		.loc 2 407 0
 375 00f6 1BBA     		rev	r3, r3
 376              	.LVL67:
 377              	.LBE265:
ARM GAS  /tmp/cc5ofa7g.s 			page 19


 378              	.LBE264:
 164:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 379              		.loc 1 164 0
 380 00f8 0993     		str	r3, [sp, #36]
 165:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 381              		.loc 1 165 0
 382 00fa 97E7     		b	.L2
 383              	.LVL68:
 384              	.L6:
 203:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 204:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 205:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 206:./FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 207:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 208:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 209:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 385              		.loc 1 209 0
 386 00fc 02A8     		add	r0, sp, #8
 387 00fe FFF7FEFF 		bl	CRYP_KeyInit
 388              	.LVL69:
 210:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 211:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 212:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 389              		.loc 1 212 0
 390 0102 0023     		movs	r3, #0
 391 0104 0A93     		str	r3, [sp, #40]
 113:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 392              		.loc 1 113 0
 393 0106 0126     		movs	r6, #1
 394              	.LVL70:
 395              	.L9:
 213:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 214:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 215:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_ECB;
 396              		.loc 1 215 0
 397 0108 2023     		movs	r3, #32
 398 010a 0B93     		str	r3, [sp, #44]
 216:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 399              		.loc 1 216 0
 400 010c 8023     		movs	r3, #128
 401 010e 0C93     		str	r3, [sp, #48]
 217:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 402              		.loc 1 217 0
 403 0110 0AA8     		add	r0, sp, #40
 404 0112 FFF7FEFF 		bl	CRYP_Init
 405              	.LVL71:
 218:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 219:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 220:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 406              		.loc 1 220 0
 407 0116 FFF7FEFF 		bl	CRYP_FIFOFlush
 408              	.LVL72:
 221:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 222:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 223:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 409              		.loc 1 223 0
 410 011a 0120     		movs	r0, #1
ARM GAS  /tmp/cc5ofa7g.s 			page 20


 411 011c FFF7FEFF 		bl	CRYP_Cmd
 412              	.LVL73:
 224:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 225:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 413              		.loc 1 225 0
 414 0120 FFF7FEFF 		bl	CRYP_GetCmdStatus
 415              	.LVL74:
 416 0124 0028     		cmp	r0, #0
 417 0126 3BD0     		beq	.L18
 226:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 227:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 228:./FWLIB/src/stm32f4xx_cryp_aes.c ****        the CRYP peripheral (please check the device sales type. */
 229:./FWLIB/src/stm32f4xx_cryp_aes.c ****     return(ERROR);
 230:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 231:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
 232:./FWLIB/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 418              		.loc 1 232 0
 419 0128 0025     		movs	r5, #0
 420              	.LVL75:
 421 012a 04E0     		b	.L11
 422              	.LVL76:
 423              	.L17:
 197:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 424              		.loc 1 197 0
 425 012c 0026     		movs	r6, #0
 426 012e EBE7     		b	.L9
 427              	.LVL77:
 428              	.L12:
 233:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 234:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 235:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 236:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 237:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 238:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 239:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 240:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 241:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 242:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 243:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 244:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 245:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 246:./FWLIB/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 247:./FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 248:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 249:./FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 250:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 251:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 252:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 253:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 429              		.loc 1 253 0
 430 0130 0AB3     		cbz	r2, .L22
 254:./FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 255:./FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 431              		.loc 1 255 0
 432 0132 0026     		movs	r6, #0
 433              	.LVL78:
 434              	.L14:
ARM GAS  /tmp/cc5ofa7g.s 			page 21


 232:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 435              		.loc 1 232 0 discriminator 2
 436 0134 1035     		adds	r5, r5, #16
 437              	.LVL79:
 438              	.L11:
 232:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 439              		.loc 1 232 0 is_stmt 0 discriminator 1
 440 0136 4545     		cmp	r5, r8
 441 0138 2BD2     		bcs	.L15
 232:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 442              		.loc 1 232 0 discriminator 3
 443 013a 56B3     		cbz	r6, .L15
 236:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 444              		.loc 1 236 0 is_stmt 1
 445 013c 2068     		ldr	r0, [r4]
 446 013e FFF7FEFF 		bl	CRYP_DataIn
 447              	.LVL80:
 238:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 448              		.loc 1 238 0
 449 0142 6068     		ldr	r0, [r4, #4]
 450 0144 FFF7FEFF 		bl	CRYP_DataIn
 451              	.LVL81:
 240:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 452              		.loc 1 240 0
 453 0148 A068     		ldr	r0, [r4, #8]
 454 014a FFF7FEFF 		bl	CRYP_DataIn
 455              	.LVL82:
 242:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 456              		.loc 1 242 0
 457 014e E068     		ldr	r0, [r4, #12]
 458 0150 FFF7FEFF 		bl	CRYP_DataIn
 459              	.LVL83:
 243:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 460              		.loc 1 243 0
 461 0154 1034     		adds	r4, r4, #16
 462              	.LVL84:
 246:./FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 463              		.loc 1 246 0
 464 0156 0023     		movs	r3, #0
 465 0158 0193     		str	r3, [sp, #4]
 466              	.L13:
 249:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 467              		.loc 1 249 0 discriminator 2
 468 015a 1020     		movs	r0, #16
 469 015c FFF7FEFF 		bl	CRYP_GetFlagStatus
 470              	.LVL85:
 471 0160 0246     		mov	r2, r0
 472              	.LVL86:
 250:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 473              		.loc 1 250 0 discriminator 2
 474 0162 019B     		ldr	r3, [sp, #4]
 475 0164 0133     		adds	r3, r3, #1
 476 0166 0193     		str	r3, [sp, #4]
 251:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 477              		.loc 1 251 0 discriminator 2
 478 0168 019B     		ldr	r3, [sp, #4]
 479 016a B3F5803F 		cmp	r3, #65536
ARM GAS  /tmp/cc5ofa7g.s 			page 22


 480 016e DFD0     		beq	.L12
 251:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 481              		.loc 1 251 0 is_stmt 0 discriminator 1
 482 0170 0028     		cmp	r0, #0
 483 0172 F2D1     		bne	.L13
 484 0174 DCE7     		b	.L12
 485              	.L22:
 256:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 257:./FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 258:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 259:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 260:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 261:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 486              		.loc 1 261 0 is_stmt 1
 487 0176 FFF7FEFF 		bl	CRYP_DataOut
 488              	.LVL87:
 489 017a 3860     		str	r0, [r7]
 490              	.LVL88:
 262:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 263:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 491              		.loc 1 263 0
 492 017c FFF7FEFF 		bl	CRYP_DataOut
 493              	.LVL89:
 494 0180 7860     		str	r0, [r7, #4]
 495              	.LVL90:
 264:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 265:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 496              		.loc 1 265 0
 497 0182 FFF7FEFF 		bl	CRYP_DataOut
 498              	.LVL91:
 499 0186 B860     		str	r0, [r7, #8]
 500              	.LVL92:
 266:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 267:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut(); 
 501              		.loc 1 267 0
 502 0188 FFF7FEFF 		bl	CRYP_DataOut
 503              	.LVL93:
 504 018c F860     		str	r0, [r7, #12]
 268:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 505              		.loc 1 268 0
 506 018e 1037     		adds	r7, r7, #16
 507              	.LVL94:
 508 0190 D0E7     		b	.L14
 509              	.L15:
 269:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 270:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 271:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 272:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 273:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 510              		.loc 1 273 0
 511 0192 0020     		movs	r0, #0
 512 0194 FFF7FEFF 		bl	CRYP_Cmd
 513              	.LVL95:
 514              	.L10:
 274:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 275:./FWLIB/src/stm32f4xx_cryp_aes.c ****   return status; 
 276:./FWLIB/src/stm32f4xx_cryp_aes.c **** }
ARM GAS  /tmp/cc5ofa7g.s 			page 23


 515              		.loc 1 276 0
 516 0198 3046     		mov	r0, r6
 517 019a 0FB0     		add	sp, sp, #60
 518              	.LCFI2:
 519              		.cfi_remember_state
 520              		.cfi_def_cfa_offset 28
 521              		@ sp needed
 522 019c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 523              	.LVL96:
 524              	.L18:
 525              	.LCFI3:
 526              		.cfi_restore_state
 229:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 527              		.loc 1 229 0
 528 01a0 0026     		movs	r6, #0
 529              	.LVL97:
 530 01a2 F9E7     		b	.L10
 531              		.cfi_endproc
 532              	.LFE112:
 534              		.section	.text.CRYP_AES_CBC,"ax",%progbits
 535              		.align	1
 536              		.global	CRYP_AES_CBC
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 540              		.fpu fpv4-sp-d16
 542              	CRYP_AES_CBC:
 543              	.LFB113:
 277:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 278:./FWLIB/src/stm32f4xx_cryp_aes.c **** /**
 279:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CBC Mode
 280:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 281:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
 282:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 283:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 284:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 285:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 286:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 287:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 288:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 289:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 290:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 291:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 292:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 293:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
 294:./FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CBC(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key,
 295:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 296:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 297:./FWLIB/src/stm32f4xx_cryp_aes.c **** {
 544              		.loc 1 297 0
 545              		.cfi_startproc
 546              		@ args = 12, pretend = 0, frame = 72
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              	.LVL98:
 549 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 550              	.LCFI4:
 551              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/cc5ofa7g.s 			page 24


 552              		.cfi_offset 4, -32
 553              		.cfi_offset 5, -28
 554              		.cfi_offset 6, -24
 555              		.cfi_offset 7, -20
 556              		.cfi_offset 8, -16
 557              		.cfi_offset 9, -12
 558              		.cfi_offset 10, -8
 559              		.cfi_offset 14, -4
 560 0004 92B0     		sub	sp, sp, #72
 561              	.LCFI5:
 562              		.cfi_def_cfa_offset 104
 563 0006 8146     		mov	r9, r0
 564 0008 0E46     		mov	r6, r1
 565 000a 1546     		mov	r5, r2
 566 000c 9A46     		mov	r10, r3
 567 000e DDF86C80 		ldr	r8, [sp, #108]
 298:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 299:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 300:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 301:./FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 568              		.loc 1 301 0
 569 0012 0023     		movs	r3, #0
 570              	.LVL99:
 571 0014 0193     		str	r3, [sp, #4]
 572              	.LVL100:
 302:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 303:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 304:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 305:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 573              		.loc 1 305 0
 574 0016 1A9C     		ldr	r4, [sp, #104]
 575              	.LVL101:
 306:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 576              		.loc 1 306 0
 577 0018 1C9F     		ldr	r7, [sp, #112]
 578              	.LVL102:
 307:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr = (uint32_t)InitVectors;
 308:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 309:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 310:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 311:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 579              		.loc 1 311 0
 580 001a 06A8     		add	r0, sp, #24
 581              	.LVL103:
 582 001c FFF7FEFF 		bl	CRYP_KeyStructInit
 583              	.LVL104:
 312:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 313:./FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 584              		.loc 1 313 0
 585 0020 BAF1C00F 		cmp	r10, #192
 586 0024 47D0     		beq	.L25
 587 0026 BAF5807F 		cmp	r10, #256
 588 002a 5AD0     		beq	.L26
 589 002c BAF1800F 		cmp	r10, #128
 590 0030 32D0     		beq	.L43
 591              	.LVL105:
 592              	.L24:
ARM GAS  /tmp/cc5ofa7g.s 			page 25


 314:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 315:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
 316:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 317:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 318:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 319:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 320:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 321:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 322:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 323:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 324:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 325:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 326:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 327:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 328:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 329:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 330:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 331:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 332:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 333:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 334:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 335:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 336:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 337:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 338:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 339:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 340:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 341:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 342:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 343:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 344:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 345:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 346:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 347:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 348:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 349:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 350:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 351:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 352:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 353:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 354:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 355:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 356:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 357:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 358:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 359:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 360:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 361:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 362:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 593              		.loc 1 362 0
 594 0032 3368     		ldr	r3, [r6]
 595              	.LVL106:
 596              	.LBB266:
 597              	.LBB267:
 598              		.loc 2 407 0
 599 0034 1BBA     		rev	r3, r3
 600              	.LVL107:
ARM GAS  /tmp/cc5ofa7g.s 			page 26


 601              	.LBE267:
 602              	.LBE266:
 603              		.loc 1 362 0
 604 0036 0293     		str	r3, [sp, #8]
 605              	.LVL108:
 363:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 364:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 606              		.loc 1 364 0
 607 0038 7368     		ldr	r3, [r6, #4]
 608              	.LVL109:
 609              	.LBB268:
 610              	.LBB269:
 611              		.loc 2 407 0
 612 003a 1BBA     		rev	r3, r3
 613              	.LVL110:
 614              	.LBE269:
 615              	.LBE268:
 616              		.loc 1 364 0
 617 003c 0393     		str	r3, [sp, #12]
 618              	.LVL111:
 365:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 366:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 619              		.loc 1 366 0
 620 003e B368     		ldr	r3, [r6, #8]
 621              	.LVL112:
 622              	.LBB270:
 623              	.LBB271:
 624              		.loc 2 407 0
 625 0040 1BBA     		rev	r3, r3
 626              	.LVL113:
 627              	.LBE271:
 628              	.LBE270:
 629              		.loc 1 366 0
 630 0042 0493     		str	r3, [sp, #16]
 631              	.LVL114:
 367:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 368:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 632              		.loc 1 368 0
 633 0044 F368     		ldr	r3, [r6, #12]
 634              	.LVL115:
 635              	.LBB272:
 636              	.LBB273:
 637              		.loc 2 407 0
 638 0046 1BBA     		rev	r3, r3
 639              	.LVL116:
 640              	.LBE273:
 641              	.LBE272:
 642              		.loc 1 368 0
 643 0048 0593     		str	r3, [sp, #20]
 369:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 370:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 371:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 372:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 644              		.loc 1 372 0
 645 004a B9F1000F 		cmp	r9, #0
 646 004e 64D1     		bne	.L28
 373:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
ARM GAS  /tmp/cc5ofa7g.s 			page 27


 374:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 375:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 647              		.loc 1 375 0
 648 0050 FFF7FEFF 		bl	CRYP_FIFOFlush
 649              	.LVL117:
 376:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 377:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 378:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 650              		.loc 1 378 0
 651 0054 0423     		movs	r3, #4
 652 0056 0E93     		str	r3, [sp, #56]
 379:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 653              		.loc 1 379 0
 654 0058 3823     		movs	r3, #56
 655 005a 0F93     		str	r3, [sp, #60]
 380:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 656              		.loc 1 380 0
 657 005c 0023     		movs	r3, #0
 658 005e 1093     		str	r3, [sp, #64]
 381:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 382:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 659              		.loc 1 382 0
 660 0060 0EA8     		add	r0, sp, #56
 661 0062 FFF7FEFF 		bl	CRYP_Init
 662              	.LVL118:
 383:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 384:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 385:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 663              		.loc 1 385 0
 664 0066 06A8     		add	r0, sp, #24
 665 0068 FFF7FEFF 		bl	CRYP_KeyInit
 666              	.LVL119:
 386:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 387:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 388:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 667              		.loc 1 388 0
 668 006c 0120     		movs	r0, #1
 669 006e FFF7FEFF 		bl	CRYP_Cmd
 670              	.LVL120:
 671              	.L30:
 389:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 390:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 391:./FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 392:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 393:./FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 672              		.loc 1 393 0 discriminator 2
 673 0072 1020     		movs	r0, #16
 674 0074 FFF7FEFF 		bl	CRYP_GetFlagStatus
 675              	.LVL121:
 676 0078 0246     		mov	r2, r0
 677              	.LVL122:
 394:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 678              		.loc 1 394 0 discriminator 2
 679 007a 019B     		ldr	r3, [sp, #4]
 680 007c 0133     		adds	r3, r3, #1
 681 007e 0193     		str	r3, [sp, #4]
 395:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
ARM GAS  /tmp/cc5ofa7g.s 			page 28


 682              		.loc 1 395 0 discriminator 2
 683 0080 019B     		ldr	r3, [sp, #4]
 684 0082 B3F5803F 		cmp	r3, #65536
 685 0086 01D0     		beq	.L29
 686              		.loc 1 395 0 is_stmt 0 discriminator 1
 687 0088 0028     		cmp	r0, #0
 688 008a F2D1     		bne	.L30
 689              	.L29:
 396:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 397:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 690              		.loc 1 397 0 is_stmt 1
 691 008c 002A     		cmp	r2, #0
 692 008e 5FD1     		bne	.L39
 398:./FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 399:./FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 400:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 401:./FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 402:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 403:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 404:./FWLIB/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 693              		.loc 1 404 0
 694 0090 0423     		movs	r3, #4
 695 0092 0E93     		str	r3, [sp, #56]
 303:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 696              		.loc 1 303 0
 697 0094 0126     		movs	r6, #1
 698              	.LVL123:
 699 0096 46E0     		b	.L31
 700              	.LVL124:
 701              	.L43:
 316:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 702              		.loc 1 316 0
 703 0098 0023     		movs	r3, #0
 704 009a 1193     		str	r3, [sp, #68]
 317:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 705              		.loc 1 317 0
 706 009c 2B68     		ldr	r3, [r5]
 707              	.LVL125:
 708              	.LBB274:
 709              	.LBB275:
 710              		.loc 2 407 0
 711 009e 1BBA     		rev	r3, r3
 712              	.LVL126:
 713              	.LBE275:
 714              	.LBE274:
 317:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 715              		.loc 1 317 0
 716 00a0 0A93     		str	r3, [sp, #40]
 717              	.LVL127:
 319:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 718              		.loc 1 319 0
 719 00a2 6B68     		ldr	r3, [r5, #4]
 720              	.LVL128:
 721              	.LBB276:
 722              	.LBB277:
 723              		.loc 2 407 0
 724 00a4 1BBA     		rev	r3, r3
ARM GAS  /tmp/cc5ofa7g.s 			page 29


 725              	.LVL129:
 726              	.LBE277:
 727              	.LBE276:
 319:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 728              		.loc 1 319 0
 729 00a6 0B93     		str	r3, [sp, #44]
 730              	.LVL130:
 321:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 731              		.loc 1 321 0
 732 00a8 AB68     		ldr	r3, [r5, #8]
 733              	.LVL131:
 734              	.LBB278:
 735              	.LBB279:
 736              		.loc 2 407 0
 737 00aa 1BBA     		rev	r3, r3
 738              	.LVL132:
 739              	.LBE279:
 740              	.LBE278:
 321:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 741              		.loc 1 321 0
 742 00ac 0C93     		str	r3, [sp, #48]
 743              	.LVL133:
 323:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 744              		.loc 1 323 0
 745 00ae EB68     		ldr	r3, [r5, #12]
 746              	.LVL134:
 747              	.LBB280:
 748              	.LBB281:
 749              		.loc 2 407 0
 750 00b0 1BBA     		rev	r3, r3
 751              	.LVL135:
 752              	.LBE281:
 753              	.LBE280:
 323:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 754              		.loc 1 323 0
 755 00b2 0D93     		str	r3, [sp, #52]
 324:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 756              		.loc 1 324 0
 757 00b4 BDE7     		b	.L24
 758              	.LVL136:
 759              	.L25:
 326:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 760              		.loc 1 326 0
 761 00b6 4FF48073 		mov	r3, #256
 762 00ba 1193     		str	r3, [sp, #68]
 327:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 763              		.loc 1 327 0
 764 00bc 2B68     		ldr	r3, [r5]
 765              	.LVL137:
 766              	.LBB282:
 767              	.LBB283:
 768              		.loc 2 407 0
 769 00be 1BBA     		rev	r3, r3
 770              	.LVL138:
 771              	.LBE283:
 772              	.LBE282:
 327:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 30


 773              		.loc 1 327 0
 774 00c0 0893     		str	r3, [sp, #32]
 775              	.LVL139:
 329:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 776              		.loc 1 329 0
 777 00c2 6B68     		ldr	r3, [r5, #4]
 778              	.LVL140:
 779              	.LBB284:
 780              	.LBB285:
 781              		.loc 2 407 0
 782 00c4 1BBA     		rev	r3, r3
 783              	.LVL141:
 784              	.LBE285:
 785              	.LBE284:
 329:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 786              		.loc 1 329 0
 787 00c6 0993     		str	r3, [sp, #36]
 788              	.LVL142:
 331:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 789              		.loc 1 331 0
 790 00c8 AB68     		ldr	r3, [r5, #8]
 791              	.LVL143:
 792              	.LBB286:
 793              	.LBB287:
 794              		.loc 2 407 0
 795 00ca 1BBA     		rev	r3, r3
 796              	.LVL144:
 797              	.LBE287:
 798              	.LBE286:
 331:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 799              		.loc 1 331 0
 800 00cc 0A93     		str	r3, [sp, #40]
 801              	.LVL145:
 333:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 802              		.loc 1 333 0
 803 00ce EB68     		ldr	r3, [r5, #12]
 804              	.LVL146:
 805              	.LBB288:
 806              	.LBB289:
 807              		.loc 2 407 0
 808 00d0 1BBA     		rev	r3, r3
 809              	.LVL147:
 810              	.LBE289:
 811              	.LBE288:
 333:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 812              		.loc 1 333 0
 813 00d2 0B93     		str	r3, [sp, #44]
 814              	.LVL148:
 335:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 815              		.loc 1 335 0
 816 00d4 2B69     		ldr	r3, [r5, #16]
 817              	.LVL149:
 818              	.LBB290:
 819              	.LBB291:
 820              		.loc 2 407 0
 821 00d6 1BBA     		rev	r3, r3
 822              	.LVL150:
ARM GAS  /tmp/cc5ofa7g.s 			page 31


 823              	.LBE291:
 824              	.LBE290:
 335:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 825              		.loc 1 335 0
 826 00d8 0C93     		str	r3, [sp, #48]
 827              	.LVL151:
 337:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 828              		.loc 1 337 0
 829 00da 6B69     		ldr	r3, [r5, #20]
 830              	.LVL152:
 831              	.LBB292:
 832              	.LBB293:
 833              		.loc 2 407 0
 834 00dc 1BBA     		rev	r3, r3
 835              	.LVL153:
 836              	.LBE293:
 837              	.LBE292:
 337:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 838              		.loc 1 337 0
 839 00de 0D93     		str	r3, [sp, #52]
 338:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 840              		.loc 1 338 0
 841 00e0 A7E7     		b	.L24
 842              	.LVL154:
 843              	.L26:
 340:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 844              		.loc 1 340 0
 845 00e2 4FF40073 		mov	r3, #512
 846 00e6 1193     		str	r3, [sp, #68]
 341:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 847              		.loc 1 341 0
 848 00e8 2B68     		ldr	r3, [r5]
 849              	.LVL155:
 850              	.LBB294:
 851              	.LBB295:
 852              		.loc 2 407 0
 853 00ea 1BBA     		rev	r3, r3
 854              	.LVL156:
 855              	.LBE295:
 856              	.LBE294:
 341:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 857              		.loc 1 341 0
 858 00ec 0693     		str	r3, [sp, #24]
 859              	.LVL157:
 343:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 860              		.loc 1 343 0
 861 00ee 6B68     		ldr	r3, [r5, #4]
 862              	.LVL158:
 863              	.LBB296:
 864              	.LBB297:
 865              		.loc 2 407 0
 866 00f0 1BBA     		rev	r3, r3
 867              	.LVL159:
 868              	.LBE297:
 869              	.LBE296:
 343:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 870              		.loc 1 343 0
ARM GAS  /tmp/cc5ofa7g.s 			page 32


 871 00f2 0793     		str	r3, [sp, #28]
 872              	.LVL160:
 345:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 873              		.loc 1 345 0
 874 00f4 AB68     		ldr	r3, [r5, #8]
 875              	.LVL161:
 876              	.LBB298:
 877              	.LBB299:
 878              		.loc 2 407 0
 879 00f6 1BBA     		rev	r3, r3
 880              	.LVL162:
 881              	.LBE299:
 882              	.LBE298:
 345:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 883              		.loc 1 345 0
 884 00f8 0893     		str	r3, [sp, #32]
 885              	.LVL163:
 347:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 886              		.loc 1 347 0
 887 00fa EB68     		ldr	r3, [r5, #12]
 888              	.LVL164:
 889              	.LBB300:
 890              	.LBB301:
 891              		.loc 2 407 0
 892 00fc 1BBA     		rev	r3, r3
 893              	.LVL165:
 894              	.LBE301:
 895              	.LBE300:
 347:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 896              		.loc 1 347 0
 897 00fe 0993     		str	r3, [sp, #36]
 898              	.LVL166:
 349:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 899              		.loc 1 349 0
 900 0100 2B69     		ldr	r3, [r5, #16]
 901              	.LVL167:
 902              	.LBB302:
 903              	.LBB303:
 904              		.loc 2 407 0
 905 0102 1BBA     		rev	r3, r3
 906              	.LVL168:
 907              	.LBE303:
 908              	.LBE302:
 349:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 909              		.loc 1 349 0
 910 0104 0A93     		str	r3, [sp, #40]
 911              	.LVL169:
 351:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 912              		.loc 1 351 0
 913 0106 6B69     		ldr	r3, [r5, #20]
 914              	.LVL170:
 915              	.LBB304:
 916              	.LBB305:
 917              		.loc 2 407 0
 918 0108 1BBA     		rev	r3, r3
 919              	.LVL171:
 920              	.LBE305:
ARM GAS  /tmp/cc5ofa7g.s 			page 33


 921              	.LBE304:
 351:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 922              		.loc 1 351 0
 923 010a 0B93     		str	r3, [sp, #44]
 924              	.LVL172:
 353:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 925              		.loc 1 353 0
 926 010c AB69     		ldr	r3, [r5, #24]
 927              	.LVL173:
 928              	.LBB306:
 929              	.LBB307:
 930              		.loc 2 407 0
 931 010e 1BBA     		rev	r3, r3
 932              	.LVL174:
 933              	.LBE307:
 934              	.LBE306:
 353:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 935              		.loc 1 353 0
 936 0110 0C93     		str	r3, [sp, #48]
 937              	.LVL175:
 355:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 938              		.loc 1 355 0
 939 0112 EB69     		ldr	r3, [r5, #28]
 940              	.LVL176:
 941              	.LBB308:
 942              	.LBB309:
 943              		.loc 2 407 0
 944 0114 1BBA     		rev	r3, r3
 945              	.LVL177:
 946              	.LBE309:
 947              	.LBE308:
 355:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 948              		.loc 1 355 0
 949 0116 0D93     		str	r3, [sp, #52]
 356:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 950              		.loc 1 356 0
 951 0118 8BE7     		b	.L24
 952              	.LVL178:
 953              	.L28:
 405:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 406:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 407:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 408:./FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 409:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 410:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 954              		.loc 1 410 0
 955 011a 06A8     		add	r0, sp, #24
 956 011c FFF7FEFF 		bl	CRYP_KeyInit
 957              	.LVL179:
 411:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 412:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 413:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 958              		.loc 1 413 0
 959 0120 0023     		movs	r3, #0
 960 0122 0E93     		str	r3, [sp, #56]
 303:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 961              		.loc 1 303 0
ARM GAS  /tmp/cc5ofa7g.s 			page 34


 962 0124 0126     		movs	r6, #1
 963              	.LVL180:
 964              	.L31:
 414:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 415:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CBC;
 965              		.loc 1 415 0
 966 0126 2823     		movs	r3, #40
 967 0128 0F93     		str	r3, [sp, #60]
 416:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 968              		.loc 1 416 0
 969 012a 8023     		movs	r3, #128
 970 012c 1093     		str	r3, [sp, #64]
 417:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 971              		.loc 1 417 0
 972 012e 0EA8     		add	r0, sp, #56
 973 0130 FFF7FEFF 		bl	CRYP_Init
 974              	.LVL181:
 418:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 419:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 420:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 975              		.loc 1 420 0
 976 0134 02A8     		add	r0, sp, #8
 977 0136 FFF7FEFF 		bl	CRYP_IVInit
 978              	.LVL182:
 421:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 422:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 423:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 979              		.loc 1 423 0
 980 013a FFF7FEFF 		bl	CRYP_FIFOFlush
 981              	.LVL183:
 424:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 425:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 426:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 982              		.loc 1 426 0
 983 013e 0120     		movs	r0, #1
 984 0140 FFF7FEFF 		bl	CRYP_Cmd
 985              	.LVL184:
 427:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 428:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 986              		.loc 1 428 0
 987 0144 FFF7FEFF 		bl	CRYP_GetCmdStatus
 988              	.LVL185:
 989 0148 0028     		cmp	r0, #0
 990 014a 3BD0     		beq	.L40
 429:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 430:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 431:./FWLIB/src/stm32f4xx_cryp_aes.c ****        the CRYP peripheral (please check the device sales type. */
 432:./FWLIB/src/stm32f4xx_cryp_aes.c ****     return(ERROR);
 433:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 434:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
 435:./FWLIB/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 991              		.loc 1 435 0
 992 014c 0025     		movs	r5, #0
 993              	.LVL186:
 994 014e 04E0     		b	.L33
 995              	.LVL187:
 996              	.L39:
ARM GAS  /tmp/cc5ofa7g.s 			page 35


 399:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 997              		.loc 1 399 0
 998 0150 0026     		movs	r6, #0
 999              	.LVL188:
 1000 0152 E8E7     		b	.L31
 1001              	.LVL189:
 1002              	.L34:
 436:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 437:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 438:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 439:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 440:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 441:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 442:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 443:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 444:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 445:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 446:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 447:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 448:./FWLIB/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 449:./FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 450:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 451:./FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 452:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 453:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 454:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 455:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1003              		.loc 1 455 0
 1004 0154 0AB3     		cbz	r2, .L44
 456:./FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 457:./FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1005              		.loc 1 457 0
 1006 0156 0026     		movs	r6, #0
 1007              	.LVL190:
 1008              	.L36:
 435:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1009              		.loc 1 435 0 discriminator 2
 1010 0158 1035     		adds	r5, r5, #16
 1011              	.LVL191:
 1012              	.L33:
 435:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1013              		.loc 1 435 0 is_stmt 0 discriminator 1
 1014 015a 4545     		cmp	r5, r8
 1015 015c 2BD2     		bcs	.L37
 435:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1016              		.loc 1 435 0 discriminator 3
 1017 015e 56B3     		cbz	r6, .L37
 439:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1018              		.loc 1 439 0 is_stmt 1
 1019 0160 2068     		ldr	r0, [r4]
 1020 0162 FFF7FEFF 		bl	CRYP_DataIn
 1021              	.LVL192:
 441:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1022              		.loc 1 441 0
 1023 0166 6068     		ldr	r0, [r4, #4]
 1024 0168 FFF7FEFF 		bl	CRYP_DataIn
 1025              	.LVL193:
ARM GAS  /tmp/cc5ofa7g.s 			page 36


 443:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1026              		.loc 1 443 0
 1027 016c A068     		ldr	r0, [r4, #8]
 1028 016e FFF7FEFF 		bl	CRYP_DataIn
 1029              	.LVL194:
 445:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1030              		.loc 1 445 0
 1031 0172 E068     		ldr	r0, [r4, #12]
 1032 0174 FFF7FEFF 		bl	CRYP_DataIn
 1033              	.LVL195:
 446:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 1034              		.loc 1 446 0
 1035 0178 1034     		adds	r4, r4, #16
 1036              	.LVL196:
 448:./FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 1037              		.loc 1 448 0
 1038 017a 0023     		movs	r3, #0
 1039 017c 0193     		str	r3, [sp, #4]
 1040              	.L35:
 451:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 1041              		.loc 1 451 0 discriminator 2
 1042 017e 1020     		movs	r0, #16
 1043 0180 FFF7FEFF 		bl	CRYP_GetFlagStatus
 1044              	.LVL197:
 1045 0184 0246     		mov	r2, r0
 1046              	.LVL198:
 452:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1047              		.loc 1 452 0 discriminator 2
 1048 0186 019B     		ldr	r3, [sp, #4]
 1049 0188 0133     		adds	r3, r3, #1
 1050 018a 0193     		str	r3, [sp, #4]
 453:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 1051              		.loc 1 453 0 discriminator 2
 1052 018c 019B     		ldr	r3, [sp, #4]
 1053 018e B3F5803F 		cmp	r3, #65536
 1054 0192 DFD0     		beq	.L34
 453:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 1055              		.loc 1 453 0 is_stmt 0 discriminator 1
 1056 0194 0028     		cmp	r0, #0
 1057 0196 F2D1     		bne	.L35
 1058 0198 DCE7     		b	.L34
 1059              	.L44:
 458:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 459:./FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 460:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 461:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 462:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 463:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1060              		.loc 1 463 0 is_stmt 1
 1061 019a FFF7FEFF 		bl	CRYP_DataOut
 1062              	.LVL199:
 1063 019e 3860     		str	r0, [r7]
 1064              	.LVL200:
 464:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 465:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1065              		.loc 1 465 0
 1066 01a0 FFF7FEFF 		bl	CRYP_DataOut
ARM GAS  /tmp/cc5ofa7g.s 			page 37


 1067              	.LVL201:
 1068 01a4 7860     		str	r0, [r7, #4]
 1069              	.LVL202:
 466:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 467:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1070              		.loc 1 467 0
 1071 01a6 FFF7FEFF 		bl	CRYP_DataOut
 1072              	.LVL203:
 1073 01aa B860     		str	r0, [r7, #8]
 1074              	.LVL204:
 468:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 469:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1075              		.loc 1 469 0
 1076 01ac FFF7FEFF 		bl	CRYP_DataOut
 1077              	.LVL205:
 1078 01b0 F860     		str	r0, [r7, #12]
 470:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1079              		.loc 1 470 0
 1080 01b2 1037     		adds	r7, r7, #16
 1081              	.LVL206:
 1082 01b4 D0E7     		b	.L36
 1083              	.L37:
 471:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 472:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 473:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 474:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 475:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 1084              		.loc 1 475 0
 1085 01b6 0020     		movs	r0, #0
 1086 01b8 FFF7FEFF 		bl	CRYP_Cmd
 1087              	.LVL207:
 1088              	.L32:
 476:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 477:./FWLIB/src/stm32f4xx_cryp_aes.c ****   return status;
 478:./FWLIB/src/stm32f4xx_cryp_aes.c **** }
 1089              		.loc 1 478 0
 1090 01bc 3046     		mov	r0, r6
 1091 01be 12B0     		add	sp, sp, #72
 1092              	.LCFI6:
 1093              		.cfi_remember_state
 1094              		.cfi_def_cfa_offset 32
 1095              		@ sp needed
 1096 01c0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1097              	.LVL208:
 1098              	.L40:
 1099              	.LCFI7:
 1100              		.cfi_restore_state
 432:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 1101              		.loc 1 432 0
 1102 01c4 0026     		movs	r6, #0
 1103              	.LVL209:
 1104 01c6 F9E7     		b	.L32
 1105              		.cfi_endproc
 1106              	.LFE113:
 1108              		.section	.text.CRYP_AES_CTR,"ax",%progbits
 1109              		.align	1
 1110              		.global	CRYP_AES_CTR
ARM GAS  /tmp/cc5ofa7g.s 			page 38


 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1114              		.fpu fpv4-sp-d16
 1116              	CRYP_AES_CTR:
 1117              	.LFB114:
 479:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 480:./FWLIB/src/stm32f4xx_cryp_aes.c **** /**
 481:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CTR Mode
 482:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 483:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *           This parameter can be one of the following values:
 484:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 485:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 486:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 487:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 488:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 489:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 490:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 491:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 492:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 493:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 494:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 495:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
 496:./FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CTR(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key, 
 497:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 498:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 499:./FWLIB/src/stm32f4xx_cryp_aes.c **** {
 1118              		.loc 1 499 0
 1119              		.cfi_startproc
 1120              		@ args = 12, pretend = 0, frame = 72
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              	.LVL210:
 1123 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1124              	.LCFI8:
 1125              		.cfi_def_cfa_offset 32
 1126              		.cfi_offset 4, -32
 1127              		.cfi_offset 5, -28
 1128              		.cfi_offset 6, -24
 1129              		.cfi_offset 7, -20
 1130              		.cfi_offset 8, -16
 1131              		.cfi_offset 9, -12
 1132              		.cfi_offset 10, -8
 1133              		.cfi_offset 14, -4
 1134 0004 92B0     		sub	sp, sp, #72
 1135              	.LCFI9:
 1136              		.cfi_def_cfa_offset 104
 1137 0006 8146     		mov	r9, r0
 1138 0008 0E46     		mov	r6, r1
 1139 000a 1546     		mov	r5, r2
 1140 000c 9A46     		mov	r10, r3
 1141 000e DDF86C80 		ldr	r8, [sp, #108]
 500:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 501:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 502:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 503:./FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 1142              		.loc 1 503 0
 1143 0012 0023     		movs	r3, #0
ARM GAS  /tmp/cc5ofa7g.s 			page 39


 1144              	.LVL211:
 1145 0014 0193     		str	r3, [sp, #4]
 1146              	.LVL212:
 504:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 505:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 506:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 507:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 1147              		.loc 1 507 0
 1148 0016 1A9C     		ldr	r4, [sp, #104]
 1149              	.LVL213:
 508:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 1150              		.loc 1 508 0
 1151 0018 1C9F     		ldr	r7, [sp, #112]
 1152              	.LVL214:
 509:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 510:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 511:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 512:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 513:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 1153              		.loc 1 513 0
 1154 001a 06A8     		add	r0, sp, #24
 1155              	.LVL215:
 1156 001c FFF7FEFF 		bl	CRYP_KeyStructInit
 1157              	.LVL216:
 514:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 515:./FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 1158              		.loc 1 515 0
 1159 0020 BAF1C00F 		cmp	r10, #192
 1160 0024 3ED0     		beq	.L47
 1161 0026 BAF5807F 		cmp	r10, #256
 1162 002a 51D0     		beq	.L48
 1163 002c BAF1800F 		cmp	r10, #128
 1164 0030 29D0     		beq	.L62
 1165              	.LVL217:
 1166              	.L46:
 516:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 517:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
 518:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 519:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 520:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 521:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 522:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 523:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 524:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 525:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 526:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 527:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 528:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 529:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 530:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 531:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 532:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 533:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 534:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 535:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 536:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 537:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
ARM GAS  /tmp/cc5ofa7g.s 			page 40


 538:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 539:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 540:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 541:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 542:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 543:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 544:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 545:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 546:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 547:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 548:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 549:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 550:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 551:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 552:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 553:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 554:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 555:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 556:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 557:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 558:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 559:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 560:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 561:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 562:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 563:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 1167              		.loc 1 563 0
 1168 0032 3368     		ldr	r3, [r6]
 1169              	.LVL218:
 1170              	.LBB310:
 1171              	.LBB311:
 1172              		.loc 2 407 0
 1173 0034 1BBA     		rev	r3, r3
 1174              	.LVL219:
 1175              	.LBE311:
 1176              	.LBE310:
 1177              		.loc 1 563 0
 1178 0036 0293     		str	r3, [sp, #8]
 1179              	.LVL220:
 564:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 565:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 1180              		.loc 1 565 0
 1181 0038 7368     		ldr	r3, [r6, #4]
 1182              	.LVL221:
 1183              	.LBB312:
 1184              	.LBB313:
 1185              		.loc 2 407 0
 1186 003a 1BBA     		rev	r3, r3
 1187              	.LVL222:
 1188              	.LBE313:
 1189              	.LBE312:
 1190              		.loc 1 565 0
 1191 003c 0393     		str	r3, [sp, #12]
 1192              	.LVL223:
 566:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 567:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 1193              		.loc 1 567 0
ARM GAS  /tmp/cc5ofa7g.s 			page 41


 1194 003e B368     		ldr	r3, [r6, #8]
 1195              	.LVL224:
 1196              	.LBB314:
 1197              	.LBB315:
 1198              		.loc 2 407 0
 1199 0040 1BBA     		rev	r3, r3
 1200              	.LVL225:
 1201              	.LBE315:
 1202              	.LBE314:
 1203              		.loc 1 567 0
 1204 0042 0493     		str	r3, [sp, #16]
 1205              	.LVL226:
 568:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 569:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 1206              		.loc 1 569 0
 1207 0044 F368     		ldr	r3, [r6, #12]
 1208              	.LVL227:
 1209              	.LBB316:
 1210              	.LBB317:
 1211              		.loc 2 407 0
 1212 0046 1BBA     		rev	r3, r3
 1213              	.LVL228:
 1214              	.LBE317:
 1215              	.LBE316:
 1216              		.loc 1 569 0
 1217 0048 0593     		str	r3, [sp, #20]
 570:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 571:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Key Initialisation */
 572:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1218              		.loc 1 572 0
 1219 004a 06A8     		add	r0, sp, #24
 1220 004c FFF7FEFF 		bl	CRYP_KeyInit
 1221              	.LVL229:
 573:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 574:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 575:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 1222              		.loc 1 575 0
 1223 0050 B9F1000F 		cmp	r9, #0
 1224 0054 58D1     		bne	.L50
 576:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 577:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for decryption process */
 578:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1225              		.loc 1 578 0
 1226 0056 0423     		movs	r3, #4
 1227 0058 0E93     		str	r3, [sp, #56]
 1228              	.L51:
 579:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 580:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 581:./FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 582:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 583:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 584:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 585:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 586:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CTR;
 1229              		.loc 1 586 0
 1230 005a 3023     		movs	r3, #48
 1231 005c 0F93     		str	r3, [sp, #60]
ARM GAS  /tmp/cc5ofa7g.s 			page 42


 587:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 1232              		.loc 1 587 0
 1233 005e 8023     		movs	r3, #128
 1234 0060 1093     		str	r3, [sp, #64]
 588:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 1235              		.loc 1 588 0
 1236 0062 0EA8     		add	r0, sp, #56
 1237 0064 FFF7FEFF 		bl	CRYP_Init
 1238              	.LVL230:
 589:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 590:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 591:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 1239              		.loc 1 591 0
 1240 0068 02A8     		add	r0, sp, #8
 1241 006a FFF7FEFF 		bl	CRYP_IVInit
 1242              	.LVL231:
 592:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 593:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 594:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 1243              		.loc 1 594 0
 1244 006e FFF7FEFF 		bl	CRYP_FIFOFlush
 1245              	.LVL232:
 595:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 596:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 597:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 1246              		.loc 1 597 0
 1247 0072 0120     		movs	r0, #1
 1248 0074 FFF7FEFF 		bl	CRYP_Cmd
 1249              	.LVL233:
 598:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 599:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 1250              		.loc 1 599 0
 1251 0078 FFF7FEFF 		bl	CRYP_GetCmdStatus
 1252              	.LVL234:
 1253 007c 0028     		cmp	r0, #0
 1254 007e 7ED0     		beq	.L59
 600:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 601:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 602:./FWLIB/src/stm32f4xx_cryp_aes.c ****        the CRYP peripheral (please check the device sales type. */
 603:./FWLIB/src/stm32f4xx_cryp_aes.c ****     return(ERROR);
 604:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 605:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
 606:./FWLIB/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1255              		.loc 1 606 0
 1256 0080 0025     		movs	r5, #0
 1257              	.LVL235:
 505:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 1258              		.loc 1 505 0
 1259 0082 0126     		movs	r6, #1
 1260              	.LVL236:
 1261 0084 46E0     		b	.L53
 1262              	.LVL237:
 1263              	.L62:
 518:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1264              		.loc 1 518 0
 1265 0086 0023     		movs	r3, #0
 1266 0088 1193     		str	r3, [sp, #68]
ARM GAS  /tmp/cc5ofa7g.s 			page 43


 519:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1267              		.loc 1 519 0
 1268 008a 2B68     		ldr	r3, [r5]
 1269              	.LVL238:
 1270              	.LBB318:
 1271              	.LBB319:
 1272              		.loc 2 407 0
 1273 008c 1BBA     		rev	r3, r3
 1274              	.LVL239:
 1275              	.LBE319:
 1276              	.LBE318:
 519:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1277              		.loc 1 519 0
 1278 008e 0A93     		str	r3, [sp, #40]
 1279              	.LVL240:
 521:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1280              		.loc 1 521 0
 1281 0090 6B68     		ldr	r3, [r5, #4]
 1282              	.LVL241:
 1283              	.LBB320:
 1284              	.LBB321:
 1285              		.loc 2 407 0
 1286 0092 1BBA     		rev	r3, r3
 1287              	.LVL242:
 1288              	.LBE321:
 1289              	.LBE320:
 521:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1290              		.loc 1 521 0
 1291 0094 0B93     		str	r3, [sp, #44]
 1292              	.LVL243:
 523:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1293              		.loc 1 523 0
 1294 0096 AB68     		ldr	r3, [r5, #8]
 1295              	.LVL244:
 1296              	.LBB322:
 1297              	.LBB323:
 1298              		.loc 2 407 0
 1299 0098 1BBA     		rev	r3, r3
 1300              	.LVL245:
 1301              	.LBE323:
 1302              	.LBE322:
 523:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1303              		.loc 1 523 0
 1304 009a 0C93     		str	r3, [sp, #48]
 1305              	.LVL246:
 525:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1306              		.loc 1 525 0
 1307 009c EB68     		ldr	r3, [r5, #12]
 1308              	.LVL247:
 1309              	.LBB324:
 1310              	.LBB325:
 1311              		.loc 2 407 0
 1312 009e 1BBA     		rev	r3, r3
 1313              	.LVL248:
 1314              	.LBE325:
 1315              	.LBE324:
 525:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
ARM GAS  /tmp/cc5ofa7g.s 			page 44


 1316              		.loc 1 525 0
 1317 00a0 0D93     		str	r3, [sp, #52]
 526:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 1318              		.loc 1 526 0
 1319 00a2 C6E7     		b	.L46
 1320              	.LVL249:
 1321              	.L47:
 528:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1322              		.loc 1 528 0
 1323 00a4 4FF48073 		mov	r3, #256
 1324 00a8 1193     		str	r3, [sp, #68]
 529:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1325              		.loc 1 529 0
 1326 00aa 2B68     		ldr	r3, [r5]
 1327              	.LVL250:
 1328              	.LBB326:
 1329              	.LBB327:
 1330              		.loc 2 407 0
 1331 00ac 1BBA     		rev	r3, r3
 1332              	.LVL251:
 1333              	.LBE327:
 1334              	.LBE326:
 529:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1335              		.loc 1 529 0
 1336 00ae 0893     		str	r3, [sp, #32]
 1337              	.LVL252:
 531:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1338              		.loc 1 531 0
 1339 00b0 6B68     		ldr	r3, [r5, #4]
 1340              	.LVL253:
 1341              	.LBB328:
 1342              	.LBB329:
 1343              		.loc 2 407 0
 1344 00b2 1BBA     		rev	r3, r3
 1345              	.LVL254:
 1346              	.LBE329:
 1347              	.LBE328:
 531:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1348              		.loc 1 531 0
 1349 00b4 0993     		str	r3, [sp, #36]
 1350              	.LVL255:
 533:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1351              		.loc 1 533 0
 1352 00b6 AB68     		ldr	r3, [r5, #8]
 1353              	.LVL256:
 1354              	.LBB330:
 1355              	.LBB331:
 1356              		.loc 2 407 0
 1357 00b8 1BBA     		rev	r3, r3
 1358              	.LVL257:
 1359              	.LBE331:
 1360              	.LBE330:
 533:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1361              		.loc 1 533 0
 1362 00ba 0A93     		str	r3, [sp, #40]
 1363              	.LVL258:
 535:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 45


 1364              		.loc 1 535 0
 1365 00bc EB68     		ldr	r3, [r5, #12]
 1366              	.LVL259:
 1367              	.LBB332:
 1368              	.LBB333:
 1369              		.loc 2 407 0
 1370 00be 1BBA     		rev	r3, r3
 1371              	.LVL260:
 1372              	.LBE333:
 1373              	.LBE332:
 535:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1374              		.loc 1 535 0
 1375 00c0 0B93     		str	r3, [sp, #44]
 1376              	.LVL261:
 537:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1377              		.loc 1 537 0
 1378 00c2 2B69     		ldr	r3, [r5, #16]
 1379              	.LVL262:
 1380              	.LBB334:
 1381              	.LBB335:
 1382              		.loc 2 407 0
 1383 00c4 1BBA     		rev	r3, r3
 1384              	.LVL263:
 1385              	.LBE335:
 1386              	.LBE334:
 537:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1387              		.loc 1 537 0
 1388 00c6 0C93     		str	r3, [sp, #48]
 1389              	.LVL264:
 539:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1390              		.loc 1 539 0
 1391 00c8 6B69     		ldr	r3, [r5, #20]
 1392              	.LVL265:
 1393              	.LBB336:
 1394              	.LBB337:
 1395              		.loc 2 407 0
 1396 00ca 1BBA     		rev	r3, r3
 1397              	.LVL266:
 1398              	.LBE337:
 1399              	.LBE336:
 539:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1400              		.loc 1 539 0
 1401 00cc 0D93     		str	r3, [sp, #52]
 540:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 1402              		.loc 1 540 0
 1403 00ce B0E7     		b	.L46
 1404              	.LVL267:
 1405              	.L48:
 542:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1406              		.loc 1 542 0
 1407 00d0 4FF40073 		mov	r3, #512
 1408 00d4 1193     		str	r3, [sp, #68]
 543:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1409              		.loc 1 543 0
 1410 00d6 2B68     		ldr	r3, [r5]
 1411              	.LVL268:
 1412              	.LBB338:
ARM GAS  /tmp/cc5ofa7g.s 			page 46


 1413              	.LBB339:
 1414              		.loc 2 407 0
 1415 00d8 1BBA     		rev	r3, r3
 1416              	.LVL269:
 1417              	.LBE339:
 1418              	.LBE338:
 543:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1419              		.loc 1 543 0
 1420 00da 0693     		str	r3, [sp, #24]
 1421              	.LVL270:
 545:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1422              		.loc 1 545 0
 1423 00dc 6B68     		ldr	r3, [r5, #4]
 1424              	.LVL271:
 1425              	.LBB340:
 1426              	.LBB341:
 1427              		.loc 2 407 0
 1428 00de 1BBA     		rev	r3, r3
 1429              	.LVL272:
 1430              	.LBE341:
 1431              	.LBE340:
 545:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1432              		.loc 1 545 0
 1433 00e0 0793     		str	r3, [sp, #28]
 1434              	.LVL273:
 547:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1435              		.loc 1 547 0
 1436 00e2 AB68     		ldr	r3, [r5, #8]
 1437              	.LVL274:
 1438              	.LBB342:
 1439              	.LBB343:
 1440              		.loc 2 407 0
 1441 00e4 1BBA     		rev	r3, r3
 1442              	.LVL275:
 1443              	.LBE343:
 1444              	.LBE342:
 547:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1445              		.loc 1 547 0
 1446 00e6 0893     		str	r3, [sp, #32]
 1447              	.LVL276:
 549:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1448              		.loc 1 549 0
 1449 00e8 EB68     		ldr	r3, [r5, #12]
 1450              	.LVL277:
 1451              	.LBB344:
 1452              	.LBB345:
 1453              		.loc 2 407 0
 1454 00ea 1BBA     		rev	r3, r3
 1455              	.LVL278:
 1456              	.LBE345:
 1457              	.LBE344:
 549:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1458              		.loc 1 549 0
 1459 00ec 0993     		str	r3, [sp, #36]
 1460              	.LVL279:
 551:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1461              		.loc 1 551 0
ARM GAS  /tmp/cc5ofa7g.s 			page 47


 1462 00ee 2B69     		ldr	r3, [r5, #16]
 1463              	.LVL280:
 1464              	.LBB346:
 1465              	.LBB347:
 1466              		.loc 2 407 0
 1467 00f0 1BBA     		rev	r3, r3
 1468              	.LVL281:
 1469              	.LBE347:
 1470              	.LBE346:
 551:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1471              		.loc 1 551 0
 1472 00f2 0A93     		str	r3, [sp, #40]
 1473              	.LVL282:
 553:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1474              		.loc 1 553 0
 1475 00f4 6B69     		ldr	r3, [r5, #20]
 1476              	.LVL283:
 1477              	.LBB348:
 1478              	.LBB349:
 1479              		.loc 2 407 0
 1480 00f6 1BBA     		rev	r3, r3
 1481              	.LVL284:
 1482              	.LBE349:
 1483              	.LBE348:
 553:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1484              		.loc 1 553 0
 1485 00f8 0B93     		str	r3, [sp, #44]
 1486              	.LVL285:
 555:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1487              		.loc 1 555 0
 1488 00fa AB69     		ldr	r3, [r5, #24]
 1489              	.LVL286:
 1490              	.LBB350:
 1491              	.LBB351:
 1492              		.loc 2 407 0
 1493 00fc 1BBA     		rev	r3, r3
 1494              	.LVL287:
 1495              	.LBE351:
 1496              	.LBE350:
 555:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1497              		.loc 1 555 0
 1498 00fe 0C93     		str	r3, [sp, #48]
 1499              	.LVL288:
 557:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1500              		.loc 1 557 0
 1501 0100 EB69     		ldr	r3, [r5, #28]
 1502              	.LVL289:
 1503              	.LBB352:
 1504              	.LBB353:
 1505              		.loc 2 407 0
 1506 0102 1BBA     		rev	r3, r3
 1507              	.LVL290:
 1508              	.LBE353:
 1509              	.LBE352:
 557:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1510              		.loc 1 557 0
 1511 0104 0D93     		str	r3, [sp, #52]
ARM GAS  /tmp/cc5ofa7g.s 			page 48


 558:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 1512              		.loc 1 558 0
 1513 0106 94E7     		b	.L46
 1514              	.LVL291:
 1515              	.L50:
 584:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 1516              		.loc 1 584 0
 1517 0108 0023     		movs	r3, #0
 1518 010a 0E93     		str	r3, [sp, #56]
 1519 010c A5E7     		b	.L51
 1520              	.LVL292:
 1521              	.L54:
 607:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 608:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 609:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 610:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 611:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 612:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 613:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 614:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 615:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 616:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 617:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 618:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 619:./FWLIB/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 620:./FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 621:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 622:./FWLIB/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 623:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 624:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 625:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 626:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1522              		.loc 1 626 0
 1523 010e 0AB3     		cbz	r2, .L63
 627:./FWLIB/src/stm32f4xx_cryp_aes.c ****    {
 628:./FWLIB/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1524              		.loc 1 628 0
 1525 0110 0026     		movs	r6, #0
 1526              	.LVL293:
 1527              	.L56:
 606:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1528              		.loc 1 606 0 discriminator 2
 1529 0112 1035     		adds	r5, r5, #16
 1530              	.LVL294:
 1531              	.L53:
 606:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1532              		.loc 1 606 0 is_stmt 0 discriminator 1
 1533 0114 4545     		cmp	r5, r8
 1534 0116 2BD2     		bcs	.L57
 606:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 1535              		.loc 1 606 0 discriminator 3
 1536 0118 56B3     		cbz	r6, .L57
 610:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1537              		.loc 1 610 0 is_stmt 1
 1538 011a 2068     		ldr	r0, [r4]
 1539 011c FFF7FEFF 		bl	CRYP_DataIn
 1540              	.LVL295:
ARM GAS  /tmp/cc5ofa7g.s 			page 49


 612:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1541              		.loc 1 612 0
 1542 0120 6068     		ldr	r0, [r4, #4]
 1543 0122 FFF7FEFF 		bl	CRYP_DataIn
 1544              	.LVL296:
 614:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1545              		.loc 1 614 0
 1546 0126 A068     		ldr	r0, [r4, #8]
 1547 0128 FFF7FEFF 		bl	CRYP_DataIn
 1548              	.LVL297:
 616:./FWLIB/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1549              		.loc 1 616 0
 1550 012c E068     		ldr	r0, [r4, #12]
 1551 012e FFF7FEFF 		bl	CRYP_DataIn
 1552              	.LVL298:
 617:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 1553              		.loc 1 617 0
 1554 0132 1034     		adds	r4, r4, #16
 1555              	.LVL299:
 619:./FWLIB/src/stm32f4xx_cryp_aes.c ****     do
 1556              		.loc 1 619 0
 1557 0134 0023     		movs	r3, #0
 1558 0136 0193     		str	r3, [sp, #4]
 1559              	.L55:
 622:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter++;
 1560              		.loc 1 622 0 discriminator 2
 1561 0138 1020     		movs	r0, #16
 1562 013a FFF7FEFF 		bl	CRYP_GetFlagStatus
 1563              	.LVL300:
 1564 013e 0246     		mov	r2, r0
 1565              	.LVL301:
 623:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1566              		.loc 1 623 0 discriminator 2
 1567 0140 019B     		ldr	r3, [sp, #4]
 1568 0142 0133     		adds	r3, r3, #1
 1569 0144 0193     		str	r3, [sp, #4]
 624:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 1570              		.loc 1 624 0 discriminator 2
 1571 0146 019B     		ldr	r3, [sp, #4]
 1572 0148 B3F5803F 		cmp	r3, #65536
 1573 014c DFD0     		beq	.L54
 624:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 1574              		.loc 1 624 0 is_stmt 0 discriminator 1
 1575 014e 0028     		cmp	r0, #0
 1576 0150 F2D1     		bne	.L55
 1577 0152 DCE7     		b	.L54
 1578              	.L63:
 629:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 630:./FWLIB/src/stm32f4xx_cryp_aes.c ****     else
 631:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 632:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 633:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 634:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1579              		.loc 1 634 0 is_stmt 1
 1580 0154 FFF7FEFF 		bl	CRYP_DataOut
 1581              	.LVL302:
 1582 0158 3860     		str	r0, [r7]
ARM GAS  /tmp/cc5ofa7g.s 			page 50


 1583              	.LVL303:
 635:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 636:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1584              		.loc 1 636 0
 1585 015a FFF7FEFF 		bl	CRYP_DataOut
 1586              	.LVL304:
 1587 015e 7860     		str	r0, [r7, #4]
 1588              	.LVL305:
 637:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 638:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1589              		.loc 1 638 0
 1590 0160 FFF7FEFF 		bl	CRYP_DataOut
 1591              	.LVL306:
 1592 0164 B860     		str	r0, [r7, #8]
 1593              	.LVL307:
 639:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 640:./FWLIB/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1594              		.loc 1 640 0
 1595 0166 FFF7FEFF 		bl	CRYP_DataOut
 1596              	.LVL308:
 1597 016a F860     		str	r0, [r7, #12]
 641:./FWLIB/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1598              		.loc 1 641 0
 1599 016c 1037     		adds	r7, r7, #16
 1600              	.LVL309:
 1601 016e D0E7     		b	.L56
 1602              	.L57:
 642:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 643:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 644:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 645:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 1603              		.loc 1 645 0
 1604 0170 0020     		movs	r0, #0
 1605 0172 FFF7FEFF 		bl	CRYP_Cmd
 1606              	.LVL310:
 1607              	.L52:
 646:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 647:./FWLIB/src/stm32f4xx_cryp_aes.c ****   return status;
 648:./FWLIB/src/stm32f4xx_cryp_aes.c **** }
 1608              		.loc 1 648 0
 1609 0176 3046     		mov	r0, r6
 1610 0178 12B0     		add	sp, sp, #72
 1611              	.LCFI10:
 1612              		.cfi_remember_state
 1613              		.cfi_def_cfa_offset 32
 1614              		@ sp needed
 1615 017a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1616              	.LVL311:
 1617              	.L59:
 1618              	.LCFI11:
 1619              		.cfi_restore_state
 603:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 1620              		.loc 1 603 0
 1621 017e 0026     		movs	r6, #0
 1622              	.LVL312:
 1623 0180 F9E7     		b	.L52
 1624              		.cfi_endproc
ARM GAS  /tmp/cc5ofa7g.s 			page 51


 1625              	.LFE114:
 1627              		.section	.text.CRYP_AES_GCM,"ax",%progbits
 1628              		.align	1
 1629              		.global	CRYP_AES_GCM
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1633              		.fpu fpv4-sp-d16
 1635              	CRYP_AES_GCM:
 1636              	.LFB115:
 649:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 650:./FWLIB/src/stm32f4xx_cryp_aes.c **** /**
 651:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in GCM Mode. The GCM and CCM modes
 652:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *         are available only on STM32F437x Devices.
 653:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 654:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
 655:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 656:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 657:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 658:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 659:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 660:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 661:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer in bytes, must be a multiple of 16.
 662:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Header: pointer to the header buffer.
 663:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Hlength: length of the header buffer in bytes, must be a multiple of 16.  
 664:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 665:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  AuthTAG: pointer to the authentication TAG buffer.
 666:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 667:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 668:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 669:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
 670:./FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_GCM(uint8_t Mode, uint8_t InitVectors[16],
 671:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Key, uint16_t Keysize,
 672:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Input, uint32_t ILength,
 673:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Header, uint32_t HLength,
 674:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output, uint8_t *AuthTAG)
 675:./FWLIB/src/stm32f4xx_cryp_aes.c **** {
 1637              		.loc 1 675 0
 1638              		.cfi_startproc
 1639              		@ args = 24, pretend = 0, frame = 88
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 1641              	.LVL313:
 1642 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1643              	.LCFI12:
 1644              		.cfi_def_cfa_offset 36
 1645              		.cfi_offset 4, -36
 1646              		.cfi_offset 5, -32
 1647              		.cfi_offset 6, -28
 1648              		.cfi_offset 7, -24
 1649              		.cfi_offset 8, -20
 1650              		.cfi_offset 9, -16
 1651              		.cfi_offset 10, -12
 1652              		.cfi_offset 11, -8
 1653              		.cfi_offset 14, -4
 1654 0004 97B0     		sub	sp, sp, #92
 1655              	.LCFI13:
 1656              		.cfi_def_cfa_offset 128
ARM GAS  /tmp/cc5ofa7g.s 			page 52


 1657 0006 0190     		str	r0, [sp, #4]
 1658 0008 0F46     		mov	r7, r1
 1659 000a 1646     		mov	r6, r2
 1660 000c 9B46     		mov	fp, r3
 1661 000e DDF88480 		ldr	r8, [sp, #132]
 1662 0012 DDF88C90 		ldr	r9, [sp, #140]
 676:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 677:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 678:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 679:./FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 1663              		.loc 1 679 0
 1664 0016 0023     		movs	r3, #0
 1665              	.LVL314:
 1666 0018 0593     		str	r3, [sp, #20]
 1667              	.LVL315:
 680:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 681:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 682:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 683:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 1668              		.loc 1 683 0
 1669 001a 209C     		ldr	r4, [sp, #128]
 1670              	.LVL316:
 684:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 1671              		.loc 1 684 0
 1672 001c DDF890A0 		ldr	r10, [sp, #144]
 1673              	.LVL317:
 685:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 686:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t headeraddr = (uint32_t)Header;
 1674              		.loc 1 686 0
 1675 0020 229D     		ldr	r5, [sp, #136]
 1676              	.LVL318:
 687:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t tagaddr = (uint32_t)AuthTAG;
 688:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint64_t headerlength = HLength * 8;/* header length in bits */
 1677              		.loc 1 688 0
 1678 0022 4FEAC903 		lsl	r3, r9, #3
 1679 0026 0293     		str	r3, [sp, #8]
 1680              	.LVL319:
 689:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint64_t inputlength = ILength * 8;/* input length in bits */
 1681              		.loc 1 689 0
 1682 0028 4FEAC803 		lsl	r3, r8, #3
 1683              	.LVL320:
 1684 002c 0393     		str	r3, [sp, #12]
 1685              	.LVL321:
 690:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t loopcounter = 0;
 691:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 692:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 693:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 1686              		.loc 1 693 0
 1687 002e 0AA8     		add	r0, sp, #40
 1688              	.LVL322:
 1689 0030 FFF7FEFF 		bl	CRYP_KeyStructInit
 1690              	.LVL323:
 694:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 695:./FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 1691              		.loc 1 695 0
 1692 0034 BBF1C00F 		cmp	fp, #192
 1693 0038 56D0     		beq	.L66
ARM GAS  /tmp/cc5ofa7g.s 			page 53


 1694 003a BBF5807F 		cmp	fp, #256
 1695 003e 69D0     		beq	.L67
 1696 0040 BBF1800F 		cmp	fp, #128
 1697 0044 41D0     		beq	.L113
 1698              	.LVL324:
 1699              	.L65:
 696:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 697:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
 698:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 699:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 700:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 701:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 702:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 703:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 704:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 705:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 706:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 707:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 708:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 709:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 710:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 711:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 712:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 713:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 714:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 715:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 716:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 717:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 718:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 719:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 720:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 721:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 722:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 723:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 724:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 725:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 726:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 727:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 728:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 729:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 730:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 731:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 732:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 733:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 734:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 735:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 736:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 737:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 738:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 739:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 740:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 741:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 742:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
 743:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 744:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 1700              		.loc 1 744 0
 1701 0046 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cc5ofa7g.s 			page 54


 1702              	.LVL325:
 1703              	.LBB354:
 1704              	.LBB355:
 1705              		.loc 2 407 0
 1706 0048 1BBA     		rev	r3, r3
 1707              	.LVL326:
 1708              	.LBE355:
 1709              	.LBE354:
 1710              		.loc 1 744 0
 1711 004a 0693     		str	r3, [sp, #24]
 1712              	.LVL327:
 745:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 746:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 1713              		.loc 1 746 0
 1714 004c 7B68     		ldr	r3, [r7, #4]
 1715              	.LVL328:
 1716              	.LBB356:
 1717              	.LBB357:
 1718              		.loc 2 407 0
 1719 004e 1BBA     		rev	r3, r3
 1720              	.LVL329:
 1721              	.LBE357:
 1722              	.LBE356:
 1723              		.loc 1 746 0
 1724 0050 0793     		str	r3, [sp, #28]
 1725              	.LVL330:
 747:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 748:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 1726              		.loc 1 748 0
 1727 0052 BB68     		ldr	r3, [r7, #8]
 1728              	.LVL331:
 1729              	.LBB358:
 1730              	.LBB359:
 1731              		.loc 2 407 0
 1732 0054 1BBA     		rev	r3, r3
 1733              	.LVL332:
 1734              	.LBE359:
 1735              	.LBE358:
 1736              		.loc 1 748 0
 1737 0056 0893     		str	r3, [sp, #32]
 1738              	.LVL333:
 749:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 750:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 1739              		.loc 1 750 0
 1740 0058 FB68     		ldr	r3, [r7, #12]
 1741              	.LVL334:
 1742              	.LBB360:
 1743              	.LBB361:
 1744              		.loc 2 407 0
 1745 005a 1BBA     		rev	r3, r3
 1746              	.LVL335:
 1747              	.LBE361:
 1748              	.LBE360:
 1749              		.loc 1 750 0
 1750 005c 0993     		str	r3, [sp, #36]
 751:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
 752:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
ARM GAS  /tmp/cc5ofa7g.s 			page 55


 753:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_ENCRYPT) /* AES encryption */
 1751              		.loc 1 753 0
 1752 005e 019B     		ldr	r3, [sp, #4]
 1753 0060 012B     		cmp	r3, #1
 1754 0062 73D0     		beq	.L114
 754:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 755:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 756:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 757:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 758:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 759:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 760:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 761:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
 762:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 763:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 764:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 765:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 766:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_GCM;
 767:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 768:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 769:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 770:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
 771:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
 772:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 773:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 774:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 775:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 776:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 777:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
 778:./FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 779:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 780:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 781:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 782:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
 783:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(HLength != 0)
 784:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 785:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
 786:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
 787:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 788:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
 789:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 790:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 791:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 792:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 793:./FWLIB/src/stm32f4xx_cryp_aes.c ****          /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 794:./FWLIB/src/stm32f4xx_cryp_aes.c ****             the CRYP peripheral (please check the device sales type. */
 795:./FWLIB/src/stm32f4xx_cryp_aes.c ****          return(ERROR);
 796:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 797:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 798:./FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < HLength); loopcounter+=16)
 799:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 800:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
 801:./FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 802:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 803:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 804:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
 805:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
ARM GAS  /tmp/cc5ofa7g.s 			page 56


 806:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 807:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 808:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 809:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 810:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 811:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 812:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 813:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 814:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 815:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 816:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
 817:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter = 0;
 818:./FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 819:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 820:./FWLIB/src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 821:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 822:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 823:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 824:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
 825:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 826:./FWLIB/src/stm32f4xx_cryp_aes.c ****         status = ERROR;
 827:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 828:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 829:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 830:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
 831:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 832:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 833:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
 834:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 835:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 836:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
 837:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 838:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 839:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 840:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 841:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 842:./FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
 843:./FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 844:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 845:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 846:./FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
 847:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 848:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
 849:./FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 850:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 851:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 852:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
 853:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 854:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 855:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 856:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 857:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 858:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 859:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 860:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 861:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
 862:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
ARM GAS  /tmp/cc5ofa7g.s 			page 57


 863:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter = 0;
 864:./FWLIB/src/stm32f4xx_cryp_aes.c ****         do
 865:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 866:./FWLIB/src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 867:./FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 868:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 869:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 870:./FWLIB/src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 871:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 872:./FWLIB/src/stm32f4xx_cryp_aes.c ****           status = ERROR;
 873:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 874:./FWLIB/src/stm32f4xx_cryp_aes.c ****         else
 875:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 876:./FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
 877:./FWLIB/src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 878:./FWLIB/src/stm32f4xx_cryp_aes.c ****           {
 879:./FWLIB/src/stm32f4xx_cryp_aes.c ****           }
 880:./FWLIB/src/stm32f4xx_cryp_aes.c ****           
 881:./FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
 882:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 883:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 884:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 885:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 886:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 887:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 888:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 889:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 890:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 891:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 892:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 893:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 894:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
 895:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
 896:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 897:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 898:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 899:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 900:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 901:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
 902:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 903:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 904:./FWLIB/src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
 905:./FWLIB/src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 906:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 907:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 908:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write number of bits concatenated with header in the IN FIFO */
 909:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength>>32));
 910:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
 911:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
 912:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
 913:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
 914:./FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 915:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 916:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 917:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 918:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr = (uint32_t)AuthTAG;
 919:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Read the Auth TAG in the IN FIFO */
ARM GAS  /tmp/cc5ofa7g.s 			page 58


 920:./FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 921:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 922:./FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 923:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 924:./FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 925:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 926:./FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 927:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 928:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 929:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 930:./FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES decryption */
 931:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 932:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 933:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 1755              		.loc 1 933 0
 1756 0064 FFF7FEFF 		bl	CRYP_FIFOFlush
 1757              	.LVL336:
 934:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 935:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 936:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1758              		.loc 1 936 0
 1759 0068 0AA8     		add	r0, sp, #40
 1760 006a FFF7FEFF 		bl	CRYP_KeyInit
 1761              	.LVL337:
 937:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 938:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
 939:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 1762              		.loc 1 939 0
 1763 006e 06A8     		add	r0, sp, #24
 1764 0070 FFF7FEFF 		bl	CRYP_IVInit
 1765              	.LVL338:
 940:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 941:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 942:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1766              		.loc 1 942 0
 1767 0074 0423     		movs	r3, #4
 1768 0076 1293     		str	r3, [sp, #72]
 943:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_GCM;
 1769              		.loc 1 943 0
 1770 0078 4FF40023 		mov	r3, #524288
 1771 007c 1393     		str	r3, [sp, #76]
 944:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 1772              		.loc 1 944 0
 1773 007e 8023     		movs	r3, #128
 1774 0080 1493     		str	r3, [sp, #80]
 945:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 1775              		.loc 1 945 0
 1776 0082 12A8     		add	r0, sp, #72
 1777 0084 FFF7FEFF 		bl	CRYP_Init
 1778              	.LVL339:
 946:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 947:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
 948:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
 949:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 1779              		.loc 1 949 0
 1780 0088 0020     		movs	r0, #0
 1781 008a FFF7FEFF 		bl	CRYP_PhaseConfig
ARM GAS  /tmp/cc5ofa7g.s 			page 59


 1782              	.LVL340:
 950:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 951:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 952:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 1783              		.loc 1 952 0
 1784 008e 0120     		movs	r0, #1
 1785 0090 FFF7FEFF 		bl	CRYP_Cmd
 1786              	.LVL341:
 1787              	.L86:
 953:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 954:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
 955:./FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 1788              		.loc 1 955 0 discriminator 1
 1789 0094 FFF7FEFF 		bl	CRYP_GetCmdStatus
 1790              	.LVL342:
 1791 0098 0128     		cmp	r0, #1
 1792 009a FBD0     		beq	.L86
 956:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 957:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 958:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 959:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
 960:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(HLength != 0)
 1793              		.loc 1 960 0
 1794 009c B9F1000F 		cmp	r9, #0
 1795 00a0 40F02E81 		bne	.L115
 681:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 1796              		.loc 1 681 0
 1797 00a4 0125     		movs	r5, #1
 1798              	.LVL343:
 1799              	.L87:
 961:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 962:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
 963:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
 964:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 965:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
 966:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 967:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 968:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 969:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 970:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
 971:./FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
 972:./FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 973:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 974:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 975:./FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < HLength); loopcounter+=16)
 976:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 977:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
 978:./FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 979:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 980:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 981:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
 982:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
 983:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 984:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 985:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 986:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 987:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
ARM GAS  /tmp/cc5ofa7g.s 			page 60


 988:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 989:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 990:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 991:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 992:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 993:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
 994:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter = 0;
 995:./FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 996:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 997:./FWLIB/src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 998:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 999:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1000:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1001:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
1002:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1003:./FWLIB/src/stm32f4xx_cryp_aes.c ****         status = ERROR;
1004:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1005:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1006:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1007:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
1008:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 1800              		.loc 1 1008 0
 1801 00a6 B8F1000F 		cmp	r8, #0
 1802 00aa 00F0A181 		beq	.L92
1009:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1010:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
1011:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 1803              		.loc 1 1011 0
 1804 00ae 4FF40030 		mov	r0, #131072
 1805 00b2 FFF7FEFF 		bl	CRYP_PhaseConfig
 1806              	.LVL344:
1012:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1013:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1014:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 1807              		.loc 1 1014 0
 1808 00b6 0120     		movs	r0, #1
 1809 00b8 FFF7FEFF 		bl	CRYP_Cmd
 1810              	.LVL345:
1015:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1016:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 1811              		.loc 1 1016 0
 1812 00bc FFF7FEFF 		bl	CRYP_GetCmdStatus
 1813              	.LVL346:
 1814 00c0 0028     		cmp	r0, #0
 1815 00c2 00F0D181 		beq	.L109
1017:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1018:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1019:./FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1020:./FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
1021:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1022:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1023:./FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
 1816              		.loc 1 1023 0
 1817 00c6 0026     		movs	r6, #0
 1818              	.LVL347:
 1819 00c8 54E1     		b	.L93
 1820              	.LVL348:
ARM GAS  /tmp/cc5ofa7g.s 			page 61


 1821              	.L113:
 698:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1822              		.loc 1 698 0
 1823 00ca 0023     		movs	r3, #0
 1824 00cc 1593     		str	r3, [sp, #84]
 699:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1825              		.loc 1 699 0
 1826 00ce 3368     		ldr	r3, [r6]
 1827              	.LVL349:
 1828              	.LBB362:
 1829              	.LBB363:
 1830              		.loc 2 407 0
 1831 00d0 1BBA     		rev	r3, r3
 1832              	.LVL350:
 1833              	.LBE363:
 1834              	.LBE362:
 699:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1835              		.loc 1 699 0
 1836 00d2 0E93     		str	r3, [sp, #56]
 1837              	.LVL351:
 701:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1838              		.loc 1 701 0
 1839 00d4 7368     		ldr	r3, [r6, #4]
 1840              	.LVL352:
 1841              	.LBB364:
 1842              	.LBB365:
 1843              		.loc 2 407 0
 1844 00d6 1BBA     		rev	r3, r3
 1845              	.LVL353:
 1846              	.LBE365:
 1847              	.LBE364:
 701:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1848              		.loc 1 701 0
 1849 00d8 0F93     		str	r3, [sp, #60]
 1850              	.LVL354:
 703:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1851              		.loc 1 703 0
 1852 00da B368     		ldr	r3, [r6, #8]
 1853              	.LVL355:
 1854              	.LBB366:
 1855              	.LBB367:
 1856              		.loc 2 407 0
 1857 00dc 1BBA     		rev	r3, r3
 1858              	.LVL356:
 1859              	.LBE367:
 1860              	.LBE366:
 703:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1861              		.loc 1 703 0
 1862 00de 1093     		str	r3, [sp, #64]
 1863              	.LVL357:
 705:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1864              		.loc 1 705 0
 1865 00e0 F368     		ldr	r3, [r6, #12]
 1866              	.LVL358:
 1867              	.LBB368:
 1868              	.LBB369:
 1869              		.loc 2 407 0
ARM GAS  /tmp/cc5ofa7g.s 			page 62


 1870 00e2 1BBA     		rev	r3, r3
 1871              	.LVL359:
 1872              	.LBE369:
 1873              	.LBE368:
 705:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1874              		.loc 1 705 0
 1875 00e4 1193     		str	r3, [sp, #68]
 706:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
 1876              		.loc 1 706 0
 1877 00e6 AEE7     		b	.L65
 1878              	.LVL360:
 1879              	.L66:
 708:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1880              		.loc 1 708 0
 1881 00e8 4FF48073 		mov	r3, #256
 1882 00ec 1593     		str	r3, [sp, #84]
 709:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1883              		.loc 1 709 0
 1884 00ee 3368     		ldr	r3, [r6]
 1885              	.LVL361:
 1886              	.LBB370:
 1887              	.LBB371:
 1888              		.loc 2 407 0
 1889 00f0 1BBA     		rev	r3, r3
 1890              	.LVL362:
 1891              	.LBE371:
 1892              	.LBE370:
 709:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1893              		.loc 1 709 0
 1894 00f2 0C93     		str	r3, [sp, #48]
 1895              	.LVL363:
 711:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1896              		.loc 1 711 0
 1897 00f4 7368     		ldr	r3, [r6, #4]
 1898              	.LVL364:
 1899              	.LBB372:
 1900              	.LBB373:
 1901              		.loc 2 407 0
 1902 00f6 1BBA     		rev	r3, r3
 1903              	.LVL365:
 1904              	.LBE373:
 1905              	.LBE372:
 711:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1906              		.loc 1 711 0
 1907 00f8 0D93     		str	r3, [sp, #52]
 1908              	.LVL366:
 713:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1909              		.loc 1 713 0
 1910 00fa B368     		ldr	r3, [r6, #8]
 1911              	.LVL367:
 1912              	.LBB374:
 1913              	.LBB375:
 1914              		.loc 2 407 0
 1915 00fc 1BBA     		rev	r3, r3
 1916              	.LVL368:
 1917              	.LBE375:
 1918              	.LBE374:
ARM GAS  /tmp/cc5ofa7g.s 			page 63


 713:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1919              		.loc 1 713 0
 1920 00fe 0E93     		str	r3, [sp, #56]
 1921              	.LVL369:
 715:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1922              		.loc 1 715 0
 1923 0100 F368     		ldr	r3, [r6, #12]
 1924              	.LVL370:
 1925              	.LBB376:
 1926              	.LBB377:
 1927              		.loc 2 407 0
 1928 0102 1BBA     		rev	r3, r3
 1929              	.LVL371:
 1930              	.LBE377:
 1931              	.LBE376:
 715:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1932              		.loc 1 715 0
 1933 0104 0F93     		str	r3, [sp, #60]
 1934              	.LVL372:
 717:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1935              		.loc 1 717 0
 1936 0106 3369     		ldr	r3, [r6, #16]
 1937              	.LVL373:
 1938              	.LBB378:
 1939              	.LBB379:
 1940              		.loc 2 407 0
 1941 0108 1BBA     		rev	r3, r3
 1942              	.LVL374:
 1943              	.LBE379:
 1944              	.LBE378:
 717:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1945              		.loc 1 717 0
 1946 010a 1093     		str	r3, [sp, #64]
 1947              	.LVL375:
 719:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1948              		.loc 1 719 0
 1949 010c 7369     		ldr	r3, [r6, #20]
 1950              	.LVL376:
 1951              	.LBB380:
 1952              	.LBB381:
 1953              		.loc 2 407 0
 1954 010e 1BBA     		rev	r3, r3
 1955              	.LVL377:
 1956              	.LBE381:
 1957              	.LBE380:
 719:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 1958              		.loc 1 719 0
 1959 0110 1193     		str	r3, [sp, #68]
 720:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 1960              		.loc 1 720 0
 1961 0112 98E7     		b	.L65
 1962              	.LVL378:
 1963              	.L67:
 722:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1964              		.loc 1 722 0
 1965 0114 4FF40073 		mov	r3, #512
 1966 0118 1593     		str	r3, [sp, #84]
ARM GAS  /tmp/cc5ofa7g.s 			page 64


 723:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1967              		.loc 1 723 0
 1968 011a 3368     		ldr	r3, [r6]
 1969              	.LVL379:
 1970              	.LBB382:
 1971              	.LBB383:
 1972              		.loc 2 407 0
 1973 011c 1BBA     		rev	r3, r3
 1974              	.LVL380:
 1975              	.LBE383:
 1976              	.LBE382:
 723:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1977              		.loc 1 723 0
 1978 011e 0A93     		str	r3, [sp, #40]
 1979              	.LVL381:
 725:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1980              		.loc 1 725 0
 1981 0120 7368     		ldr	r3, [r6, #4]
 1982              	.LVL382:
 1983              	.LBB384:
 1984              	.LBB385:
 1985              		.loc 2 407 0
 1986 0122 1BBA     		rev	r3, r3
 1987              	.LVL383:
 1988              	.LBE385:
 1989              	.LBE384:
 725:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1990              		.loc 1 725 0
 1991 0124 0B93     		str	r3, [sp, #44]
 1992              	.LVL384:
 727:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1993              		.loc 1 727 0
 1994 0126 B368     		ldr	r3, [r6, #8]
 1995              	.LVL385:
 1996              	.LBB386:
 1997              	.LBB387:
 1998              		.loc 2 407 0
 1999 0128 1BBA     		rev	r3, r3
 2000              	.LVL386:
 2001              	.LBE387:
 2002              	.LBE386:
 727:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2003              		.loc 1 727 0
 2004 012a 0C93     		str	r3, [sp, #48]
 2005              	.LVL387:
 729:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2006              		.loc 1 729 0
 2007 012c F368     		ldr	r3, [r6, #12]
 2008              	.LVL388:
 2009              	.LBB388:
 2010              	.LBB389:
 2011              		.loc 2 407 0
 2012 012e 1BBA     		rev	r3, r3
 2013              	.LVL389:
 2014              	.LBE389:
 2015              	.LBE388:
 729:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 65


 2016              		.loc 1 729 0
 2017 0130 0D93     		str	r3, [sp, #52]
 2018              	.LVL390:
 731:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2019              		.loc 1 731 0
 2020 0132 3369     		ldr	r3, [r6, #16]
 2021              	.LVL391:
 2022              	.LBB390:
 2023              	.LBB391:
 2024              		.loc 2 407 0
 2025 0134 1BBA     		rev	r3, r3
 2026              	.LVL392:
 2027              	.LBE391:
 2028              	.LBE390:
 731:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2029              		.loc 1 731 0
 2030 0136 0E93     		str	r3, [sp, #56]
 2031              	.LVL393:
 733:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2032              		.loc 1 733 0
 2033 0138 7369     		ldr	r3, [r6, #20]
 2034              	.LVL394:
 2035              	.LBB392:
 2036              	.LBB393:
 2037              		.loc 2 407 0
 2038 013a 1BBA     		rev	r3, r3
 2039              	.LVL395:
 2040              	.LBE393:
 2041              	.LBE392:
 733:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2042              		.loc 1 733 0
 2043 013c 0F93     		str	r3, [sp, #60]
 2044              	.LVL396:
 735:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2045              		.loc 1 735 0
 2046 013e B369     		ldr	r3, [r6, #24]
 2047              	.LVL397:
 2048              	.LBB394:
 2049              	.LBB395:
 2050              		.loc 2 407 0
 2051 0140 1BBA     		rev	r3, r3
 2052              	.LVL398:
 2053              	.LBE395:
 2054              	.LBE394:
 735:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2055              		.loc 1 735 0
 2056 0142 1093     		str	r3, [sp, #64]
 2057              	.LVL399:
 737:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 2058              		.loc 1 737 0
 2059 0144 F369     		ldr	r3, [r6, #28]
 2060              	.LVL400:
 2061              	.LBB396:
 2062              	.LBB397:
 2063              		.loc 2 407 0
 2064 0146 1BBA     		rev	r3, r3
 2065              	.LVL401:
ARM GAS  /tmp/cc5ofa7g.s 			page 66


 2066              	.LBE397:
 2067              	.LBE396:
 737:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 2068              		.loc 1 737 0
 2069 0148 1193     		str	r3, [sp, #68]
 738:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 2070              		.loc 1 738 0
 2071 014a 7CE7     		b	.L65
 2072              	.LVL402:
 2073              	.L114:
 756:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2074              		.loc 1 756 0
 2075 014c FFF7FEFF 		bl	CRYP_FIFOFlush
 2076              	.LVL403:
 759:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2077              		.loc 1 759 0
 2078 0150 0AA8     		add	r0, sp, #40
 2079 0152 FFF7FEFF 		bl	CRYP_KeyInit
 2080              	.LVL404:
 762:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2081              		.loc 1 762 0
 2082 0156 06A8     		add	r0, sp, #24
 2083 0158 FFF7FEFF 		bl	CRYP_IVInit
 2084              	.LVL405:
 765:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_GCM;
 2085              		.loc 1 765 0
 2086 015c 0026     		movs	r6, #0
 2087              	.LVL406:
 2088 015e 1296     		str	r6, [sp, #72]
 766:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 2089              		.loc 1 766 0
 2090 0160 4FF40023 		mov	r3, #524288
 2091 0164 1393     		str	r3, [sp, #76]
 767:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 2092              		.loc 1 767 0
 2093 0166 8023     		movs	r3, #128
 2094 0168 1493     		str	r3, [sp, #80]
 768:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2095              		.loc 1 768 0
 2096 016a 12A8     		add	r0, sp, #72
 2097 016c FFF7FEFF 		bl	CRYP_Init
 2098              	.LVL407:
 772:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2099              		.loc 1 772 0
 2100 0170 3046     		mov	r0, r6
 2101 0172 FFF7FEFF 		bl	CRYP_PhaseConfig
 2102              	.LVL408:
 775:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2103              		.loc 1 775 0
 2104 0176 0120     		movs	r0, #1
 2105 0178 FFF7FEFF 		bl	CRYP_Cmd
 2106              	.LVL409:
 2107              	.L70:
 778:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2108              		.loc 1 778 0 discriminator 1
 2109 017c FFF7FEFF 		bl	CRYP_GetCmdStatus
 2110              	.LVL410:
ARM GAS  /tmp/cc5ofa7g.s 			page 67


 2111 0180 0128     		cmp	r0, #1
 2112 0182 FBD0     		beq	.L70
 783:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2113              		.loc 1 783 0
 2114 0184 B9F1000F 		cmp	r9, #0
 2115 0188 12D1     		bne	.L116
 681:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 2116              		.loc 1 681 0
 2117 018a 0125     		movs	r5, #1
 2118              	.LVL411:
 2119              	.L71:
 831:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2120              		.loc 1 831 0
 2121 018c B8F1000F 		cmp	r8, #0
 2122 0190 00F08680 		beq	.L77
 834:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2123              		.loc 1 834 0
 2124 0194 4FF40030 		mov	r0, #131072
 2125 0198 FFF7FEFF 		bl	CRYP_PhaseConfig
 2126              	.LVL412:
 837:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2127              		.loc 1 837 0
 2128 019c 0120     		movs	r0, #1
 2129 019e FFF7FEFF 		bl	CRYP_Cmd
 2130              	.LVL413:
 839:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2131              		.loc 1 839 0
 2132 01a2 FFF7FEFF 		bl	CRYP_GetCmdStatus
 2133              	.LVL414:
 2134 01a6 0028     		cmp	r0, #0
 2135 01a8 00F05A81 		beq	.L103
 846:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2136              		.loc 1 846 0
 2137 01ac 0026     		movs	r6, #0
 2138              	.LVL415:
 2139 01ae 39E0     		b	.L78
 2140              	.LVL416:
 2141              	.L116:
 786:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2142              		.loc 1 786 0
 2143 01b0 4FF48030 		mov	r0, #65536
 2144 01b4 FFF7FEFF 		bl	CRYP_PhaseConfig
 2145              	.LVL417:
 789:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2146              		.loc 1 789 0
 2147 01b8 0120     		movs	r0, #1
 2148 01ba FFF7FEFF 		bl	CRYP_Cmd
 2149              	.LVL418:
 791:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2150              		.loc 1 791 0
 2151 01be FFF7FEFF 		bl	CRYP_GetCmdStatus
 2152              	.LVL419:
 2153 01c2 0028     		cmp	r0, #0
 2154 01c4 00F04A81 		beq	.L101
 798:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2155              		.loc 1 798 0
 2156 01c8 0026     		movs	r6, #0
ARM GAS  /tmp/cc5ofa7g.s 			page 68


 2157 01ca 12E0     		b	.L73
 2158              	.LVL420:
 2159              	.L74:
 801:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2160              		.loc 1 801 0 discriminator 1
 2161 01cc 0120     		movs	r0, #1
 2162 01ce FFF7FEFF 		bl	CRYP_GetFlagStatus
 2163              	.LVL421:
 2164 01d2 0028     		cmp	r0, #0
 2165 01d4 FAD0     		beq	.L74
 806:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2166              		.loc 1 806 0 discriminator 2
 2167 01d6 2868     		ldr	r0, [r5]
 2168 01d8 FFF7FEFF 		bl	CRYP_DataIn
 2169              	.LVL422:
 808:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2170              		.loc 1 808 0 discriminator 2
 2171 01dc 6868     		ldr	r0, [r5, #4]
 2172 01de FFF7FEFF 		bl	CRYP_DataIn
 2173              	.LVL423:
 810:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2174              		.loc 1 810 0 discriminator 2
 2175 01e2 A868     		ldr	r0, [r5, #8]
 2176 01e4 FFF7FEFF 		bl	CRYP_DataIn
 2177              	.LVL424:
 812:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2178              		.loc 1 812 0 discriminator 2
 2179 01e8 E868     		ldr	r0, [r5, #12]
 2180 01ea FFF7FEFF 		bl	CRYP_DataIn
 2181              	.LVL425:
 813:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2182              		.loc 1 813 0 discriminator 2
 2183 01ee 1035     		adds	r5, r5, #16
 2184              	.LVL426:
 798:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2185              		.loc 1 798 0 discriminator 2
 2186 01f0 1036     		adds	r6, r6, #16
 2187              	.LVL427:
 2188              	.L73:
 798:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2189              		.loc 1 798 0 is_stmt 0 discriminator 1
 2190 01f2 4E45     		cmp	r6, r9
 2191 01f4 EAD3     		bcc	.L74
 817:./FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 2192              		.loc 1 817 0 is_stmt 1
 2193 01f6 0023     		movs	r3, #0
 2194 01f8 0593     		str	r3, [sp, #20]
 2195              	.LVL428:
 2196              	.L76:
 820:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 2197              		.loc 1 820 0 discriminator 2
 2198 01fa 1020     		movs	r0, #16
 2199 01fc FFF7FEFF 		bl	CRYP_GetFlagStatus
 2200              	.LVL429:
 2201 0200 0246     		mov	r2, r0
 2202              	.LVL430:
 821:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
ARM GAS  /tmp/cc5ofa7g.s 			page 69


 2203              		.loc 1 821 0 discriminator 2
 2204 0202 059B     		ldr	r3, [sp, #20]
 2205 0204 0133     		adds	r3, r3, #1
 2206 0206 0593     		str	r3, [sp, #20]
 822:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2207              		.loc 1 822 0 discriminator 2
 2208 0208 059B     		ldr	r3, [sp, #20]
 2209 020a B3F5803F 		cmp	r3, #65536
 2210 020e 01D0     		beq	.L75
 822:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2211              		.loc 1 822 0 is_stmt 0 discriminator 1
 2212 0210 0028     		cmp	r0, #0
 2213 0212 F2D1     		bne	.L76
 2214              	.L75:
 824:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2215              		.loc 1 824 0 is_stmt 1
 2216 0214 0AB9     		cbnz	r2, .L102
 681:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 2217              		.loc 1 681 0
 2218 0216 0125     		movs	r5, #1
 2219              	.LVL431:
 2220 0218 B8E7     		b	.L71
 2221              	.LVL432:
 2222              	.L102:
 826:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2223              		.loc 1 826 0
 2224 021a 0025     		movs	r5, #0
 2225              	.LVL433:
 2226 021c B6E7     		b	.L71
 2227              	.LVL434:
 2228              	.L80:
 870:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2229              		.loc 1 870 0
 2230 021e 3AB3     		cbz	r2, .L83
 872:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 2231              		.loc 1 872 0
 2232 0220 0025     		movs	r5, #0
 2233              	.LVL435:
 2234              	.L82:
 846:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2235              		.loc 1 846 0 discriminator 2
 2236 0222 1036     		adds	r6, r6, #16
 2237              	.LVL436:
 2238              	.L78:
 846:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2239              		.loc 1 846 0 is_stmt 0 discriminator 1
 2240 0224 4645     		cmp	r6, r8
 2241 0226 3BD2     		bcs	.L77
 846:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2242              		.loc 1 846 0 discriminator 3
 2243 0228 002D     		cmp	r5, #0
 2244 022a 39D0     		beq	.L77
 2245              	.L79:
 849:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2246              		.loc 1 849 0 is_stmt 1 discriminator 1
 2247 022c 0120     		movs	r0, #1
 2248 022e FFF7FEFF 		bl	CRYP_GetFlagStatus
ARM GAS  /tmp/cc5ofa7g.s 			page 70


 2249              	.LVL437:
 2250 0232 0028     		cmp	r0, #0
 2251 0234 FAD0     		beq	.L79
 853:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2252              		.loc 1 853 0
 2253 0236 2068     		ldr	r0, [r4]
 2254 0238 FFF7FEFF 		bl	CRYP_DataIn
 2255              	.LVL438:
 855:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2256              		.loc 1 855 0
 2257 023c 6068     		ldr	r0, [r4, #4]
 2258 023e FFF7FEFF 		bl	CRYP_DataIn
 2259              	.LVL439:
 857:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2260              		.loc 1 857 0
 2261 0242 A068     		ldr	r0, [r4, #8]
 2262 0244 FFF7FEFF 		bl	CRYP_DataIn
 2263              	.LVL440:
 859:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2264              		.loc 1 859 0
 2265 0248 E068     		ldr	r0, [r4, #12]
 2266 024a FFF7FEFF 		bl	CRYP_DataIn
 2267              	.LVL441:
 860:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
 2268              		.loc 1 860 0
 2269 024e 1034     		adds	r4, r4, #16
 2270              	.LVL442:
 863:./FWLIB/src/stm32f4xx_cryp_aes.c ****         do
 2271              		.loc 1 863 0
 2272 0250 0023     		movs	r3, #0
 2273              	.LVL443:
 2274 0252 0593     		str	r3, [sp, #20]
 2275              	.LVL444:
 2276              	.L81:
 866:./FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 2277              		.loc 1 866 0 discriminator 2
 2278 0254 1020     		movs	r0, #16
 2279 0256 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2280              	.LVL445:
 2281 025a 0246     		mov	r2, r0
 2282              	.LVL446:
 867:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2283              		.loc 1 867 0 discriminator 2
 2284 025c 059B     		ldr	r3, [sp, #20]
 2285 025e 0133     		adds	r3, r3, #1
 2286 0260 0593     		str	r3, [sp, #20]
 868:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2287              		.loc 1 868 0 discriminator 2
 2288 0262 059B     		ldr	r3, [sp, #20]
 2289 0264 B3F5803F 		cmp	r3, #65536
 2290 0268 D9D0     		beq	.L80
 868:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2291              		.loc 1 868 0 is_stmt 0 discriminator 1
 2292 026a 0028     		cmp	r0, #0
 2293 026c F2D1     		bne	.L81
 2294 026e D6E7     		b	.L80
 2295              	.LVL447:
ARM GAS  /tmp/cc5ofa7g.s 			page 71


 2296              	.L83:
 877:./FWLIB/src/stm32f4xx_cryp_aes.c ****           {
 2297              		.loc 1 877 0 is_stmt 1 discriminator 1
 2298 0270 0420     		movs	r0, #4
 2299 0272 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2300              	.LVL448:
 2301 0276 0028     		cmp	r0, #0
 2302 0278 FAD0     		beq	.L83
 882:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2303              		.loc 1 882 0
 2304 027a FFF7FEFF 		bl	CRYP_DataOut
 2305              	.LVL449:
 2306 027e CAF80000 		str	r0, [r10]
 2307              	.LVL450:
 884:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2308              		.loc 1 884 0
 2309 0282 FFF7FEFF 		bl	CRYP_DataOut
 2310              	.LVL451:
 2311 0286 CAF80400 		str	r0, [r10, #4]
 2312              	.LVL452:
 886:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2313              		.loc 1 886 0
 2314 028a FFF7FEFF 		bl	CRYP_DataOut
 2315              	.LVL453:
 2316 028e CAF80800 		str	r0, [r10, #8]
 2317              	.LVL454:
 888:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2318              		.loc 1 888 0
 2319 0292 FFF7FEFF 		bl	CRYP_DataOut
 2320              	.LVL455:
 2321 0296 CAF80C00 		str	r0, [r10, #12]
 889:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 2322              		.loc 1 889 0
 2323 029a 0AF1100A 		add	r10, r10, #16
 2324              	.LVL456:
 2325 029e C0E7     		b	.L82
 2326              	.LVL457:
 2327              	.L77:
 896:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2328              		.loc 1 896 0
 2329 02a0 4FF44030 		mov	r0, #196608
 2330 02a4 FFF7FEFF 		bl	CRYP_PhaseConfig
 2331              	.LVL458:
 899:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 2332              		.loc 1 899 0
 2333 02a8 0120     		movs	r0, #1
 2334 02aa FFF7FEFF 		bl	CRYP_Cmd
 2335              	.LVL459:
 901:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2336              		.loc 1 901 0
 2337 02ae FFF7FEFF 		bl	CRYP_GetCmdStatus
 2338              	.LVL460:
 2339 02b2 08B9     		cbnz	r0, .L117
 905:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 2340              		.loc 1 905 0
 2341 02b4 0025     		movs	r5, #0
 2342              	.LVL461:
ARM GAS  /tmp/cc5ofa7g.s 			page 72


 2343 02b6 A6E0     		b	.L72
 2344              	.LVL462:
 2345              	.L117:
 909:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
 2346              		.loc 1 909 0
 2347 02b8 0020     		movs	r0, #0
 2348              	.LVL463:
 2349 02ba FFF7FEFF 		bl	CRYP_DataIn
 2350              	.LVL464:
 910:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
 2351              		.loc 1 910 0
 2352 02be 029B     		ldr	r3, [sp, #8]
 2353 02c0 18BA     		rev	r0, r3
 2354 02c2 FFF7FEFF 		bl	CRYP_DataIn
 2355              	.LVL465:
 911:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
 2356              		.loc 1 911 0
 2357 02c6 0020     		movs	r0, #0
 2358              	.LVL466:
 2359 02c8 FFF7FEFF 		bl	CRYP_DataIn
 2360              	.LVL467:
 912:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
 2361              		.loc 1 912 0
 2362 02cc 039B     		ldr	r3, [sp, #12]
 2363 02ce 18BA     		rev	r0, r3
 2364 02d0 FFF7FEFF 		bl	CRYP_DataIn
 2365              	.LVL468:
 2366              	.L84:
 914:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2367              		.loc 1 914 0 discriminator 1
 2368 02d4 0420     		movs	r0, #4
 2369 02d6 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2370              	.LVL469:
 2371 02da 0028     		cmp	r0, #0
 2372 02dc FAD0     		beq	.L84
 920:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2373              		.loc 1 920 0
 2374 02de FFF7FEFF 		bl	CRYP_DataOut
 2375              	.LVL470:
 2376 02e2 259B     		ldr	r3, [sp, #148]
 2377 02e4 1860     		str	r0, [r3]
 2378              	.LVL471:
 922:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2379              		.loc 1 922 0
 2380 02e6 FFF7FEFF 		bl	CRYP_DataOut
 2381              	.LVL472:
 2382 02ea 259B     		ldr	r3, [sp, #148]
 2383 02ec 5860     		str	r0, [r3, #4]
 2384              	.LVL473:
 924:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2385              		.loc 1 924 0
 2386 02ee FFF7FEFF 		bl	CRYP_DataOut
 2387              	.LVL474:
 2388 02f2 259B     		ldr	r3, [sp, #148]
 2389 02f4 9860     		str	r0, [r3, #8]
 2390              	.LVL475:
 926:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 73


 2391              		.loc 1 926 0
 2392 02f6 FFF7FEFF 		bl	CRYP_DataOut
 2393              	.LVL476:
 2394 02fa 259B     		ldr	r3, [sp, #148]
 2395 02fc D860     		str	r0, [r3, #12]
 2396              	.LVL477:
 2397 02fe A9E0     		b	.L85
 2398              	.LVL478:
 2399              	.L115:
 963:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2400              		.loc 1 963 0
 2401 0300 4FF48030 		mov	r0, #65536
 2402 0304 FFF7FEFF 		bl	CRYP_PhaseConfig
 2403              	.LVL479:
 966:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 2404              		.loc 1 966 0
 2405 0308 0120     		movs	r0, #1
 2406 030a FFF7FEFF 		bl	CRYP_Cmd
 2407              	.LVL480:
 968:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2408              		.loc 1 968 0
 2409 030e FFF7FEFF 		bl	CRYP_GetCmdStatus
 2410              	.LVL481:
 2411 0312 0028     		cmp	r0, #0
 2412 0314 00F0A680 		beq	.L107
 975:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2413              		.loc 1 975 0
 2414 0318 0026     		movs	r6, #0
 2415              	.LVL482:
 2416 031a 12E0     		b	.L88
 2417              	.LVL483:
 2418              	.L89:
 978:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2419              		.loc 1 978 0 discriminator 1
 2420 031c 0120     		movs	r0, #1
 2421 031e FFF7FEFF 		bl	CRYP_GetFlagStatus
 2422              	.LVL484:
 2423 0322 0028     		cmp	r0, #0
 2424 0324 FAD0     		beq	.L89
 983:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2425              		.loc 1 983 0 discriminator 2
 2426 0326 2868     		ldr	r0, [r5]
 2427 0328 FFF7FEFF 		bl	CRYP_DataIn
 2428              	.LVL485:
 985:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2429              		.loc 1 985 0 discriminator 2
 2430 032c 6868     		ldr	r0, [r5, #4]
 2431 032e FFF7FEFF 		bl	CRYP_DataIn
 2432              	.LVL486:
 987:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2433              		.loc 1 987 0 discriminator 2
 2434 0332 A868     		ldr	r0, [r5, #8]
 2435 0334 FFF7FEFF 		bl	CRYP_DataIn
 2436              	.LVL487:
 989:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2437              		.loc 1 989 0 discriminator 2
 2438 0338 E868     		ldr	r0, [r5, #12]
ARM GAS  /tmp/cc5ofa7g.s 			page 74


 2439 033a FFF7FEFF 		bl	CRYP_DataIn
 2440              	.LVL488:
 990:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2441              		.loc 1 990 0 discriminator 2
 2442 033e 1035     		adds	r5, r5, #16
 2443              	.LVL489:
 975:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2444              		.loc 1 975 0 discriminator 2
 2445 0340 1036     		adds	r6, r6, #16
 2446              	.LVL490:
 2447              	.L88:
 975:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2448              		.loc 1 975 0 is_stmt 0 discriminator 1
 2449 0342 4E45     		cmp	r6, r9
 2450 0344 EAD3     		bcc	.L89
 994:./FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 2451              		.loc 1 994 0 is_stmt 1
 2452 0346 0023     		movs	r3, #0
 2453 0348 0593     		str	r3, [sp, #20]
 2454              	.LVL491:
 2455              	.L91:
 997:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 2456              		.loc 1 997 0 discriminator 2
 2457 034a 1020     		movs	r0, #16
 2458 034c FFF7FEFF 		bl	CRYP_GetFlagStatus
 2459              	.LVL492:
 2460 0350 0246     		mov	r2, r0
 2461              	.LVL493:
 998:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2462              		.loc 1 998 0 discriminator 2
 2463 0352 059B     		ldr	r3, [sp, #20]
 2464 0354 0133     		adds	r3, r3, #1
 2465 0356 0593     		str	r3, [sp, #20]
 999:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2466              		.loc 1 999 0 discriminator 2
 2467 0358 059B     		ldr	r3, [sp, #20]
 2468 035a B3F5803F 		cmp	r3, #65536
 2469 035e 01D0     		beq	.L90
 999:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2470              		.loc 1 999 0 is_stmt 0 discriminator 1
 2471 0360 0028     		cmp	r0, #0
 2472 0362 F2D1     		bne	.L91
 2473              	.L90:
1001:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2474              		.loc 1 1001 0 is_stmt 1
 2475 0364 0AB9     		cbnz	r2, .L108
 681:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 2476              		.loc 1 681 0
 2477 0366 0125     		movs	r5, #1
 2478              	.LVL494:
 2479 0368 9DE6     		b	.L87
 2480              	.LVL495:
 2481              	.L108:
1003:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2482              		.loc 1 1003 0
 2483 036a 0025     		movs	r5, #0
 2484              	.LVL496:
ARM GAS  /tmp/cc5ofa7g.s 			page 75


 2485 036c 9BE6     		b	.L87
 2486              	.LVL497:
 2487              	.L95:
1024:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1025:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1026:./FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1027:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1028:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1029:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1030:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1031:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1032:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1033:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1034:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1035:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1036:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1037:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1038:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
1039:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
1040:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter = 0;
1041:./FWLIB/src/stm32f4xx_cryp_aes.c ****         do
1042:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1043:./FWLIB/src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1044:./FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
1045:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1046:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1047:./FWLIB/src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 2488              		.loc 1 1047 0
 2489 036e 3AB3     		cbz	r2, .L98
1048:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1049:./FWLIB/src/stm32f4xx_cryp_aes.c ****           status = ERROR;
 2490              		.loc 1 1049 0
 2491 0370 0025     		movs	r5, #0
 2492              	.LVL498:
 2493              	.L97:
1023:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2494              		.loc 1 1023 0 discriminator 2
 2495 0372 1036     		adds	r6, r6, #16
 2496              	.LVL499:
 2497              	.L93:
1023:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2498              		.loc 1 1023 0 is_stmt 0 discriminator 1
 2499 0374 4645     		cmp	r6, r8
 2500 0376 3BD2     		bcs	.L92
1023:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2501              		.loc 1 1023 0 discriminator 3
 2502 0378 002D     		cmp	r5, #0
 2503 037a 39D0     		beq	.L92
 2504              	.L94:
1026:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 2505              		.loc 1 1026 0 is_stmt 1 discriminator 1
 2506 037c 0120     		movs	r0, #1
 2507 037e FFF7FEFF 		bl	CRYP_GetFlagStatus
 2508              	.LVL500:
 2509 0382 0028     		cmp	r0, #0
 2510 0384 FAD0     		beq	.L94
1030:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 76


 2511              		.loc 1 1030 0
 2512 0386 2068     		ldr	r0, [r4]
 2513 0388 FFF7FEFF 		bl	CRYP_DataIn
 2514              	.LVL501:
1032:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2515              		.loc 1 1032 0
 2516 038c 6068     		ldr	r0, [r4, #4]
 2517 038e FFF7FEFF 		bl	CRYP_DataIn
 2518              	.LVL502:
1034:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2519              		.loc 1 1034 0
 2520 0392 A068     		ldr	r0, [r4, #8]
 2521 0394 FFF7FEFF 		bl	CRYP_DataIn
 2522              	.LVL503:
1036:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2523              		.loc 1 1036 0
 2524 0398 E068     		ldr	r0, [r4, #12]
 2525 039a FFF7FEFF 		bl	CRYP_DataIn
 2526              	.LVL504:
1037:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
 2527              		.loc 1 1037 0
 2528 039e 1034     		adds	r4, r4, #16
 2529              	.LVL505:
1040:./FWLIB/src/stm32f4xx_cryp_aes.c ****         do
 2530              		.loc 1 1040 0
 2531 03a0 0023     		movs	r3, #0
 2532              	.LVL506:
 2533 03a2 0593     		str	r3, [sp, #20]
 2534              	.LVL507:
 2535              	.L96:
1043:./FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 2536              		.loc 1 1043 0 discriminator 2
 2537 03a4 1020     		movs	r0, #16
 2538 03a6 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2539              	.LVL508:
 2540 03aa 0246     		mov	r2, r0
 2541              	.LVL509:
1044:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2542              		.loc 1 1044 0 discriminator 2
 2543 03ac 059B     		ldr	r3, [sp, #20]
 2544 03ae 0133     		adds	r3, r3, #1
 2545 03b0 0593     		str	r3, [sp, #20]
1045:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2546              		.loc 1 1045 0 discriminator 2
 2547 03b2 059B     		ldr	r3, [sp, #20]
 2548 03b4 B3F5803F 		cmp	r3, #65536
 2549 03b8 D9D0     		beq	.L95
1045:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2550              		.loc 1 1045 0 is_stmt 0 discriminator 1
 2551 03ba 0028     		cmp	r0, #0
 2552 03bc F2D1     		bne	.L96
 2553 03be D6E7     		b	.L95
 2554              	.LVL510:
 2555              	.L98:
1050:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1051:./FWLIB/src/stm32f4xx_cryp_aes.c ****         else
1052:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
ARM GAS  /tmp/cc5ofa7g.s 			page 77


1053:./FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
1054:./FWLIB/src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 2556              		.loc 1 1054 0 is_stmt 1 discriminator 1
 2557 03c0 0420     		movs	r0, #4
 2558 03c2 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2559              	.LVL511:
 2560 03c6 0028     		cmp	r0, #0
 2561 03c8 FAD0     		beq	.L98
1055:./FWLIB/src/stm32f4xx_cryp_aes.c ****           {
1056:./FWLIB/src/stm32f4xx_cryp_aes.c ****           }
1057:./FWLIB/src/stm32f4xx_cryp_aes.c ****           
1058:./FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
1059:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2562              		.loc 1 1059 0
 2563 03ca FFF7FEFF 		bl	CRYP_DataOut
 2564              	.LVL512:
 2565 03ce CAF80000 		str	r0, [r10]
 2566              	.LVL513:
1060:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1061:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2567              		.loc 1 1061 0
 2568 03d2 FFF7FEFF 		bl	CRYP_DataOut
 2569              	.LVL514:
 2570 03d6 CAF80400 		str	r0, [r10, #4]
 2571              	.LVL515:
1062:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1063:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2572              		.loc 1 1063 0
 2573 03da FFF7FEFF 		bl	CRYP_DataOut
 2574              	.LVL516:
 2575 03de CAF80800 		str	r0, [r10, #8]
 2576              	.LVL517:
1064:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1065:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2577              		.loc 1 1065 0
 2578 03e2 FFF7FEFF 		bl	CRYP_DataOut
 2579              	.LVL518:
 2580 03e6 CAF80C00 		str	r0, [r10, #12]
1066:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2581              		.loc 1 1066 0
 2582 03ea 0AF1100A 		add	r10, r10, #16
 2583              	.LVL519:
 2584 03ee C0E7     		b	.L97
 2585              	.LVL520:
 2586              	.L92:
1067:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1068:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1069:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1070:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1071:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
1072:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
1073:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 2587              		.loc 1 1073 0
 2588 03f0 4FF44030 		mov	r0, #196608
 2589 03f4 FFF7FEFF 		bl	CRYP_PhaseConfig
 2590              	.LVL521:
1074:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
ARM GAS  /tmp/cc5ofa7g.s 			page 78


1075:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1076:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 2591              		.loc 1 1076 0
 2592 03f8 0120     		movs	r0, #1
 2593 03fa FFF7FEFF 		bl	CRYP_Cmd
 2594              	.LVL522:
1077:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1078:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
 2595              		.loc 1 1078 0
 2596 03fe FFF7FEFF 		bl	CRYP_GetCmdStatus
 2597              	.LVL523:
 2598 0402 20B9     		cbnz	r0, .L118
1079:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1080:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1081:./FWLIB/src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
1082:./FWLIB/src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 2599              		.loc 1 1082 0
 2600 0404 0025     		movs	r5, #0
 2601              	.LVL524:
 2602              	.L72:
1083:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1084:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1085:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write number of bits concatenated with header in the IN FIFO */
1086:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength>>32));
1087:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
1088:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
1089:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
1090:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
1091:./FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
1092:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1093:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1094:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1095:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr = (uint32_t)AuthTAG;
1096:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Read the Auth TAG in the IN FIFO */
1097:./FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
1098:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
1099:./FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
1100:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
1101:./FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
1102:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
1103:./FWLIB/src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
1104:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
1105:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1106:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
1107:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
1108:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1109:./FWLIB/src/stm32f4xx_cryp_aes.c ****   return status;
1110:./FWLIB/src/stm32f4xx_cryp_aes.c **** }
 2603              		.loc 1 1110 0
 2604 0406 2846     		mov	r0, r5
 2605 0408 17B0     		add	sp, sp, #92
 2606              	.LCFI14:
 2607              		.cfi_remember_state
 2608              		.cfi_def_cfa_offset 36
 2609              		@ sp needed
 2610 040a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2611              	.LVL525:
ARM GAS  /tmp/cc5ofa7g.s 			page 79


 2612              	.L118:
 2613              	.LCFI15:
 2614              		.cfi_restore_state
1086:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
 2615              		.loc 1 1086 0
 2616 040e 0020     		movs	r0, #0
 2617              	.LVL526:
 2618 0410 FFF7FEFF 		bl	CRYP_DataIn
 2619              	.LVL527:
1087:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
 2620              		.loc 1 1087 0
 2621 0414 029B     		ldr	r3, [sp, #8]
 2622 0416 18BA     		rev	r0, r3
 2623 0418 FFF7FEFF 		bl	CRYP_DataIn
 2624              	.LVL528:
1088:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
 2625              		.loc 1 1088 0
 2626 041c 0020     		movs	r0, #0
 2627              	.LVL529:
 2628 041e FFF7FEFF 		bl	CRYP_DataIn
 2629              	.LVL530:
1089:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
 2630              		.loc 1 1089 0
 2631 0422 039B     		ldr	r3, [sp, #12]
 2632 0424 18BA     		rev	r0, r3
 2633 0426 FFF7FEFF 		bl	CRYP_DataIn
 2634              	.LVL531:
 2635              	.L99:
1091:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2636              		.loc 1 1091 0 discriminator 1
 2637 042a 0420     		movs	r0, #4
 2638 042c FFF7FEFF 		bl	CRYP_GetFlagStatus
 2639              	.LVL532:
 2640 0430 0028     		cmp	r0, #0
 2641 0432 FAD0     		beq	.L99
1097:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2642              		.loc 1 1097 0
 2643 0434 FFF7FEFF 		bl	CRYP_DataOut
 2644              	.LVL533:
 2645 0438 259B     		ldr	r3, [sp, #148]
 2646 043a 1860     		str	r0, [r3]
 2647              	.LVL534:
1099:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2648              		.loc 1 1099 0
 2649 043c FFF7FEFF 		bl	CRYP_DataOut
 2650              	.LVL535:
 2651 0440 259B     		ldr	r3, [sp, #148]
 2652 0442 5860     		str	r0, [r3, #4]
 2653              	.LVL536:
1101:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 2654              		.loc 1 1101 0
 2655 0444 FFF7FEFF 		bl	CRYP_DataOut
 2656              	.LVL537:
 2657 0448 259B     		ldr	r3, [sp, #148]
 2658 044a 9860     		str	r0, [r3, #8]
 2659              	.LVL538:
1103:./FWLIB/src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 80


 2660              		.loc 1 1103 0
 2661 044c FFF7FEFF 		bl	CRYP_DataOut
 2662              	.LVL539:
 2663 0450 259B     		ldr	r3, [sp, #148]
 2664 0452 D860     		str	r0, [r3, #12]
 2665              	.LVL540:
 2666              	.L85:
1107:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 2667              		.loc 1 1107 0
 2668 0454 0020     		movs	r0, #0
 2669              	.LVL541:
 2670 0456 FFF7FEFF 		bl	CRYP_Cmd
 2671              	.LVL542:
1109:./FWLIB/src/stm32f4xx_cryp_aes.c **** }
 2672              		.loc 1 1109 0
 2673 045a D4E7     		b	.L72
 2674              	.LVL543:
 2675              	.L101:
 795:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2676              		.loc 1 795 0
 2677 045c 0025     		movs	r5, #0
 2678              	.LVL544:
 2679 045e D2E7     		b	.L72
 2680              	.LVL545:
 2681              	.L103:
 843:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2682              		.loc 1 843 0
 2683 0460 0025     		movs	r5, #0
 2684              	.LVL546:
 2685 0462 D0E7     		b	.L72
 2686              	.LVL547:
 2687              	.L107:
 972:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2688              		.loc 1 972 0
 2689 0464 0025     		movs	r5, #0
 2690              	.LVL548:
 2691 0466 CEE7     		b	.L72
 2692              	.LVL549:
 2693              	.L109:
1020:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2694              		.loc 1 1020 0
 2695 0468 0025     		movs	r5, #0
 2696              	.LVL550:
 2697 046a CCE7     		b	.L72
 2698              		.cfi_endproc
 2699              	.LFE115:
 2701              		.section	.text.CRYP_AES_CCM,"ax",%progbits
 2702              		.align	1
 2703              		.global	CRYP_AES_CCM
 2704              		.syntax unified
 2705              		.thumb
 2706              		.thumb_func
 2707              		.fpu fpv4-sp-d16
 2709              	CRYP_AES_CCM:
 2710              	.LFB116:
1111:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1112:./FWLIB/src/stm32f4xx_cryp_aes.c **** /**
ARM GAS  /tmp/cc5ofa7g.s 			page 81


1113:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CCM Mode. The GCM and CCM modes
1114:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *         are available only on STM32F437x Devices.
1115:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
1116:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
1117:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
1118:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
1119:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Nonce: the nounce used for AES algorithm. It shall be unique for each processing.
1120:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
1121:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
1122:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
1123:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer in bytes, must be a multiple of 16.
1124:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Header: pointer to the header buffer.
1125:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Hlength: length of the header buffer in bytes.
1126:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  HBuffer: pointer to temporary buffer used to append the header
1127:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *         HBuffer size must be equal to Hlength + 21
1128:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
1129:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  AuthTAG: pointer to the authentication TAG buffer.
1130:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @param  TAGSize: the size of the TAG (called also MAC).
1131:./FWLIB/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
1132:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
1133:./FWLIB/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
1134:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
1135:./FWLIB/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CCM(uint8_t Mode, 
1136:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t* Nonce, uint32_t NonceSize,
1137:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Key, uint16_t Keysize,
1138:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Input, uint32_t ILength,
1139:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Header, uint32_t HLength, uint8_t *HBuffer,
1140:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output,
1141:./FWLIB/src/stm32f4xx_cryp_aes.c ****                          uint8_t *AuthTAG, uint32_t TAGSize)
1142:./FWLIB/src/stm32f4xx_cryp_aes.c **** {
 2711              		.loc 1 1142 0
 2712              		.cfi_startproc
 2713              		@ args = 36, pretend = 0, frame = 128
 2714              		@ frame_needed = 0, uses_anonymous_args = 0
 2715              	.LVL551:
 2716 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2717              	.LCFI16:
 2718              		.cfi_def_cfa_offset 36
 2719              		.cfi_offset 4, -36
 2720              		.cfi_offset 5, -32
 2721              		.cfi_offset 6, -28
 2722              		.cfi_offset 7, -24
 2723              		.cfi_offset 8, -20
 2724              		.cfi_offset 9, -16
 2725              		.cfi_offset 10, -12
 2726              		.cfi_offset 11, -8
 2727              		.cfi_offset 14, -4
 2728 0004 A1B0     		sub	sp, sp, #132
 2729              	.LCFI17:
 2730              		.cfi_def_cfa_offset 168
 2731 0006 0090     		str	r0, [sp]
 2732 0008 9946     		mov	r9, r3
 2733 000a BDF8A8A0 		ldrh	r10, [sp, #168]
 2734 000e DDF8B4E0 		ldr	lr, [sp, #180]
 2735 0012 2E9C     		ldr	r4, [sp, #184]
 2736 0014 DDF8BCC0 		ldr	ip, [sp, #188]
1143:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
ARM GAS  /tmp/cc5ofa7g.s 			page 82


1144:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
1145:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
1146:./FWLIB/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 2737              		.loc 1 1146 0
 2738 0018 0023     		movs	r3, #0
 2739              	.LVL552:
 2740 001a 0F93     		str	r3, [sp, #60]
 2741              	.LVL553:
1147:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
1148:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
1149:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
1150:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 2742              		.loc 1 1150 0
 2743 001c 2B9E     		ldr	r6, [sp, #172]
 2744              	.LVL554:
1151:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 2745              		.loc 1 1151 0
 2746 001e DDF8C0B0 		ldr	fp, [sp, #192]
 2747              	.LVL555:
1152:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t headeraddr = (uint32_t)Header;
 2748              		.loc 1 1152 0
 2749 0022 F046     		mov	r8, lr
 2750              	.LVL556:
1153:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t tagaddr = (uint32_t)AuthTAG;
 2751              		.loc 1 1153 0
 2752 0024 3198     		ldr	r0, [sp, #196]
 2753              	.LVL557:
 2754 0026 0190     		str	r0, [sp, #4]
 2755              	.LVL558:
1154:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t headersize = HLength;
1155:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t loopcounter = 0;
1156:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t bufferidx = 0;
1157:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint8_t blockb0[16] = {0};/* Block B0 */
 2756              		.loc 1 1157 0
 2757 0028 0BAF     		add	r7, sp, #44
 2758 002a 0B93     		str	r3, [sp, #44]
 2759 002c 7B60     		str	r3, [r7, #4]
 2760 002e BB60     		str	r3, [r7, #8]
 2761 0030 FB60     		str	r3, [r7, #12]
1158:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint8_t ctr[16] = {0}; /* Counter */
 2762              		.loc 1 1158 0
 2763 0032 07AD     		add	r5, sp, #28
 2764 0034 0793     		str	r3, [sp, #28]
 2765 0036 6B60     		str	r3, [r5, #4]
 2766 0038 AB60     		str	r3, [r5, #8]
 2767 003a EB60     		str	r3, [r5, #12]
1159:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t temptag[4] = {0}; /* temporary TAG (MAC) */
 2768              		.loc 1 1159 0
 2769 003c 0393     		str	r3, [sp, #12]
 2770 003e 0493     		str	r3, [sp, #16]
 2771 0040 0593     		str	r3, [sp, #20]
 2772 0042 0693     		str	r3, [sp, #24]
 2773              	.LVL559:
1160:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t ctraddr = (uint32_t)ctr;
1161:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t b0addr = (uint32_t)blockb0;
1162:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1163:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /************************ Formatting the header block ***********************/
ARM GAS  /tmp/cc5ofa7g.s 			page 83


1164:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(headersize != 0)
 2774              		.loc 1 1164 0
 2775 0044 54B3     		cbz	r4, .L120
1165:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1166:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Check that the associated data (or header) length is lower than 2^16 - 2^8 = 65536 - 256 = 6
1167:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(headersize < 65280)
 2776              		.loc 1 1167 0
 2777 0046 B4F57F4F 		cmp	r4, #65280
 2778 004a 09D2     		bcs	.L121
 2779              	.LVL560:
1168:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1169:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = (uint8_t) ((headersize >> 8) & 0xFF);
 2780              		.loc 1 1169 0
 2781 004c C4F30723 		ubfx	r3, r4, #8, #8
 2782 0050 8CF80030 		strb	r3, [ip]
 2783              	.LVL561:
1170:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = (uint8_t) ((headersize) & 0xFF);
 2784              		.loc 1 1170 0
 2785 0054 8CF80140 		strb	r4, [ip, #1]
1171:./FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize += 2;
 2786              		.loc 1 1171 0
 2787 0058 0234     		adds	r4, r4, #2
 2788              	.LVL562:
1170:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = (uint8_t) ((headersize) & 0xFF);
 2789              		.loc 1 1170 0
 2790 005a 0220     		movs	r0, #2
 2791              	.LVL563:
 2792              	.L122:
1172:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1173:./FWLIB/src/stm32f4xx_cryp_aes.c ****     else
1174:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1175:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* header is encoded as 0xff || 0xfe || [headersize]32, i.e., six octets */
1176:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = 0xFF;
1177:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = 0xFE;
1178:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0xff000000;
1179:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x00ff0000;
1180:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x0000ff00;
1181:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x000000ff;
1182:./FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize += 6;
1183:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1184:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Copy the header buffer in internal buffer "HBuffer" */
1185:./FWLIB/src/stm32f4xx_cryp_aes.c ****     for(loopcounter = 0; loopcounter < headersize; loopcounter++)
 2793              		.loc 1 1185 0
 2794 005c 0023     		movs	r3, #0
 2795 005e 17E0     		b	.L123
 2796              	.LVL564:
 2797              	.L121:
1176:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = 0xFE;
 2798              		.loc 1 1176 0
 2799 0060 FF23     		movs	r3, #255
 2800 0062 8CF80030 		strb	r3, [ip]
 2801              	.LVL565:
1177:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0xff000000;
 2802              		.loc 1 1177 0
 2803 0066 FE23     		movs	r3, #254
 2804 0068 8CF80130 		strb	r3, [ip, #1]
 2805              	.LVL566:
ARM GAS  /tmp/cc5ofa7g.s 			page 84


1178:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x00ff0000;
 2806              		.loc 1 1178 0
 2807 006c 0023     		movs	r3, #0
 2808 006e 8CF80230 		strb	r3, [ip, #2]
 2809              	.LVL567:
1179:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x0000ff00;
 2810              		.loc 1 1179 0
 2811 0072 8CF80330 		strb	r3, [ip, #3]
 2812              	.LVL568:
1180:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x000000ff;
 2813              		.loc 1 1180 0
 2814 0076 8CF80430 		strb	r3, [ip, #4]
 2815              	.LVL569:
1181:./FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize += 6;
 2816              		.loc 1 1181 0
 2817 007a 8CF80540 		strb	r4, [ip, #5]
1182:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 2818              		.loc 1 1182 0
 2819 007e 0634     		adds	r4, r4, #6
 2820              	.LVL570:
1181:./FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize += 6;
 2821              		.loc 1 1181 0
 2822 0080 0620     		movs	r0, #6
 2823              	.LVL571:
 2824 0082 EBE7     		b	.L122
 2825              	.LVL572:
 2826              	.L124:
1186:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1187:./FWLIB/src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = Header[loopcounter];
 2827              		.loc 1 1187 0 discriminator 3
 2828 0084 1EF80380 		ldrb	r8, [lr, r3]	@ zero_extendqisi2
 2829 0088 0CF80080 		strb	r8, [ip, r0]
1185:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2830              		.loc 1 1185 0 discriminator 3
 2831 008c 0133     		adds	r3, r3, #1
 2832              	.LVL573:
 2833              		.loc 1 1187 0 discriminator 3
 2834 008e 0130     		adds	r0, r0, #1
 2835              	.LVL574:
 2836              	.L123:
1185:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 2837              		.loc 1 1185 0 discriminator 1
 2838 0090 9C42     		cmp	r4, r3
 2839 0092 F7D8     		bhi	.L124
1188:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1189:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Check if the header size is modulo 16 */
1190:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if ((headersize % 16) != 0)
 2840              		.loc 1 1190 0
 2841 0094 14F00F0F 		tst	r4, #15
 2842 0098 24D1     		bne	.L172
 2843              	.LVL575:
 2844              	.L126:
1191:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1192:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Padd the header buffer with 0s till the HBuffer length is modulo 16 */
1193:./FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = headersize; loopcounter <= ((headersize/16) + 1) * 16; loopcounter++)
1194:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1195:./FWLIB/src/stm32f4xx_cryp_aes.c ****         HBuffer[loopcounter] = 0;
ARM GAS  /tmp/cc5ofa7g.s 			page 85


1196:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1197:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Set the header size to modulo 16 */
1198:./FWLIB/src/stm32f4xx_cryp_aes.c ****       headersize = ((headersize/16) + 1) * 16;
1199:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1200:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* set the pointer headeraddr to HBuffer */
1201:./FWLIB/src/stm32f4xx_cryp_aes.c ****     headeraddr = (uint32_t)HBuffer;
 2845              		.loc 1 1201 0
 2846 009a E046     		mov	r8, ip
 2847              	.LVL576:
 2848              	.L120:
1202:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1203:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /************************* Formatting the block B0 **************************/
1204:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(headersize != 0)
 2849              		.loc 1 1204 0
 2850 009c 14B1     		cbz	r4, .L128
1205:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1206:./FWLIB/src/stm32f4xx_cryp_aes.c ****     blockb0[0] = 0x40;
 2851              		.loc 1 1206 0
 2852 009e 4023     		movs	r3, #64
 2853 00a0 8DF82C30 		strb	r3, [sp, #44]
 2854              	.L128:
1207:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1208:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Flags byte */
1209:./FWLIB/src/stm32f4xx_cryp_aes.c ****   blockb0[0] |= 0u | (((( (uint8_t) TAGSize - 2) / 2) & 0x07 ) << 3 ) | ( ( (uint8_t) (15 - NonceSi
 2855              		.loc 1 1209 0
 2856 00a4 329B     		ldr	r3, [sp, #200]
 2857 00a6 DBB2     		uxtb	r3, r3
 2858 00a8 023B     		subs	r3, r3, #2
 2859 00aa 03EBD373 		add	r3, r3, r3, lsr #31
 2860 00ae 5B10     		asrs	r3, r3, #1
 2861 00b0 DB00     		lsls	r3, r3, #3
 2862 00b2 03F03803 		and	r3, r3, #56
 2863 00b6 C2F10E00 		rsb	r0, r2, #14
 2864 00ba 00F00700 		and	r0, r0, #7
 2865 00be 0343     		orrs	r3, r3, r0
 2866 00c0 9DF82C00 		ldrb	r0, [sp, #44]	@ zero_extendqisi2
 2867 00c4 0343     		orrs	r3, r3, r0
 2868 00c6 8DF82C30 		strb	r3, [sp, #44]
 2869              	.LVL577:
1210:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1211:./FWLIB/src/stm32f4xx_cryp_aes.c ****   for (loopcounter = 0; loopcounter < NonceSize; loopcounter++)
 2870              		.loc 1 1211 0
 2871 00ca 0023     		movs	r3, #0
 2872 00cc 14E0     		b	.L129
 2873              	.LVL578:
 2874              	.L127:
1195:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 2875              		.loc 1 1195 0 discriminator 3
 2876 00ce 0023     		movs	r3, #0
 2877 00d0 0CF80030 		strb	r3, [ip, r0]
1193:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2878              		.loc 1 1193 0 discriminator 3
 2879 00d4 0130     		adds	r0, r0, #1
 2880              	.LVL579:
 2881              	.L125:
1193:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2882              		.loc 1 1193 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc5ofa7g.s 			page 86


 2883 00d6 24F00F03 		bic	r3, r4, #15
 2884 00da 1033     		adds	r3, r3, #16
 2885 00dc 8342     		cmp	r3, r0
 2886 00de F6D2     		bcs	.L127
1198:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 2887              		.loc 1 1198 0 is_stmt 1
 2888 00e0 1C46     		mov	r4, r3
 2889              	.LVL580:
 2890 00e2 DAE7     		b	.L126
 2891              	.LVL581:
 2892              	.L172:
1193:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 2893              		.loc 1 1193 0
 2894 00e4 2046     		mov	r0, r4
 2895              	.LVL582:
 2896 00e6 F6E7     		b	.L125
 2897              	.LVL583:
 2898              	.L130:
1212:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1213:./FWLIB/src/stm32f4xx_cryp_aes.c ****     blockb0[loopcounter+1] = Nonce[loopcounter];
 2899              		.loc 1 1213 0 discriminator 3
 2900 00e8 C818     		adds	r0, r1, r3
 2901 00ea 0133     		adds	r3, r3, #1
 2902              	.LVL584:
 2903 00ec 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
 2904 00f0 20A8     		add	r0, sp, #128
 2905 00f2 1844     		add	r0, r0, r3
 2906 00f4 00F854CC 		strb	ip, [r0, #-84]
 2907              	.LVL585:
 2908              	.L129:
1211:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 2909              		.loc 1 1211 0 discriminator 1
 2910 00f8 9342     		cmp	r3, r2
 2911 00fa F5D3     		bcc	.L130
 2912 00fc 05E0     		b	.L131
 2913              	.LVL586:
 2914              	.L132:
1214:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1215:./FWLIB/src/stm32f4xx_cryp_aes.c ****   for ( ; loopcounter < 13; loopcounter++)
1216:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1217:./FWLIB/src/stm32f4xx_cryp_aes.c ****     blockb0[loopcounter+1] = 0;
 2915              		.loc 1 1217 0 discriminator 2
 2916 00fe 0133     		adds	r3, r3, #1
 2917              	.LVL587:
 2918 0100 20A9     		add	r1, sp, #128
 2919 0102 1944     		add	r1, r1, r3
 2920 0104 0020     		movs	r0, #0
 2921 0106 01F8540C 		strb	r0, [r1, #-84]
 2922              	.LVL588:
 2923              	.L131:
1215:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 2924              		.loc 1 1215 0 discriminator 1
 2925 010a 0C2B     		cmp	r3, #12
 2926 010c F7D9     		bls	.L132
1218:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1219:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1220:./FWLIB/src/stm32f4xx_cryp_aes.c ****   blockb0[14] = ((ILength >> 8) & 0xFF);
ARM GAS  /tmp/cc5ofa7g.s 			page 87


 2927              		.loc 1 1220 0
 2928 010e 2C9B     		ldr	r3, [sp, #176]
 2929              	.LVL589:
 2930 0110 1B0A     		lsrs	r3, r3, #8
 2931 0112 8DF83A30 		strb	r3, [sp, #58]
1221:./FWLIB/src/stm32f4xx_cryp_aes.c ****   blockb0[15] = (ILength & 0xFF);
 2932              		.loc 1 1221 0
 2933 0116 2C9B     		ldr	r3, [sp, #176]
 2934 0118 8DF83B30 		strb	r3, [sp, #59]
1222:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1223:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /************************* Formatting the initial counter *******************/
1224:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Byte 0:
1225:./FWLIB/src/stm32f4xx_cryp_aes.c ****      Bits 7 and 6 are reserved and shall be set to 0
1226:./FWLIB/src/stm32f4xx_cryp_aes.c ****      Bits 3, 4, and 5 shall also be set to 0, to ensure that all the counter blocks
1227:./FWLIB/src/stm32f4xx_cryp_aes.c ****      are distinct from B0
1228:./FWLIB/src/stm32f4xx_cryp_aes.c ****      Bits 0, 1, and 2 contain the same encoding of q as in B0
1229:./FWLIB/src/stm32f4xx_cryp_aes.c ****   */
1230:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ctr[0] = blockb0[0] & 0x07;
 2935              		.loc 1 1230 0
 2936 011c 9DF82C30 		ldrb	r3, [sp, #44]	@ zero_extendqisi2
 2937 0120 03F00703 		and	r3, r3, #7
 2938 0124 8DF81C30 		strb	r3, [sp, #28]
 2939              	.LVL590:
1231:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* byte 1 to NonceSize is the IV (Nonce) */
1232:./FWLIB/src/stm32f4xx_cryp_aes.c ****   for(loopcounter = 1; loopcounter < NonceSize + 1; loopcounter++)
 2940              		.loc 1 1232 0
 2941 0128 0123     		movs	r3, #1
 2942 012a 06E0     		b	.L133
 2943              	.LVL591:
 2944              	.L134:
1233:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1234:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctr[loopcounter] = blockb0[loopcounter];
 2945              		.loc 1 1234 0 discriminator 3
 2946 012c 20A9     		add	r1, sp, #128
 2947 012e 1944     		add	r1, r1, r3
 2948 0130 11F8540C 		ldrb	r0, [r1, #-84]	@ zero_extendqisi2
 2949 0134 01F8640C 		strb	r0, [r1, #-100]
1232:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 2950              		.loc 1 1232 0 discriminator 3
 2951 0138 0133     		adds	r3, r3, #1
 2952              	.LVL592:
 2953              	.L133:
1232:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 2954              		.loc 1 1232 0 is_stmt 0 discriminator 1
 2955 013a 511C     		adds	r1, r2, #1
 2956 013c 9942     		cmp	r1, r3
 2957 013e F5D8     		bhi	.L134
1235:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1236:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Set the LSB to 1 */
1237:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ctr[15] |= 0x01;
 2958              		.loc 1 1237 0 is_stmt 1
 2959 0140 9DF82B30 		ldrb	r3, [sp, #43]	@ zero_extendqisi2
 2960              	.LVL593:
 2961 0144 43F00103 		orr	r3, r3, #1
 2962 0148 8DF82B30 		strb	r3, [sp, #43]
1238:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1239:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
ARM GAS  /tmp/cc5ofa7g.s 			page 88


1240:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 2963              		.loc 1 1240 0
 2964 014c 14A8     		add	r0, sp, #80
 2965 014e FFF7FEFF 		bl	CRYP_KeyStructInit
 2966              	.LVL594:
1241:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1242:./FWLIB/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 2967              		.loc 1 1242 0
 2968 0152 BAF1C00F 		cmp	r10, #192
 2969 0156 69D0     		beq	.L136
 2970 0158 BAF5807F 		cmp	r10, #256
 2971 015c 00F08280 		beq	.L137
 2972 0160 BAF1800F 		cmp	r10, #128
 2973 0164 4FD0     		beq	.L188
 2974              	.LVL595:
 2975              	.L135:
1243:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1244:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 128:
1245:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
1246:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1247:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1248:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1249:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1250:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1251:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1252:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1253:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
1254:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
1255:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
1256:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1257:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1258:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1259:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1260:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1261:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1262:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1263:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1264:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1265:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1266:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1267:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
1268:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
1269:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
1270:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
1271:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1272:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
1273:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1274:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1275:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1276:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1277:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1278:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1279:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1280:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1281:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1282:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1283:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc5ofa7g.s 			page 89


1284:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1285:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
1286:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
1287:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
1288:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1289:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1290:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
1291:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = (__REV(*(uint32_t*)(ctraddr)));
 2976              		.loc 1 1291 0
 2977 0166 079B     		ldr	r3, [sp, #28]
 2978              	.LVL596:
 2979              	.LBB398:
 2980              	.LBB399:
 2981              		.loc 2 407 0
 2982 0168 1BBA     		rev	r3, r3
 2983              	.LVL597:
 2984              	.LBE399:
 2985              	.LBE398:
 2986              		.loc 1 1291 0
 2987 016a 1093     		str	r3, [sp, #64]
 2988              	.LVL598:
1292:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ctraddr+=4;
1293:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= (__REV(*(uint32_t*)(ctraddr)));
 2989              		.loc 1 1293 0
 2990 016c 6B68     		ldr	r3, [r5, #4]
 2991              	.LVL599:
 2992              	.LBB400:
 2993              	.LBB401:
 2994              		.loc 2 407 0
 2995 016e 1BBA     		rev	r3, r3
 2996              	.LVL600:
 2997              	.LBE401:
 2998              	.LBE400:
 2999              		.loc 1 1293 0
 3000 0170 1193     		str	r3, [sp, #68]
 3001              	.LVL601:
1294:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ctraddr+=4;
1295:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = (__REV(*(uint32_t*)(ctraddr)));
 3002              		.loc 1 1295 0
 3003 0172 AB68     		ldr	r3, [r5, #8]
 3004              	.LVL602:
 3005              	.LBB402:
 3006              	.LBB403:
 3007              		.loc 2 407 0
 3008 0174 1BBA     		rev	r3, r3
 3009              	.LVL603:
 3010              	.LBE403:
 3011              	.LBE402:
 3012              		.loc 1 1295 0
 3013 0176 1293     		str	r3, [sp, #72]
 3014              	.LVL604:
1296:./FWLIB/src/stm32f4xx_cryp_aes.c ****   ctraddr+=4;
1297:./FWLIB/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= (__REV(*(uint32_t*)(ctraddr)));
 3015              		.loc 1 1297 0
 3016 0178 EB68     		ldr	r3, [r5, #12]
 3017              	.LVL605:
 3018              	.LBB404:
ARM GAS  /tmp/cc5ofa7g.s 			page 90


 3019              	.LBB405:
 3020              		.loc 2 407 0
 3021 017a 1BBA     		rev	r3, r3
 3022              	.LVL606:
 3023              	.LBE405:
 3024              	.LBE404:
 3025              		.loc 1 1297 0
 3026 017c 1393     		str	r3, [sp, #76]
1298:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1299:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
1300:./FWLIB/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_ENCRYPT) /* AES encryption */
 3027              		.loc 1 1300 0
 3028 017e 009B     		ldr	r3, [sp]
 3029 0180 012B     		cmp	r3, #1
 3030 0182 00F09380 		beq	.L189
1301:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1302:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
1303:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
1304:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1305:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
1306:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
1307:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1308:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
1309:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
1310:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1311:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
1312:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
1313:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CCM;
1314:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
1315:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
1316:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1317:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
1318:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
1319:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
1320:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1321:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr = (uint32_t)blockb0;
1322:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the blockb0 block in the IN FIFO */
1323:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
1324:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1325:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
1326:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1327:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
1328:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1329:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
1330:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1331:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1332:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
1333:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1334:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
1335:./FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
1336:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1337:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1338:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
1339:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(headersize != 0)
1340:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1341:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
1342:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
ARM GAS  /tmp/cc5ofa7g.s 			page 91


1343:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1344:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1345:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
1346:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1347:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
1348:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1349:./FWLIB/src/stm32f4xx_cryp_aes.c ****          /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1350:./FWLIB/src/stm32f4xx_cryp_aes.c ****             the CRYP peripheral (please check the device sales type. */
1351:./FWLIB/src/stm32f4xx_cryp_aes.c ****          return(ERROR);
1352:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1353:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1354:./FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < headersize); loopcounter+=16)
1355:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1356:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1357:./FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1358:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1359:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1360:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
1361:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1362:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1363:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1364:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1365:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1366:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1367:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1368:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1369:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1370:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1371:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1372:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
1373:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter = 0;
1374:./FWLIB/src/stm32f4xx_cryp_aes.c ****       do
1375:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1376:./FWLIB/src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1377:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
1378:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1379:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1380:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
1381:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1382:./FWLIB/src/stm32f4xx_cryp_aes.c ****         status = ERROR;
1383:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1384:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1385:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1386:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
1387:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
1388:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1389:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
1390:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
1391:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1392:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1393:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
1394:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1395:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
1396:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1397:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1398:./FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1399:./FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
ARM GAS  /tmp/cc5ofa7g.s 			page 92


1400:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1401:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1402:./FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
1403:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1404:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1405:./FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1406:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1407:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1408:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
1409:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1410:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1411:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1412:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1413:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1414:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1415:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1416:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1417:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1418:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
1419:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
1420:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter = 0;
1421:./FWLIB/src/stm32f4xx_cryp_aes.c ****         do
1422:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1423:./FWLIB/src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1424:./FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
1425:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1426:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1427:./FWLIB/src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
1428:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1429:./FWLIB/src/stm32f4xx_cryp_aes.c ****           status = ERROR;
1430:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1431:./FWLIB/src/stm32f4xx_cryp_aes.c ****         else
1432:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1433:./FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
1434:./FWLIB/src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
1435:./FWLIB/src/stm32f4xx_cryp_aes.c ****           {
1436:./FWLIB/src/stm32f4xx_cryp_aes.c ****           }
1437:./FWLIB/src/stm32f4xx_cryp_aes.c ****           
1438:./FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
1439:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
1440:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1441:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
1442:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1443:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
1444:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1445:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
1446:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1447:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1448:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1449:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1450:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1451:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
1452:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
1453:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
1454:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1455:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1456:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
ARM GAS  /tmp/cc5ofa7g.s 			page 93


1457:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1458:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
1459:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1460:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1461:./FWLIB/src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
1462:./FWLIB/src/stm32f4xx_cryp_aes.c ****       return(ERROR);
1463:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1464:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1465:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr = (uint32_t)ctr;
1466:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the counter block in the IN FIFO */
1467:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1468:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1469:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1470:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1471:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1472:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1473:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Reset bit 0 (after 8-bit swap) is equivalent to reset bit 24 (before 8-bit swap) */
1474:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr) & 0xfeffffff);
1475:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1476:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
1477:./FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
1478:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1479:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1480:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1481:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Read the Auth TAG in the IN FIFO */
1482:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[0] = CRYP_DataOut();
1483:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
1484:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
1485:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
1486:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1487:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
1488:./FWLIB/src/stm32f4xx_cryp_aes.c ****   else /* AES decryption */
1489:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1490:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
1491:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 3031              		.loc 1 1491 0
 3032 0186 FFF7FEFF 		bl	CRYP_FIFOFlush
 3033              	.LVL607:
1492:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1493:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
1494:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 3034              		.loc 1 1494 0
 3035 018a 14A8     		add	r0, sp, #80
 3036 018c FFF7FEFF 		bl	CRYP_KeyInit
 3037              	.LVL608:
1495:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1496:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
1497:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 3038              		.loc 1 1497 0
 3039 0190 10A8     		add	r0, sp, #64
 3040 0192 FFF7FEFF 		bl	CRYP_IVInit
 3041              	.LVL609:
1498:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1499:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
1500:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 3042              		.loc 1 1500 0
 3043 0196 0423     		movs	r3, #4
ARM GAS  /tmp/cc5ofa7g.s 			page 94


 3044 0198 1C93     		str	r3, [sp, #112]
1501:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CCM;
 3045              		.loc 1 1501 0
 3046 019a 4FF00813 		mov	r3, #524296
 3047 019e 1D93     		str	r3, [sp, #116]
1502:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 3048              		.loc 1 1502 0
 3049 01a0 8023     		movs	r3, #128
 3050 01a2 1E93     		str	r3, [sp, #120]
1503:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 3051              		.loc 1 1503 0
 3052 01a4 1CA8     		add	r0, sp, #112
 3053 01a6 FFF7FEFF 		bl	CRYP_Init
 3054              	.LVL610:
1504:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1505:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
1506:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
1507:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 3055              		.loc 1 1507 0
 3056 01aa 0020     		movs	r0, #0
 3057 01ac FFF7FEFF 		bl	CRYP_PhaseConfig
 3058              	.LVL611:
1508:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1509:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr = (uint32_t)blockb0;
1510:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the blockb0 block in the IN FIFO */
1511:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 3059              		.loc 1 1511 0
 3060 01b0 0B98     		ldr	r0, [sp, #44]
 3061 01b2 FFF7FEFF 		bl	CRYP_DataIn
 3062              	.LVL612:
1512:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1513:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 3063              		.loc 1 1513 0
 3064 01b6 7868     		ldr	r0, [r7, #4]
 3065 01b8 FFF7FEFF 		bl	CRYP_DataIn
 3066              	.LVL613:
1514:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1515:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 3067              		.loc 1 1515 0
 3068 01bc B868     		ldr	r0, [r7, #8]
 3069 01be FFF7FEFF 		bl	CRYP_DataIn
 3070              	.LVL614:
1516:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
1517:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 3071              		.loc 1 1517 0
 3072 01c2 F868     		ldr	r0, [r7, #12]
 3073 01c4 FFF7FEFF 		bl	CRYP_DataIn
 3074              	.LVL615:
1518:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1519:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1520:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 3075              		.loc 1 1520 0
 3076 01c8 0120     		movs	r0, #1
 3077 01ca FFF7FEFF 		bl	CRYP_Cmd
 3078              	.LVL616:
 3079              	.L156:
1521:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
ARM GAS  /tmp/cc5ofa7g.s 			page 95


1522:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
1523:./FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 3080              		.loc 1 1523 0 discriminator 1
 3081 01ce FFF7FEFF 		bl	CRYP_GetCmdStatus
 3082              	.LVL617:
 3083 01d2 0128     		cmp	r0, #1
 3084 01d4 FBD0     		beq	.L156
1524:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1525:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1526:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1527:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
1528:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(headersize != 0)
 3085              		.loc 1 1528 0
 3086 01d6 002C     		cmp	r4, #0
 3087 01d8 40F05181 		bne	.L190
1148:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 3088              		.loc 1 1148 0
 3089 01dc 0124     		movs	r4, #1
 3090              	.LVL618:
 3091              	.L157:
1529:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1530:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
1531:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
1532:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1533:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1534:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
1535:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1536:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
1537:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1538:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1539:./FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1540:./FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
1541:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1542:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1543:./FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < headersize); loopcounter+=16)
1544:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1545:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1546:./FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1547:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1548:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1549:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
1550:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1551:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1552:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1553:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1554:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1555:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1556:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1557:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
1558:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
1559:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1560:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1561:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
1562:./FWLIB/src/stm32f4xx_cryp_aes.c ****       counter = 0;
1563:./FWLIB/src/stm32f4xx_cryp_aes.c ****       do
1564:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1565:./FWLIB/src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
ARM GAS  /tmp/cc5ofa7g.s 			page 96


1566:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
1567:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1568:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1569:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
1570:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1571:./FWLIB/src/stm32f4xx_cryp_aes.c ****         status = ERROR;
1572:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1573:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1574:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1575:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
1576:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 3092              		.loc 1 1576 0
 3093 01de 2C9B     		ldr	r3, [sp, #176]
 3094 01e0 002B     		cmp	r3, #0
 3095 01e2 00F0C981 		beq	.L162
1577:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1578:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
1579:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 3096              		.loc 1 1579 0
 3097 01e6 4FF40030 		mov	r0, #131072
 3098 01ea FFF7FEFF 		bl	CRYP_PhaseConfig
 3099              	.LVL619:
1580:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1581:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1582:./FWLIB/src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 3100              		.loc 1 1582 0
 3101 01ee 0120     		movs	r0, #1
 3102 01f0 FFF7FEFF 		bl	CRYP_Cmd
 3103              	.LVL620:
1583:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1584:./FWLIB/src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 3104              		.loc 1 1584 0
 3105 01f4 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3106              	.LVL621:
 3107 01f8 0028     		cmp	r0, #0
 3108 01fa 00F0FF81 		beq	.L182
1585:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1586:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1587:./FWLIB/src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1588:./FWLIB/src/stm32f4xx_cryp_aes.c ****         return(ERROR);
1589:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1590:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
1591:./FWLIB/src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
 3109              		.loc 1 1591 0
 3110 01fe 0027     		movs	r7, #0
 3111 0200 DDF8B080 		ldr	r8, [sp, #176]
 3112              	.LVL622:
 3113 0204 7AE1     		b	.L163
 3114              	.LVL623:
 3115              	.L188:
1245:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 3116              		.loc 1 1245 0
 3117 0206 0023     		movs	r3, #0
 3118 0208 1F93     		str	r3, [sp, #124]
1246:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3119              		.loc 1 1246 0
 3120 020a D9F80030 		ldr	r3, [r9]
ARM GAS  /tmp/cc5ofa7g.s 			page 97


 3121              	.LVL624:
 3122              	.LBB406:
 3123              	.LBB407:
 3124              		.loc 2 407 0
 3125 020e 1BBA     		rev	r3, r3
 3126              	.LVL625:
 3127              	.LBE407:
 3128              	.LBE406:
1246:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3129              		.loc 1 1246 0
 3130 0210 1893     		str	r3, [sp, #96]
 3131              	.LVL626:
1248:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3132              		.loc 1 1248 0
 3133 0212 D9F80430 		ldr	r3, [r9, #4]
 3134              	.LVL627:
 3135              	.LBB408:
 3136              	.LBB409:
 3137              		.loc 2 407 0
 3138 0216 1BBA     		rev	r3, r3
 3139              	.LVL628:
 3140              	.LBE409:
 3141              	.LBE408:
1248:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3142              		.loc 1 1248 0
 3143 0218 1993     		str	r3, [sp, #100]
 3144              	.LVL629:
1250:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3145              		.loc 1 1250 0
 3146 021a D9F80830 		ldr	r3, [r9, #8]
 3147              	.LVL630:
 3148              	.LBB410:
 3149              	.LBB411:
 3150              		.loc 2 407 0
 3151 021e 1BBA     		rev	r3, r3
 3152              	.LVL631:
 3153              	.LBE411:
 3154              	.LBE410:
1250:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3155              		.loc 1 1250 0
 3156 0220 1A93     		str	r3, [sp, #104]
 3157              	.LVL632:
1252:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3158              		.loc 1 1252 0
 3159 0222 D9F80C30 		ldr	r3, [r9, #12]
 3160              	.LVL633:
 3161              	.LBB412:
 3162              	.LBB413:
 3163              		.loc 2 407 0
 3164 0226 1BBA     		rev	r3, r3
 3165              	.LVL634:
 3166              	.LBE413:
 3167              	.LBE412:
1252:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3168              		.loc 1 1252 0
 3169 0228 1B93     		str	r3, [sp, #108]
1253:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 192:
ARM GAS  /tmp/cc5ofa7g.s 			page 98


 3170              		.loc 1 1253 0
 3171 022a 9CE7     		b	.L135
 3172              	.LVL635:
 3173              	.L136:
1255:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 3174              		.loc 1 1255 0
 3175 022c 4FF48073 		mov	r3, #256
 3176 0230 1F93     		str	r3, [sp, #124]
1256:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3177              		.loc 1 1256 0
 3178 0232 D9F80030 		ldr	r3, [r9]
 3179              	.LVL636:
 3180              	.LBB414:
 3181              	.LBB415:
 3182              		.loc 2 407 0
 3183 0236 1BBA     		rev	r3, r3
 3184              	.LVL637:
 3185              	.LBE415:
 3186              	.LBE414:
1256:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3187              		.loc 1 1256 0
 3188 0238 1693     		str	r3, [sp, #88]
 3189              	.LVL638:
1258:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3190              		.loc 1 1258 0
 3191 023a D9F80430 		ldr	r3, [r9, #4]
 3192              	.LVL639:
 3193              	.LBB416:
 3194              	.LBB417:
 3195              		.loc 2 407 0
 3196 023e 1BBA     		rev	r3, r3
 3197              	.LVL640:
 3198              	.LBE417:
 3199              	.LBE416:
1258:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3200              		.loc 1 1258 0
 3201 0240 1793     		str	r3, [sp, #92]
 3202              	.LVL641:
1260:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3203              		.loc 1 1260 0
 3204 0242 D9F80830 		ldr	r3, [r9, #8]
 3205              	.LVL642:
 3206              	.LBB418:
 3207              	.LBB419:
 3208              		.loc 2 407 0
 3209 0246 1BBA     		rev	r3, r3
 3210              	.LVL643:
 3211              	.LBE419:
 3212              	.LBE418:
1260:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3213              		.loc 1 1260 0
 3214 0248 1893     		str	r3, [sp, #96]
 3215              	.LVL644:
1262:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3216              		.loc 1 1262 0
 3217 024a D9F80C30 		ldr	r3, [r9, #12]
 3218              	.LVL645:
ARM GAS  /tmp/cc5ofa7g.s 			page 99


 3219              	.LBB420:
 3220              	.LBB421:
 3221              		.loc 2 407 0
 3222 024e 1BBA     		rev	r3, r3
 3223              	.LVL646:
 3224              	.LBE421:
 3225              	.LBE420:
1262:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3226              		.loc 1 1262 0
 3227 0250 1993     		str	r3, [sp, #100]
 3228              	.LVL647:
1264:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3229              		.loc 1 1264 0
 3230 0252 D9F81030 		ldr	r3, [r9, #16]
 3231              	.LVL648:
 3232              	.LBB422:
 3233              	.LBB423:
 3234              		.loc 2 407 0
 3235 0256 1BBA     		rev	r3, r3
 3236              	.LVL649:
 3237              	.LBE423:
 3238              	.LBE422:
1264:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3239              		.loc 1 1264 0
 3240 0258 1A93     		str	r3, [sp, #104]
 3241              	.LVL650:
1266:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3242              		.loc 1 1266 0
 3243 025a D9F81430 		ldr	r3, [r9, #20]
 3244              	.LVL651:
 3245              	.LBB424:
 3246              	.LBB425:
 3247              		.loc 2 407 0
 3248 025e 1BBA     		rev	r3, r3
 3249              	.LVL652:
 3250              	.LBE425:
 3251              	.LBE424:
1266:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3252              		.loc 1 1266 0
 3253 0260 1B93     		str	r3, [sp, #108]
1267:./FWLIB/src/stm32f4xx_cryp_aes.c ****     case 256:
 3254              		.loc 1 1267 0
 3255 0262 80E7     		b	.L135
 3256              	.LVL653:
 3257              	.L137:
1269:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 3258              		.loc 1 1269 0
 3259 0264 4FF40073 		mov	r3, #512
 3260 0268 1F93     		str	r3, [sp, #124]
1270:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3261              		.loc 1 1270 0
 3262 026a D9F80030 		ldr	r3, [r9]
 3263              	.LVL654:
 3264              	.LBB426:
 3265              	.LBB427:
 3266              		.loc 2 407 0
 3267 026e 1BBA     		rev	r3, r3
ARM GAS  /tmp/cc5ofa7g.s 			page 100


 3268              	.LVL655:
 3269              	.LBE427:
 3270              	.LBE426:
1270:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3271              		.loc 1 1270 0
 3272 0270 1493     		str	r3, [sp, #80]
 3273              	.LVL656:
1272:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3274              		.loc 1 1272 0
 3275 0272 D9F80430 		ldr	r3, [r9, #4]
 3276              	.LVL657:
 3277              	.LBB428:
 3278              	.LBB429:
 3279              		.loc 2 407 0
 3280 0276 1BBA     		rev	r3, r3
 3281              	.LVL658:
 3282              	.LBE429:
 3283              	.LBE428:
1272:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3284              		.loc 1 1272 0
 3285 0278 1593     		str	r3, [sp, #84]
 3286              	.LVL659:
1274:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3287              		.loc 1 1274 0
 3288 027a D9F80830 		ldr	r3, [r9, #8]
 3289              	.LVL660:
 3290              	.LBB430:
 3291              	.LBB431:
 3292              		.loc 2 407 0
 3293 027e 1BBA     		rev	r3, r3
 3294              	.LVL661:
 3295              	.LBE431:
 3296              	.LBE430:
1274:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3297              		.loc 1 1274 0
 3298 0280 1693     		str	r3, [sp, #88]
 3299              	.LVL662:
1276:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3300              		.loc 1 1276 0
 3301 0282 D9F80C30 		ldr	r3, [r9, #12]
 3302              	.LVL663:
 3303              	.LBB432:
 3304              	.LBB433:
 3305              		.loc 2 407 0
 3306 0286 1BBA     		rev	r3, r3
 3307              	.LVL664:
 3308              	.LBE433:
 3309              	.LBE432:
1276:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3310              		.loc 1 1276 0
 3311 0288 1793     		str	r3, [sp, #92]
 3312              	.LVL665:
1278:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3313              		.loc 1 1278 0
 3314 028a D9F81030 		ldr	r3, [r9, #16]
 3315              	.LVL666:
 3316              	.LBB434:
ARM GAS  /tmp/cc5ofa7g.s 			page 101


 3317              	.LBB435:
 3318              		.loc 2 407 0
 3319 028e 1BBA     		rev	r3, r3
 3320              	.LVL667:
 3321              	.LBE435:
 3322              	.LBE434:
1278:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3323              		.loc 1 1278 0
 3324 0290 1893     		str	r3, [sp, #96]
 3325              	.LVL668:
1280:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3326              		.loc 1 1280 0
 3327 0292 D9F81430 		ldr	r3, [r9, #20]
 3328              	.LVL669:
 3329              	.LBB436:
 3330              	.LBB437:
 3331              		.loc 2 407 0
 3332 0296 1BBA     		rev	r3, r3
 3333              	.LVL670:
 3334              	.LBE437:
 3335              	.LBE436:
1280:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3336              		.loc 1 1280 0
 3337 0298 1993     		str	r3, [sp, #100]
 3338              	.LVL671:
1282:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3339              		.loc 1 1282 0
 3340 029a D9F81830 		ldr	r3, [r9, #24]
 3341              	.LVL672:
 3342              	.LBB438:
 3343              	.LBB439:
 3344              		.loc 2 407 0
 3345 029e 1BBA     		rev	r3, r3
 3346              	.LVL673:
 3347              	.LBE439:
 3348              	.LBE438:
1282:./FWLIB/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3349              		.loc 1 1282 0
 3350 02a0 1A93     		str	r3, [sp, #104]
 3351              	.LVL674:
1284:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3352              		.loc 1 1284 0
 3353 02a2 D9F81C30 		ldr	r3, [r9, #28]
 3354              	.LVL675:
 3355              	.LBB440:
 3356              	.LBB441:
 3357              		.loc 2 407 0
 3358 02a6 1BBA     		rev	r3, r3
 3359              	.LVL676:
 3360              	.LBE441:
 3361              	.LBE440:
1284:./FWLIB/src/stm32f4xx_cryp_aes.c ****     break;
 3362              		.loc 1 1284 0
 3363 02a8 1B93     		str	r3, [sp, #108]
1285:./FWLIB/src/stm32f4xx_cryp_aes.c ****     default:
 3364              		.loc 1 1285 0
 3365 02aa 5CE7     		b	.L135
ARM GAS  /tmp/cc5ofa7g.s 			page 102


 3366              	.LVL677:
 3367              	.L189:
1303:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3368              		.loc 1 1303 0
 3369 02ac FFF7FEFF 		bl	CRYP_FIFOFlush
 3370              	.LVL678:
1306:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3371              		.loc 1 1306 0
 3372 02b0 14A8     		add	r0, sp, #80
 3373 02b2 FFF7FEFF 		bl	CRYP_KeyInit
 3374              	.LVL679:
1309:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3375              		.loc 1 1309 0
 3376 02b6 10A8     		add	r0, sp, #64
 3377 02b8 FFF7FEFF 		bl	CRYP_IVInit
 3378              	.LVL680:
1312:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CCM;
 3379              		.loc 1 1312 0
 3380 02bc 4FF00009 		mov	r9, #0
 3381              	.LVL681:
 3382 02c0 CDF87090 		str	r9, [sp, #112]
1313:./FWLIB/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 3383              		.loc 1 1313 0
 3384 02c4 4FF00813 		mov	r3, #524296
 3385 02c8 1D93     		str	r3, [sp, #116]
1314:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 3386              		.loc 1 1314 0
 3387 02ca 8023     		movs	r3, #128
 3388 02cc 1E93     		str	r3, [sp, #120]
1315:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3389              		.loc 1 1315 0
 3390 02ce 1CA8     		add	r0, sp, #112
 3391 02d0 FFF7FEFF 		bl	CRYP_Init
 3392              	.LVL682:
1319:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3393              		.loc 1 1319 0
 3394 02d4 4846     		mov	r0, r9
 3395 02d6 FFF7FEFF 		bl	CRYP_PhaseConfig
 3396              	.LVL683:
1323:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 3397              		.loc 1 1323 0
 3398 02da 0B98     		ldr	r0, [sp, #44]
 3399 02dc FFF7FEFF 		bl	CRYP_DataIn
 3400              	.LVL684:
1325:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 3401              		.loc 1 1325 0
 3402 02e0 7868     		ldr	r0, [r7, #4]
 3403 02e2 FFF7FEFF 		bl	CRYP_DataIn
 3404              	.LVL685:
1327:./FWLIB/src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 3405              		.loc 1 1327 0
 3406 02e6 B868     		ldr	r0, [r7, #8]
 3407 02e8 FFF7FEFF 		bl	CRYP_DataIn
 3408              	.LVL686:
1329:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3409              		.loc 1 1329 0
 3410 02ec F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/cc5ofa7g.s 			page 103


 3411 02ee FFF7FEFF 		bl	CRYP_DataIn
 3412              	.LVL687:
1332:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3413              		.loc 1 1332 0
 3414 02f2 0120     		movs	r0, #1
 3415 02f4 FFF7FEFF 		bl	CRYP_Cmd
 3416              	.LVL688:
 3417              	.L140:
1335:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3418              		.loc 1 1335 0 discriminator 1
 3419 02f8 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3420              	.LVL689:
 3421 02fc 0128     		cmp	r0, #1
 3422 02fe FBD0     		beq	.L140
1339:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3423              		.loc 1 1339 0
 3424 0300 A4B9     		cbnz	r4, .L191
1148:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 3425              		.loc 1 1148 0
 3426 0302 0124     		movs	r4, #1
 3427              	.LVL690:
 3428              	.L141:
1387:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3429              		.loc 1 1387 0
 3430 0304 2C9B     		ldr	r3, [sp, #176]
 3431 0306 002B     		cmp	r3, #0
 3432 0308 00F08D80 		beq	.L147
1390:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3433              		.loc 1 1390 0
 3434 030c 4FF40030 		mov	r0, #131072
 3435 0310 FFF7FEFF 		bl	CRYP_PhaseConfig
 3436              	.LVL691:
1393:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3437              		.loc 1 1393 0
 3438 0314 0120     		movs	r0, #1
 3439 0316 FFF7FEFF 		bl	CRYP_Cmd
 3440              	.LVL692:
1395:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3441              		.loc 1 1395 0
 3442 031a FFF7FEFF 		bl	CRYP_GetCmdStatus
 3443              	.LVL693:
 3444 031e 0028     		cmp	r0, #0
 3445 0320 00F06881 		beq	.L176
1402:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3446              		.loc 1 1402 0
 3447 0324 0027     		movs	r7, #0
 3448 0326 DDF8B080 		ldr	r8, [sp, #176]
 3449              	.LVL694:
 3450 032a 3EE0     		b	.L148
 3451              	.LVL695:
 3452              	.L191:
1342:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3453              		.loc 1 1342 0
 3454 032c 4FF48030 		mov	r0, #65536
 3455 0330 FFF7FEFF 		bl	CRYP_PhaseConfig
 3456              	.LVL696:
1345:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
ARM GAS  /tmp/cc5ofa7g.s 			page 104


 3457              		.loc 1 1345 0
 3458 0334 0120     		movs	r0, #1
 3459 0336 FFF7FEFF 		bl	CRYP_Cmd
 3460              	.LVL697:
1347:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3461              		.loc 1 1347 0
 3462 033a FFF7FEFF 		bl	CRYP_GetCmdStatus
 3463              	.LVL698:
 3464 033e 0028     		cmp	r0, #0
 3465 0340 00F05681 		beq	.L174
1354:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3466              		.loc 1 1354 0
 3467 0344 0027     		movs	r7, #0
 3468              	.LVL699:
 3469 0346 17E0     		b	.L143
 3470              	.LVL700:
 3471              	.L144:
1357:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3472              		.loc 1 1357 0 discriminator 1
 3473 0348 0120     		movs	r0, #1
 3474 034a FFF7FEFF 		bl	CRYP_GetFlagStatus
 3475              	.LVL701:
 3476 034e 0028     		cmp	r0, #0
 3477 0350 FAD0     		beq	.L144
1362:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3478              		.loc 1 1362 0 discriminator 2
 3479 0352 D8F80000 		ldr	r0, [r8]
 3480 0356 FFF7FEFF 		bl	CRYP_DataIn
 3481              	.LVL702:
1364:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3482              		.loc 1 1364 0 discriminator 2
 3483 035a D8F80400 		ldr	r0, [r8, #4]
 3484 035e FFF7FEFF 		bl	CRYP_DataIn
 3485              	.LVL703:
1366:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3486              		.loc 1 1366 0 discriminator 2
 3487 0362 D8F80800 		ldr	r0, [r8, #8]
 3488 0366 FFF7FEFF 		bl	CRYP_DataIn
 3489              	.LVL704:
1368:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3490              		.loc 1 1368 0 discriminator 2
 3491 036a D8F80C00 		ldr	r0, [r8, #12]
 3492 036e FFF7FEFF 		bl	CRYP_DataIn
 3493              	.LVL705:
1369:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3494              		.loc 1 1369 0 discriminator 2
 3495 0372 08F11008 		add	r8, r8, #16
 3496              	.LVL706:
1354:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3497              		.loc 1 1354 0 discriminator 2
 3498 0376 1037     		adds	r7, r7, #16
 3499              	.LVL707:
 3500              	.L143:
1354:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3501              		.loc 1 1354 0 is_stmt 0 discriminator 1
 3502 0378 BC42     		cmp	r4, r7
 3503 037a E5D8     		bhi	.L144
ARM GAS  /tmp/cc5ofa7g.s 			page 105


1373:./FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 3504              		.loc 1 1373 0 is_stmt 1
 3505 037c 0023     		movs	r3, #0
 3506 037e 0F93     		str	r3, [sp, #60]
 3507              	.LVL708:
 3508              	.L146:
1376:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 3509              		.loc 1 1376 0 discriminator 2
 3510 0380 1020     		movs	r0, #16
 3511 0382 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3512              	.LVL709:
 3513 0386 0246     		mov	r2, r0
 3514              	.LVL710:
1377:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3515              		.loc 1 1377 0 discriminator 2
 3516 0388 0F9B     		ldr	r3, [sp, #60]
 3517 038a 0133     		adds	r3, r3, #1
 3518 038c 0F93     		str	r3, [sp, #60]
1378:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3519              		.loc 1 1378 0 discriminator 2
 3520 038e 0F9B     		ldr	r3, [sp, #60]
 3521 0390 B3F5803F 		cmp	r3, #65536
 3522 0394 01D0     		beq	.L145
1378:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3523              		.loc 1 1378 0 is_stmt 0 discriminator 1
 3524 0396 0028     		cmp	r0, #0
 3525 0398 F2D1     		bne	.L146
 3526              	.L145:
1380:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3527              		.loc 1 1380 0 is_stmt 1
 3528 039a 0AB9     		cbnz	r2, .L175
1148:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 3529              		.loc 1 1148 0
 3530 039c 0124     		movs	r4, #1
 3531              	.LVL711:
 3532 039e B1E7     		b	.L141
 3533              	.LVL712:
 3534              	.L175:
1382:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3535              		.loc 1 1382 0
 3536 03a0 0024     		movs	r4, #0
 3537              	.LVL713:
 3538 03a2 AFE7     		b	.L141
 3539              	.LVL714:
 3540              	.L150:
1427:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3541              		.loc 1 1427 0
 3542 03a4 3AB3     		cbz	r2, .L153
1429:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 3543              		.loc 1 1429 0
 3544 03a6 0024     		movs	r4, #0
 3545              	.LVL715:
 3546              	.L152:
1402:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3547              		.loc 1 1402 0 discriminator 2
 3548 03a8 1037     		adds	r7, r7, #16
 3549              	.LVL716:
ARM GAS  /tmp/cc5ofa7g.s 			page 106


 3550              	.L148:
1402:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3551              		.loc 1 1402 0 is_stmt 0 discriminator 1
 3552 03aa 4745     		cmp	r7, r8
 3553 03ac 3BD2     		bcs	.L147
1402:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3554              		.loc 1 1402 0 discriminator 3
 3555 03ae 002C     		cmp	r4, #0
 3556 03b0 39D0     		beq	.L147
 3557              	.L149:
1405:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3558              		.loc 1 1405 0 is_stmt 1 discriminator 1
 3559 03b2 0120     		movs	r0, #1
 3560 03b4 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3561              	.LVL717:
 3562 03b8 0028     		cmp	r0, #0
 3563 03ba FAD0     		beq	.L149
1410:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3564              		.loc 1 1410 0
 3565 03bc 3068     		ldr	r0, [r6]
 3566 03be FFF7FEFF 		bl	CRYP_DataIn
 3567              	.LVL718:
1412:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3568              		.loc 1 1412 0
 3569 03c2 7068     		ldr	r0, [r6, #4]
 3570 03c4 FFF7FEFF 		bl	CRYP_DataIn
 3571              	.LVL719:
1414:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3572              		.loc 1 1414 0
 3573 03c8 B068     		ldr	r0, [r6, #8]
 3574 03ca FFF7FEFF 		bl	CRYP_DataIn
 3575              	.LVL720:
1416:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3576              		.loc 1 1416 0
 3577 03ce F068     		ldr	r0, [r6, #12]
 3578 03d0 FFF7FEFF 		bl	CRYP_DataIn
 3579              	.LVL721:
1417:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
 3580              		.loc 1 1417 0
 3581 03d4 1036     		adds	r6, r6, #16
 3582              	.LVL722:
1420:./FWLIB/src/stm32f4xx_cryp_aes.c ****         do
 3583              		.loc 1 1420 0
 3584 03d6 0023     		movs	r3, #0
 3585 03d8 0F93     		str	r3, [sp, #60]
 3586              	.L151:
1423:./FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 3587              		.loc 1 1423 0 discriminator 2
 3588 03da 1020     		movs	r0, #16
 3589 03dc FFF7FEFF 		bl	CRYP_GetFlagStatus
 3590              	.LVL723:
 3591 03e0 0246     		mov	r2, r0
 3592              	.LVL724:
1424:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3593              		.loc 1 1424 0 discriminator 2
 3594 03e2 0F9B     		ldr	r3, [sp, #60]
 3595 03e4 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc5ofa7g.s 			page 107


 3596 03e6 0F93     		str	r3, [sp, #60]
1425:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3597              		.loc 1 1425 0 discriminator 2
 3598 03e8 0F9B     		ldr	r3, [sp, #60]
 3599 03ea B3F5803F 		cmp	r3, #65536
 3600 03ee D9D0     		beq	.L150
1425:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3601              		.loc 1 1425 0 is_stmt 0 discriminator 1
 3602 03f0 0028     		cmp	r0, #0
 3603 03f2 F2D1     		bne	.L151
 3604 03f4 D6E7     		b	.L150
 3605              	.LVL725:
 3606              	.L153:
1434:./FWLIB/src/stm32f4xx_cryp_aes.c ****           {
 3607              		.loc 1 1434 0 is_stmt 1 discriminator 1
 3608 03f6 0420     		movs	r0, #4
 3609 03f8 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3610              	.LVL726:
 3611 03fc 0028     		cmp	r0, #0
 3612 03fe FAD0     		beq	.L153
1439:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3613              		.loc 1 1439 0
 3614 0400 FFF7FEFF 		bl	CRYP_DataOut
 3615              	.LVL727:
 3616 0404 CBF80000 		str	r0, [fp]
 3617              	.LVL728:
1441:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3618              		.loc 1 1441 0
 3619 0408 FFF7FEFF 		bl	CRYP_DataOut
 3620              	.LVL729:
 3621 040c CBF80400 		str	r0, [fp, #4]
 3622              	.LVL730:
1443:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3623              		.loc 1 1443 0
 3624 0410 FFF7FEFF 		bl	CRYP_DataOut
 3625              	.LVL731:
 3626 0414 CBF80800 		str	r0, [fp, #8]
 3627              	.LVL732:
1445:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3628              		.loc 1 1445 0
 3629 0418 FFF7FEFF 		bl	CRYP_DataOut
 3630              	.LVL733:
 3631 041c CBF80C00 		str	r0, [fp, #12]
1446:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
 3632              		.loc 1 1446 0
 3633 0420 0BF1100B 		add	fp, fp, #16
 3634              	.LVL734:
 3635 0424 C0E7     		b	.L152
 3636              	.LVL735:
 3637              	.L147:
1453:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3638              		.loc 1 1453 0
 3639 0426 4FF44030 		mov	r0, #196608
 3640 042a FFF7FEFF 		bl	CRYP_PhaseConfig
 3641              	.LVL736:
1456:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3642              		.loc 1 1456 0
ARM GAS  /tmp/cc5ofa7g.s 			page 108


 3643 042e 0120     		movs	r0, #1
 3644 0430 FFF7FEFF 		bl	CRYP_Cmd
 3645              	.LVL737:
1458:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3646              		.loc 1 1458 0
 3647 0434 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3648              	.LVL738:
 3649 0438 08B9     		cbnz	r0, .L192
1462:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
 3650              		.loc 1 1462 0
 3651 043a 0024     		movs	r4, #0
 3652              	.LVL739:
 3653 043c A7E0     		b	.L142
 3654              	.LVL740:
 3655              	.L192:
1467:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3656              		.loc 1 1467 0
 3657 043e 0798     		ldr	r0, [sp, #28]
 3658 0440 FFF7FEFF 		bl	CRYP_DataIn
 3659              	.LVL741:
1469:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3660              		.loc 1 1469 0
 3661 0444 6868     		ldr	r0, [r5, #4]
 3662 0446 FFF7FEFF 		bl	CRYP_DataIn
 3663              	.LVL742:
1471:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3664              		.loc 1 1471 0
 3665 044a A868     		ldr	r0, [r5, #8]
 3666 044c FFF7FEFF 		bl	CRYP_DataIn
 3667              	.LVL743:
1474:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3668              		.loc 1 1474 0
 3669 0450 E868     		ldr	r0, [r5, #12]
 3670 0452 20F08070 		bic	r0, r0, #16777216
 3671 0456 FFF7FEFF 		bl	CRYP_DataIn
 3672              	.LVL744:
 3673              	.L154:
1477:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3674              		.loc 1 1477 0 discriminator 1
 3675 045a 0420     		movs	r0, #4
 3676 045c FFF7FEFF 		bl	CRYP_GetFlagStatus
 3677              	.LVL745:
 3678 0460 0028     		cmp	r0, #0
 3679 0462 FAD0     		beq	.L154
1482:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
 3680              		.loc 1 1482 0
 3681 0464 FFF7FEFF 		bl	CRYP_DataOut
 3682              	.LVL746:
 3683 0468 0390     		str	r0, [sp, #12]
1483:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
 3684              		.loc 1 1483 0
 3685 046a FFF7FEFF 		bl	CRYP_DataOut
 3686              	.LVL747:
 3687 046e 0490     		str	r0, [sp, #16]
1484:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
 3688              		.loc 1 1484 0
 3689 0470 FFF7FEFF 		bl	CRYP_DataOut
ARM GAS  /tmp/cc5ofa7g.s 			page 109


 3690              	.LVL748:
 3691 0474 0590     		str	r0, [sp, #20]
1485:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 3692              		.loc 1 1485 0
 3693 0476 FFF7FEFF 		bl	CRYP_DataOut
 3694              	.LVL749:
 3695 047a 0690     		str	r0, [sp, #24]
 3696 047c AAE0     		b	.L155
 3697              	.LVL750:
 3698              	.L190:
1531:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3699              		.loc 1 1531 0
 3700 047e 4FF48030 		mov	r0, #65536
 3701 0482 FFF7FEFF 		bl	CRYP_PhaseConfig
 3702              	.LVL751:
1534:./FWLIB/src/stm32f4xx_cryp_aes.c ****       
 3703              		.loc 1 1534 0
 3704 0486 0120     		movs	r0, #1
 3705 0488 FFF7FEFF 		bl	CRYP_Cmd
 3706              	.LVL752:
1536:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3707              		.loc 1 1536 0
 3708 048c FFF7FEFF 		bl	CRYP_GetCmdStatus
 3709              	.LVL753:
 3710 0490 0028     		cmp	r0, #0
 3711 0492 00F0B180 		beq	.L180
1543:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3712              		.loc 1 1543 0
 3713 0496 0027     		movs	r7, #0
 3714              	.LVL754:
 3715 0498 17E0     		b	.L158
 3716              	.LVL755:
 3717              	.L159:
1546:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3718              		.loc 1 1546 0 discriminator 1
 3719 049a 0120     		movs	r0, #1
 3720 049c FFF7FEFF 		bl	CRYP_GetFlagStatus
 3721              	.LVL756:
 3722 04a0 0028     		cmp	r0, #0
 3723 04a2 FAD0     		beq	.L159
1551:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3724              		.loc 1 1551 0 discriminator 2
 3725 04a4 D8F80000 		ldr	r0, [r8]
 3726 04a8 FFF7FEFF 		bl	CRYP_DataIn
 3727              	.LVL757:
1553:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3728              		.loc 1 1553 0 discriminator 2
 3729 04ac D8F80400 		ldr	r0, [r8, #4]
 3730 04b0 FFF7FEFF 		bl	CRYP_DataIn
 3731              	.LVL758:
1555:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3732              		.loc 1 1555 0 discriminator 2
 3733 04b4 D8F80800 		ldr	r0, [r8, #8]
 3734 04b8 FFF7FEFF 		bl	CRYP_DataIn
 3735              	.LVL759:
1557:./FWLIB/src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3736              		.loc 1 1557 0 discriminator 2
ARM GAS  /tmp/cc5ofa7g.s 			page 110


 3737 04bc D8F80C00 		ldr	r0, [r8, #12]
 3738 04c0 FFF7FEFF 		bl	CRYP_DataIn
 3739              	.LVL760:
1558:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3740              		.loc 1 1558 0 discriminator 2
 3741 04c4 08F11008 		add	r8, r8, #16
 3742              	.LVL761:
1543:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3743              		.loc 1 1543 0 discriminator 2
 3744 04c8 1037     		adds	r7, r7, #16
 3745              	.LVL762:
 3746              	.L158:
1543:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3747              		.loc 1 1543 0 is_stmt 0 discriminator 1
 3748 04ca BC42     		cmp	r4, r7
 3749 04cc E5D8     		bhi	.L159
1562:./FWLIB/src/stm32f4xx_cryp_aes.c ****       do
 3750              		.loc 1 1562 0 is_stmt 1
 3751 04ce 0023     		movs	r3, #0
 3752 04d0 0F93     		str	r3, [sp, #60]
 3753              	.LVL763:
 3754              	.L161:
1565:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter++;
 3755              		.loc 1 1565 0 discriminator 2
 3756 04d2 1020     		movs	r0, #16
 3757 04d4 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3758              	.LVL764:
 3759 04d8 0246     		mov	r2, r0
 3760              	.LVL765:
1566:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3761              		.loc 1 1566 0 discriminator 2
 3762 04da 0F9B     		ldr	r3, [sp, #60]
 3763 04dc 0133     		adds	r3, r3, #1
 3764 04de 0F93     		str	r3, [sp, #60]
1567:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3765              		.loc 1 1567 0 discriminator 2
 3766 04e0 0F9B     		ldr	r3, [sp, #60]
 3767 04e2 B3F5803F 		cmp	r3, #65536
 3768 04e6 01D0     		beq	.L160
1567:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3769              		.loc 1 1567 0 is_stmt 0 discriminator 1
 3770 04e8 0028     		cmp	r0, #0
 3771 04ea F2D1     		bne	.L161
 3772              	.L160:
1569:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3773              		.loc 1 1569 0 is_stmt 1
 3774 04ec 0AB9     		cbnz	r2, .L181
1148:./FWLIB/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 3775              		.loc 1 1148 0
 3776 04ee 0124     		movs	r4, #1
 3777              	.LVL766:
 3778 04f0 75E6     		b	.L157
 3779              	.LVL767:
 3780              	.L181:
1571:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3781              		.loc 1 1571 0
 3782 04f2 0024     		movs	r4, #0
ARM GAS  /tmp/cc5ofa7g.s 			page 111


 3783              	.LVL768:
 3784 04f4 73E6     		b	.L157
 3785              	.LVL769:
 3786              	.L165:
1592:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
1593:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1594:./FWLIB/src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
1595:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1596:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1597:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
1598:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1599:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1600:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1601:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1602:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1603:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1604:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1605:./FWLIB/src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
1606:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
1607:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
1608:./FWLIB/src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
1609:./FWLIB/src/stm32f4xx_cryp_aes.c ****         counter = 0;
1610:./FWLIB/src/stm32f4xx_cryp_aes.c ****         do
1611:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1612:./FWLIB/src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
1613:./FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
1614:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
1615:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1616:./FWLIB/src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 3787              		.loc 1 1616 0
 3788 04f6 3AB3     		cbz	r2, .L168
1617:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
1618:./FWLIB/src/stm32f4xx_cryp_aes.c ****           status = ERROR;
 3789              		.loc 1 1618 0
 3790 04f8 0024     		movs	r4, #0
 3791              	.LVL770:
 3792              	.L167:
1591:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3793              		.loc 1 1591 0 discriminator 2
 3794 04fa 1037     		adds	r7, r7, #16
 3795              	.LVL771:
 3796              	.L163:
1591:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3797              		.loc 1 1591 0 is_stmt 0 discriminator 1
 3798 04fc 4745     		cmp	r7, r8
 3799 04fe 3BD2     		bcs	.L162
1591:./FWLIB/src/stm32f4xx_cryp_aes.c ****       {
 3800              		.loc 1 1591 0 discriminator 3
 3801 0500 002C     		cmp	r4, #0
 3802 0502 39D0     		beq	.L162
 3803              	.L164:
1594:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
 3804              		.loc 1 1594 0 is_stmt 1 discriminator 1
 3805 0504 0120     		movs	r0, #1
 3806 0506 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3807              	.LVL772:
 3808 050a 0028     		cmp	r0, #0
ARM GAS  /tmp/cc5ofa7g.s 			page 112


 3809 050c FAD0     		beq	.L164
1599:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3810              		.loc 1 1599 0
 3811 050e 3068     		ldr	r0, [r6]
 3812 0510 FFF7FEFF 		bl	CRYP_DataIn
 3813              	.LVL773:
1601:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3814              		.loc 1 1601 0
 3815 0514 7068     		ldr	r0, [r6, #4]
 3816 0516 FFF7FEFF 		bl	CRYP_DataIn
 3817              	.LVL774:
1603:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3818              		.loc 1 1603 0
 3819 051a B068     		ldr	r0, [r6, #8]
 3820 051c FFF7FEFF 		bl	CRYP_DataIn
 3821              	.LVL775:
1605:./FWLIB/src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3822              		.loc 1 1605 0
 3823 0520 F068     		ldr	r0, [r6, #12]
 3824 0522 FFF7FEFF 		bl	CRYP_DataIn
 3825              	.LVL776:
1606:./FWLIB/src/stm32f4xx_cryp_aes.c ****         
 3826              		.loc 1 1606 0
 3827 0526 1036     		adds	r6, r6, #16
 3828              	.LVL777:
1609:./FWLIB/src/stm32f4xx_cryp_aes.c ****         do
 3829              		.loc 1 1609 0
 3830 0528 0023     		movs	r3, #0
 3831 052a 0F93     		str	r3, [sp, #60]
 3832              	.L166:
1612:./FWLIB/src/stm32f4xx_cryp_aes.c ****           counter++;
 3833              		.loc 1 1612 0 discriminator 2
 3834 052c 1020     		movs	r0, #16
 3835 052e FFF7FEFF 		bl	CRYP_GetFlagStatus
 3836              	.LVL778:
 3837 0532 0246     		mov	r2, r0
 3838              	.LVL779:
1613:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3839              		.loc 1 1613 0 discriminator 2
 3840 0534 0F9B     		ldr	r3, [sp, #60]
 3841 0536 0133     		adds	r3, r3, #1
 3842 0538 0F93     		str	r3, [sp, #60]
1614:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3843              		.loc 1 1614 0 discriminator 2
 3844 053a 0F9B     		ldr	r3, [sp, #60]
 3845 053c B3F5803F 		cmp	r3, #65536
 3846 0540 D9D0     		beq	.L165
1614:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3847              		.loc 1 1614 0 is_stmt 0 discriminator 1
 3848 0542 0028     		cmp	r0, #0
 3849 0544 F2D1     		bne	.L166
 3850 0546 D6E7     		b	.L165
 3851              	.LVL780:
 3852              	.L168:
1619:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1620:./FWLIB/src/stm32f4xx_cryp_aes.c ****         else
1621:./FWLIB/src/stm32f4xx_cryp_aes.c ****         {
ARM GAS  /tmp/cc5ofa7g.s 			page 113


1622:./FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
1623:./FWLIB/src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 3853              		.loc 1 1623 0 is_stmt 1 discriminator 1
 3854 0548 0420     		movs	r0, #4
 3855 054a FFF7FEFF 		bl	CRYP_GetFlagStatus
 3856              	.LVL781:
 3857 054e 0028     		cmp	r0, #0
 3858 0550 FAD0     		beq	.L168
1624:./FWLIB/src/stm32f4xx_cryp_aes.c ****           {
1625:./FWLIB/src/stm32f4xx_cryp_aes.c ****           }
1626:./FWLIB/src/stm32f4xx_cryp_aes.c ****           
1627:./FWLIB/src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
1628:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3859              		.loc 1 1628 0
 3860 0552 FFF7FEFF 		bl	CRYP_DataOut
 3861              	.LVL782:
 3862 0556 CBF80000 		str	r0, [fp]
 3863              	.LVL783:
1629:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1630:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3864              		.loc 1 1630 0
 3865 055a FFF7FEFF 		bl	CRYP_DataOut
 3866              	.LVL784:
 3867 055e CBF80400 		str	r0, [fp, #4]
 3868              	.LVL785:
1631:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1632:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3869              		.loc 1 1632 0
 3870 0562 FFF7FEFF 		bl	CRYP_DataOut
 3871              	.LVL786:
 3872 0566 CBF80800 		str	r0, [fp, #8]
 3873              	.LVL787:
1633:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
1634:./FWLIB/src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3874              		.loc 1 1634 0
 3875 056a FFF7FEFF 		bl	CRYP_DataOut
 3876              	.LVL788:
 3877 056e CBF80C00 		str	r0, [fp, #12]
1635:./FWLIB/src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3878              		.loc 1 1635 0
 3879 0572 0BF1100B 		add	fp, fp, #16
 3880              	.LVL789:
 3881 0576 C0E7     		b	.L167
 3882              	.LVL790:
 3883              	.L162:
1636:./FWLIB/src/stm32f4xx_cryp_aes.c ****         }
1637:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
1638:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1639:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1640:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
1641:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
1642:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 3884              		.loc 1 1642 0
 3885 0578 4FF44030 		mov	r0, #196608
 3886 057c FFF7FEFF 		bl	CRYP_PhaseConfig
 3887              	.LVL791:
1643:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
ARM GAS  /tmp/cc5ofa7g.s 			page 114


1644:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1645:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 3888              		.loc 1 1645 0
 3889 0580 0120     		movs	r0, #1
 3890 0582 FFF7FEFF 		bl	CRYP_Cmd
 3891              	.LVL792:
1646:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1647:./FWLIB/src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
 3892              		.loc 1 1647 0
 3893 0586 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3894              	.LVL793:
 3895 058a 20B9     		cbnz	r0, .L193
1648:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1649:./FWLIB/src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embedd 
1650:./FWLIB/src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
1651:./FWLIB/src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 3896              		.loc 1 1651 0
 3897 058c 0024     		movs	r4, #0
 3898              	.LVL794:
 3899              	.L142:
1652:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1653:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1654:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr = (uint32_t)ctr;
1655:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Write the counter block in the IN FIFO */
1656:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1657:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1658:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1659:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1660:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
1661:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
1662:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Reset bit 0 (after 8-bit swap) is equivalent to reset bit 24 (before 8-bit swap) */
1663:./FWLIB/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr) & 0xfeffffff);
1664:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1665:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
1666:./FWLIB/src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
1667:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
1668:./FWLIB/src/stm32f4xx_cryp_aes.c ****     }
1669:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
1670:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Read the Authentaication TAG (MAC) in the IN FIFO */
1671:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[0] = CRYP_DataOut();
1672:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
1673:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
1674:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
1675:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1676:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1677:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Copy temporary authentication TAG in user TAG buffer */
1678:./FWLIB/src/stm32f4xx_cryp_aes.c ****   for(loopcounter = 0; (loopcounter < TAGSize); loopcounter++)
1679:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
1680:./FWLIB/src/stm32f4xx_cryp_aes.c ****     /* Set the authentication TAG buffer */
1681:./FWLIB/src/stm32f4xx_cryp_aes.c ****     *((uint8_t*)tagaddr+loopcounter) = *((uint8_t*)temptag+loopcounter);
1682:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
1683:./FWLIB/src/stm32f4xx_cryp_aes.c ****   
1684:./FWLIB/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
1685:./FWLIB/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
1686:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
1687:./FWLIB/src/stm32f4xx_cryp_aes.c ****   return status;
1688:./FWLIB/src/stm32f4xx_cryp_aes.c **** }
ARM GAS  /tmp/cc5ofa7g.s 			page 115


 3900              		.loc 1 1688 0
 3901 058e 2046     		mov	r0, r4
 3902 0590 21B0     		add	sp, sp, #132
 3903              	.LCFI18:
 3904              		.cfi_remember_state
 3905              		.cfi_def_cfa_offset 36
 3906              		@ sp needed
 3907 0592 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3908              	.LVL795:
 3909              	.L193:
 3910              	.LCFI19:
 3911              		.cfi_restore_state
1656:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3912              		.loc 1 1656 0
 3913 0596 0798     		ldr	r0, [sp, #28]
 3914 0598 FFF7FEFF 		bl	CRYP_DataIn
 3915              	.LVL796:
1658:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3916              		.loc 1 1658 0
 3917 059c 6868     		ldr	r0, [r5, #4]
 3918 059e FFF7FEFF 		bl	CRYP_DataIn
 3919              	.LVL797:
1660:./FWLIB/src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 3920              		.loc 1 1660 0
 3921 05a2 A868     		ldr	r0, [r5, #8]
 3922 05a4 FFF7FEFF 		bl	CRYP_DataIn
 3923              	.LVL798:
1663:./FWLIB/src/stm32f4xx_cryp_aes.c ****     
 3924              		.loc 1 1663 0
 3925 05a8 E868     		ldr	r0, [r5, #12]
 3926 05aa 20F08070 		bic	r0, r0, #16777216
 3927 05ae FFF7FEFF 		bl	CRYP_DataIn
 3928              	.LVL799:
 3929              	.L169:
1666:./FWLIB/src/stm32f4xx_cryp_aes.c ****     {
 3930              		.loc 1 1666 0 discriminator 1
 3931 05b2 0420     		movs	r0, #4
 3932 05b4 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3933              	.LVL800:
 3934 05b8 0028     		cmp	r0, #0
 3935 05ba FAD0     		beq	.L169
1671:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
 3936              		.loc 1 1671 0
 3937 05bc FFF7FEFF 		bl	CRYP_DataOut
 3938              	.LVL801:
 3939 05c0 0390     		str	r0, [sp, #12]
1672:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
 3940              		.loc 1 1672 0
 3941 05c2 FFF7FEFF 		bl	CRYP_DataOut
 3942              	.LVL802:
 3943 05c6 0490     		str	r0, [sp, #16]
1673:./FWLIB/src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
 3944              		.loc 1 1673 0
 3945 05c8 FFF7FEFF 		bl	CRYP_DataOut
 3946              	.LVL803:
 3947 05cc 0590     		str	r0, [sp, #20]
1674:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
ARM GAS  /tmp/cc5ofa7g.s 			page 116


 3948              		.loc 1 1674 0
 3949 05ce FFF7FEFF 		bl	CRYP_DataOut
 3950              	.LVL804:
 3951 05d2 0690     		str	r0, [sp, #24]
 3952              	.LVL805:
 3953              	.L155:
1678:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 3954              		.loc 1 1678 0
 3955 05d4 0023     		movs	r3, #0
 3956 05d6 0198     		ldr	r0, [sp, #4]
 3957 05d8 3299     		ldr	r1, [sp, #200]
 3958 05da 03E0     		b	.L170
 3959              	.LVL806:
 3960              	.L171:
1681:./FWLIB/src/stm32f4xx_cryp_aes.c ****   }
 3961              		.loc 1 1681 0 discriminator 3
 3962 05dc 03AA     		add	r2, sp, #12
 3963 05de D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3964 05e0 1A54     		strb	r2, [r3, r0]
1678:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 3965              		.loc 1 1678 0 discriminator 3
 3966 05e2 0133     		adds	r3, r3, #1
 3967              	.LVL807:
 3968              	.L170:
1678:./FWLIB/src/stm32f4xx_cryp_aes.c ****   {
 3969              		.loc 1 1678 0 is_stmt 0 discriminator 1
 3970 05e4 8B42     		cmp	r3, r1
 3971 05e6 F9D3     		bcc	.L171
1685:./FWLIB/src/stm32f4xx_cryp_aes.c **** 
 3972              		.loc 1 1685 0 is_stmt 1
 3973 05e8 0020     		movs	r0, #0
 3974 05ea FFF7FEFF 		bl	CRYP_Cmd
 3975              	.LVL808:
1687:./FWLIB/src/stm32f4xx_cryp_aes.c **** }
 3976              		.loc 1 1687 0
 3977 05ee CEE7     		b	.L142
 3978              	.LVL809:
 3979              	.L174:
1351:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3980              		.loc 1 1351 0
 3981 05f0 0024     		movs	r4, #0
 3982              	.LVL810:
 3983 05f2 CCE7     		b	.L142
 3984              	.LVL811:
 3985              	.L176:
1399:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3986              		.loc 1 1399 0
 3987 05f4 0024     		movs	r4, #0
 3988              	.LVL812:
 3989 05f6 CAE7     		b	.L142
 3990              	.LVL813:
 3991              	.L180:
1540:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3992              		.loc 1 1540 0
 3993 05f8 0024     		movs	r4, #0
 3994              	.LVL814:
 3995 05fa C8E7     		b	.L142
ARM GAS  /tmp/cc5ofa7g.s 			page 117


 3996              	.LVL815:
 3997              	.L182:
1588:./FWLIB/src/stm32f4xx_cryp_aes.c ****       }
 3998              		.loc 1 1588 0
 3999 05fc 0024     		movs	r4, #0
 4000              	.LVL816:
 4001 05fe C6E7     		b	.L142
 4002              		.cfi_endproc
 4003              	.LFE116:
 4005              		.text
 4006              	.Letext0:
 4007              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4008              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4009              		.file 5 "build/lnInclude/core_cm4.h"
 4010              		.file 6 "build/lnInclude/system_stm32f4xx.h"
 4011              		.file 7 "build/lnInclude/stm32f4xx.h"
 4012              		.file 8 "build/lnInclude/stm32f4xx_cryp.h"
ARM GAS  /tmp/cc5ofa7g.s 			page 118


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_cryp_aes.c
     /tmp/cc5ofa7g.s:18     .text.CRYP_AES_ECB:0000000000000000 $t
     /tmp/cc5ofa7g.s:25     .text.CRYP_AES_ECB:0000000000000000 CRYP_AES_ECB
     /tmp/cc5ofa7g.s:535    .text.CRYP_AES_CBC:0000000000000000 $t
     /tmp/cc5ofa7g.s:542    .text.CRYP_AES_CBC:0000000000000000 CRYP_AES_CBC
     /tmp/cc5ofa7g.s:1109   .text.CRYP_AES_CTR:0000000000000000 $t
     /tmp/cc5ofa7g.s:1116   .text.CRYP_AES_CTR:0000000000000000 CRYP_AES_CTR
     /tmp/cc5ofa7g.s:1628   .text.CRYP_AES_GCM:0000000000000000 $t
     /tmp/cc5ofa7g.s:1635   .text.CRYP_AES_GCM:0000000000000000 CRYP_AES_GCM
     /tmp/cc5ofa7g.s:2702   .text.CRYP_AES_CCM:0000000000000000 $t
     /tmp/cc5ofa7g.s:2709   .text.CRYP_AES_CCM:0000000000000000 CRYP_AES_CCM

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_FIFOFlush
CRYP_Init
CRYP_KeyInit
CRYP_Cmd
CRYP_GetFlagStatus
CRYP_GetCmdStatus
CRYP_DataIn
CRYP_DataOut
CRYP_IVInit
CRYP_PhaseConfig
