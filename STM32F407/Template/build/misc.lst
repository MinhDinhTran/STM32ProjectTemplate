ARM GAS  /tmp/ccQ8j3Tc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"misc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NVIC_PriorityGroupConfig,"ax",%progbits
  18              		.align	1
  19              		.global	NVIC_PriorityGroupConfig
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NVIC_PriorityGroupConfig:
  26              	.LFB112:
  27              		.file 1 "./FWLIB/src/misc.c"
   1:./FWLIB/src/misc.c **** /**
   2:./FWLIB/src/misc.c ****   ******************************************************************************
   3:./FWLIB/src/misc.c ****   * @file    misc.c
   4:./FWLIB/src/misc.c ****   * @author  MCD Application Team
   5:./FWLIB/src/misc.c ****   * @version V1.4.0
   6:./FWLIB/src/misc.c ****   * @date    04-August-2014
   7:./FWLIB/src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:./FWLIB/src/misc.c ****   *          to CMSIS functions).
   9:./FWLIB/src/misc.c ****   *          
  10:./FWLIB/src/misc.c ****   *  @verbatim   
  11:./FWLIB/src/misc.c ****   *                               
  12:./FWLIB/src/misc.c ****   *          ===================================================================      
  13:./FWLIB/src/misc.c ****   *                        How to configure Interrupts using driver 
  14:./FWLIB/src/misc.c ****   *          ===================================================================      
  15:./FWLIB/src/misc.c ****   * 
  16:./FWLIB/src/misc.c ****   *            This section provide functions allowing to configure the NVIC interrupts (IRQ).
  17:./FWLIB/src/misc.c ****   *            The Cortex-M4 exceptions are managed by CMSIS functions.
  18:./FWLIB/src/misc.c ****   *
  19:./FWLIB/src/misc.c ****   *            1. Configure the NVIC Priority Grouping using NVIC_PriorityGroupConfig()
  20:./FWLIB/src/misc.c ****   *                function according to the following table.
  21:./FWLIB/src/misc.c ****  
  22:./FWLIB/src/misc.c ****   *  The table below gives the allowed values of the pre-emption priority and subpriority according
  23:./FWLIB/src/misc.c ****   *  to the Priority Grouping configuration performed by NVIC_PriorityGroupConfig function
  24:./FWLIB/src/misc.c ****   *    ============================================================================================
  25:./FWLIB/src/misc.c ****   *      NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  26:./FWLIB/src/misc.c ****   *    ============================================================================================
  27:./FWLIB/src/misc.c ****   *     NVIC_PriorityGroup_0  |                0                  |            0-15             | 0
  28:./FWLIB/src/misc.c ****   *                           |                                   |                             | 4
  29:./FWLIB/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  30:./FWLIB/src/misc.c ****   *     NVIC_PriorityGroup_1  |                0-1                |            0-7              | 1
  31:./FWLIB/src/misc.c ****   *                           |                                   |                             | 3
ARM GAS  /tmp/ccQ8j3Tc.s 			page 2


  32:./FWLIB/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  33:./FWLIB/src/misc.c ****   *     NVIC_PriorityGroup_2  |                0-3                |            0-3              | 2
  34:./FWLIB/src/misc.c ****   *                           |                                   |                             | 2
  35:./FWLIB/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  36:./FWLIB/src/misc.c ****   *     NVIC_PriorityGroup_3  |                0-7                |            0-1              | 3
  37:./FWLIB/src/misc.c ****   *                           |                                   |                             | 1
  38:./FWLIB/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  39:./FWLIB/src/misc.c ****   *     NVIC_PriorityGroup_4  |                0-15               |            0                | 4
  40:./FWLIB/src/misc.c ****   *                           |                                   |                             | 0
  41:./FWLIB/src/misc.c ****   *    ============================================================================================
  42:./FWLIB/src/misc.c ****   *
  43:./FWLIB/src/misc.c ****   *            2. Enable and Configure the priority of the selected IRQ Channels using NVIC_Init() 
  44:./FWLIB/src/misc.c ****   *
  45:./FWLIB/src/misc.c ****   * @note  When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
  46:./FWLIB/src/misc.c ****   *        The pending IRQ priority will be managed only by the subpriority.
  47:./FWLIB/src/misc.c ****   *
  48:./FWLIB/src/misc.c ****   * @note  IRQ priority order (sorted by highest to lowest priority):
  49:./FWLIB/src/misc.c ****   *         - Lowest pre-emption priority
  50:./FWLIB/src/misc.c ****   *         - Lowest subpriority
  51:./FWLIB/src/misc.c ****   *         - Lowest hardware priority (IRQ number)
  52:./FWLIB/src/misc.c ****   *
  53:./FWLIB/src/misc.c ****   *  @endverbatim
  54:./FWLIB/src/misc.c ****   *
  55:./FWLIB/src/misc.c ****   ******************************************************************************
  56:./FWLIB/src/misc.c ****   * @attention
  57:./FWLIB/src/misc.c ****   *
  58:./FWLIB/src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  59:./FWLIB/src/misc.c ****   *
  60:./FWLIB/src/misc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  61:./FWLIB/src/misc.c ****   * You may not use this file except in compliance with the License.
  62:./FWLIB/src/misc.c ****   * You may obtain a copy of the License at:
  63:./FWLIB/src/misc.c ****   *
  64:./FWLIB/src/misc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  65:./FWLIB/src/misc.c ****   *
  66:./FWLIB/src/misc.c ****   * Unless required by applicable law or agreed to in writing, software 
  67:./FWLIB/src/misc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  68:./FWLIB/src/misc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  69:./FWLIB/src/misc.c ****   * See the License for the specific language governing permissions and
  70:./FWLIB/src/misc.c ****   * limitations under the License.
  71:./FWLIB/src/misc.c ****   *
  72:./FWLIB/src/misc.c ****   ******************************************************************************
  73:./FWLIB/src/misc.c ****   */
  74:./FWLIB/src/misc.c **** 
  75:./FWLIB/src/misc.c **** /* Includes ------------------------------------------------------------------*/
  76:./FWLIB/src/misc.c **** #include "misc.h"
  77:./FWLIB/src/misc.c **** 
  78:./FWLIB/src/misc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  79:./FWLIB/src/misc.c ****   * @{
  80:./FWLIB/src/misc.c ****   */
  81:./FWLIB/src/misc.c **** 
  82:./FWLIB/src/misc.c **** /** @defgroup MISC 
  83:./FWLIB/src/misc.c ****   * @brief MISC driver modules
  84:./FWLIB/src/misc.c ****   * @{
  85:./FWLIB/src/misc.c ****   */
  86:./FWLIB/src/misc.c **** 
  87:./FWLIB/src/misc.c **** /* Private typedef -----------------------------------------------------------*/
  88:./FWLIB/src/misc.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccQ8j3Tc.s 			page 3


  89:./FWLIB/src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  90:./FWLIB/src/misc.c **** 
  91:./FWLIB/src/misc.c **** /* Private macro -------------------------------------------------------------*/
  92:./FWLIB/src/misc.c **** /* Private variables ---------------------------------------------------------*/
  93:./FWLIB/src/misc.c **** /* Private function prototypes -----------------------------------------------*/
  94:./FWLIB/src/misc.c **** /* Private functions ---------------------------------------------------------*/
  95:./FWLIB/src/misc.c **** 
  96:./FWLIB/src/misc.c **** /** @defgroup MISC_Private_Functions
  97:./FWLIB/src/misc.c ****   * @{
  98:./FWLIB/src/misc.c ****   */
  99:./FWLIB/src/misc.c **** 
 100:./FWLIB/src/misc.c **** /**
 101:./FWLIB/src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
 102:./FWLIB/src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
 103:./FWLIB/src/misc.c ****   *   This parameter can be one of the following values:
 104:./FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
 105:./FWLIB/src/misc.c ****   *                                4 bits for subpriority
 106:./FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
 107:./FWLIB/src/misc.c ****   *                                3 bits for subpriority
 108:./FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
 109:./FWLIB/src/misc.c ****   *                                2 bits for subpriority
 110:./FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
 111:./FWLIB/src/misc.c ****   *                                1 bits for subpriority
 112:./FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
 113:./FWLIB/src/misc.c ****   *                                0 bits for subpriority
 114:./FWLIB/src/misc.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 115:./FWLIB/src/misc.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 116:./FWLIB/src/misc.c ****   * @retval None
 117:./FWLIB/src/misc.c ****   */
 118:./FWLIB/src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
 119:./FWLIB/src/misc.c **** {
  28              		.loc 1 119 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 120:./FWLIB/src/misc.c ****   /* Check the parameters */
 121:./FWLIB/src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 122:./FWLIB/src/misc.c ****   
 123:./FWLIB/src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 124:./FWLIB/src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  34              		.loc 1 124 0
  35 0000 40F0BF60 		orr	r0, r0, #100139008
  36              	.LVL1:
  37 0004 40F40030 		orr	r0, r0, #131072
  38 0008 014B     		ldr	r3, .L2
  39 000a D860     		str	r0, [r3, #12]
 125:./FWLIB/src/misc.c **** }
  40              		.loc 1 125 0
  41 000c 7047     		bx	lr
  42              	.L3:
  43 000e 00BF     		.align	2
  44              	.L2:
  45 0010 00ED00E0 		.word	-536810240
  46              		.cfi_endproc
  47              	.LFE112:
ARM GAS  /tmp/ccQ8j3Tc.s 			page 4


  49              		.section	.text.NVIC_Init,"ax",%progbits
  50              		.align	1
  51              		.global	NVIC_Init
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	NVIC_Init:
  58              	.LFB113:
 126:./FWLIB/src/misc.c **** 
 127:./FWLIB/src/misc.c **** /**
 128:./FWLIB/src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 129:./FWLIB/src/misc.c ****   *         parameters in the NVIC_InitStruct.
 130:./FWLIB/src/misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 131:./FWLIB/src/misc.c ****   *         function should be called before. 
 132:./FWLIB/src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 133:./FWLIB/src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 134:./FWLIB/src/misc.c ****   * @retval None
 135:./FWLIB/src/misc.c ****   */
 136:./FWLIB/src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 137:./FWLIB/src/misc.c **** {
  59              		.loc 1 137 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
 138:./FWLIB/src/misc.c ****   uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
 139:./FWLIB/src/misc.c ****   
 140:./FWLIB/src/misc.c ****   /* Check the parameters */
 141:./FWLIB/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 142:./FWLIB/src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 143:./FWLIB/src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 144:./FWLIB/src/misc.c ****     
 145:./FWLIB/src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  65              		.loc 1 145 0
  66 0000 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  67 0002 53B9     		cbnz	r3, .L7
 146:./FWLIB/src/misc.c ****   {
 147:./FWLIB/src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 148:./FWLIB/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
 149:./FWLIB/src/misc.c ****     tmppre = (0x4 - tmppriority);
 150:./FWLIB/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 151:./FWLIB/src/misc.c **** 
 152:./FWLIB/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 153:./FWLIB/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
 154:./FWLIB/src/misc.c ****         
 155:./FWLIB/src/misc.c ****     tmppriority = tmppriority << 0x04;
 156:./FWLIB/src/misc.c ****         
 157:./FWLIB/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 158:./FWLIB/src/misc.c ****     
 159:./FWLIB/src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 160:./FWLIB/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 161:./FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 162:./FWLIB/src/misc.c ****   }
 163:./FWLIB/src/misc.c ****   else
 164:./FWLIB/src/misc.c ****   {
ARM GAS  /tmp/ccQ8j3Tc.s 			page 5


 165:./FWLIB/src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 166:./FWLIB/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 167:./FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
  68              		.loc 1 167 0
  69 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  70 0006 03F01F01 		and	r1, r3, #31
 166:./FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
  71              		.loc 1 166 0
  72 000a 5B09     		lsrs	r3, r3, #5
  73              		.loc 1 167 0
  74 000c 0122     		movs	r2, #1
  75 000e 8A40     		lsls	r2, r2, r1
 166:./FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
  76              		.loc 1 166 0
  77 0010 2033     		adds	r3, r3, #32
  78 0012 1249     		ldr	r1, .L8
  79 0014 41F82320 		str	r2, [r1, r3, lsl #2]
 168:./FWLIB/src/misc.c ****   }
 169:./FWLIB/src/misc.c **** }
  80              		.loc 1 169 0
  81 0018 7047     		bx	lr
  82              	.L7:
 148:./FWLIB/src/misc.c ****     tmppre = (0x4 - tmppriority);
  83              		.loc 1 148 0
  84 001a 114B     		ldr	r3, .L8+4
  85 001c DB68     		ldr	r3, [r3, #12]
  86 001e DB43     		mvns	r3, r3
  87 0020 C3F30222 		ubfx	r2, r3, #8, #3
  88              	.LVL3:
 149:./FWLIB/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
  89              		.loc 1 149 0
  90 0024 C2F10401 		rsb	r1, r2, #4
  91 0028 C9B2     		uxtb	r1, r1
  92              	.LVL4:
 150:./FWLIB/src/misc.c **** 
  93              		.loc 1 150 0
  94 002a 0F23     		movs	r3, #15
  95 002c 1341     		asrs	r3, r3, r2
  96              	.LVL5:
 152:./FWLIB/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
  97              		.loc 1 152 0
  98 002e 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  99              	.LVL6:
 100 0030 8A40     		lsls	r2, r2, r1
 101 0032 D2B2     		uxtb	r2, r2
 102              	.LVL7:
 153:./FWLIB/src/misc.c ****         
 103              		.loc 1 153 0
 104 0034 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 105              	.LVL8:
 106 0036 0B40     		ands	r3, r3, r1
 107              	.LVL9:
 108 0038 1343     		orrs	r3, r3, r2
 109              	.LVL10:
 155:./FWLIB/src/misc.c ****         
 110              		.loc 1 155 0
 111 003a 1B01     		lsls	r3, r3, #4
ARM GAS  /tmp/ccQ8j3Tc.s 			page 6


 112              	.LVL11:
 113 003c DBB2     		uxtb	r3, r3
 114              	.LVL12:
 157:./FWLIB/src/misc.c ****     
 115              		.loc 1 157 0
 116 003e 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 117 0040 0649     		ldr	r1, .L8
 118 0042 0A44     		add	r2, r2, r1
 119 0044 82F80033 		strb	r3, [r2, #768]
 161:./FWLIB/src/misc.c ****   }
 120              		.loc 1 161 0
 121 0048 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 122              	.LVL13:
 123 004a 03F01F00 		and	r0, r3, #31
 124              	.LVL14:
 160:./FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 125              		.loc 1 160 0
 126 004e 5B09     		lsrs	r3, r3, #5
 161:./FWLIB/src/misc.c ****   }
 127              		.loc 1 161 0
 128 0050 0122     		movs	r2, #1
 129              	.LVL15:
 130 0052 8240     		lsls	r2, r2, r0
 160:./FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 131              		.loc 1 160 0
 132 0054 41F82320 		str	r2, [r1, r3, lsl #2]
 133 0058 7047     		bx	lr
 134              	.L9:
 135 005a 00BF     		.align	2
 136              	.L8:
 137 005c 00E100E0 		.word	-536813312
 138 0060 00ED00E0 		.word	-536810240
 139              		.cfi_endproc
 140              	.LFE113:
 142              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 143              		.align	1
 144              		.global	NVIC_SetVectorTable
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	NVIC_SetVectorTable:
 151              	.LFB114:
 170:./FWLIB/src/misc.c **** 
 171:./FWLIB/src/misc.c **** /**
 172:./FWLIB/src/misc.c ****   * @brief  Sets the vector table location and Offset.
 173:./FWLIB/src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 174:./FWLIB/src/misc.c ****   *   This parameter can be one of the following values:
 175:./FWLIB/src/misc.c ****   *     @arg NVIC_VectTab_RAM: Vector Table in internal SRAM.
 176:./FWLIB/src/misc.c ****   *     @arg NVIC_VectTab_FLASH: Vector Table in internal FLASH.
 177:./FWLIB/src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x200.
 178:./FWLIB/src/misc.c ****   * @retval None
 179:./FWLIB/src/misc.c ****   */
 180:./FWLIB/src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 181:./FWLIB/src/misc.c **** { 
 152              		.loc 1 181 0
 153              		.cfi_startproc
ARM GAS  /tmp/ccQ8j3Tc.s 			page 7


 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.LVL16:
 182:./FWLIB/src/misc.c ****   /* Check the parameters */
 183:./FWLIB/src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 184:./FWLIB/src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 185:./FWLIB/src/misc.c ****    
 186:./FWLIB/src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 158              		.loc 1 186 0
 159 0000 21F06041 		bic	r1, r1, #-536870912
 160              	.LVL17:
 161 0004 21F07F01 		bic	r1, r1, #127
 162 0008 0143     		orrs	r1, r1, r0
 163 000a 014B     		ldr	r3, .L11
 164 000c 9960     		str	r1, [r3, #8]
 187:./FWLIB/src/misc.c **** }
 165              		.loc 1 187 0
 166 000e 7047     		bx	lr
 167              	.L12:
 168              		.align	2
 169              	.L11:
 170 0010 00ED00E0 		.word	-536810240
 171              		.cfi_endproc
 172              	.LFE114:
 174              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 175              		.align	1
 176              		.global	NVIC_SystemLPConfig
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	NVIC_SystemLPConfig:
 183              	.LFB115:
 188:./FWLIB/src/misc.c **** 
 189:./FWLIB/src/misc.c **** /**
 190:./FWLIB/src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 191:./FWLIB/src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 192:./FWLIB/src/misc.c ****   *   This parameter can be one of the following values:
 193:./FWLIB/src/misc.c ****   *     @arg NVIC_LP_SEVONPEND: Low Power SEV on Pend.
 194:./FWLIB/src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP: Low Power DEEPSLEEP request.
 195:./FWLIB/src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT: Low Power Sleep on Exit.
 196:./FWLIB/src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 197:./FWLIB/src/misc.c ****   * @retval None
 198:./FWLIB/src/misc.c ****   */
 199:./FWLIB/src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 200:./FWLIB/src/misc.c **** {
 184              		.loc 1 200 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL18:
 201:./FWLIB/src/misc.c ****   /* Check the parameters */
 202:./FWLIB/src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 203:./FWLIB/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 204:./FWLIB/src/misc.c ****   
ARM GAS  /tmp/ccQ8j3Tc.s 			page 8


 205:./FWLIB/src/misc.c ****   if (NewState != DISABLE)
 190              		.loc 1 205 0
 191 0000 29B9     		cbnz	r1, .L16
 206:./FWLIB/src/misc.c ****   {
 207:./FWLIB/src/misc.c ****     SCB->SCR |= LowPowerMode;
 208:./FWLIB/src/misc.c ****   }
 209:./FWLIB/src/misc.c ****   else
 210:./FWLIB/src/misc.c ****   {
 211:./FWLIB/src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 192              		.loc 1 211 0
 193 0002 054A     		ldr	r2, .L17
 194 0004 1369     		ldr	r3, [r2, #16]
 195 0006 23EA0000 		bic	r0, r3, r0
 196              	.LVL19:
 197 000a 1061     		str	r0, [r2, #16]
 212:./FWLIB/src/misc.c ****   }
 213:./FWLIB/src/misc.c **** }
 198              		.loc 1 213 0
 199 000c 7047     		bx	lr
 200              	.LVL20:
 201              	.L16:
 207:./FWLIB/src/misc.c ****   }
 202              		.loc 1 207 0
 203 000e 024B     		ldr	r3, .L17
 204 0010 1A69     		ldr	r2, [r3, #16]
 205 0012 1043     		orrs	r0, r0, r2
 206              	.LVL21:
 207 0014 1861     		str	r0, [r3, #16]
 208 0016 7047     		bx	lr
 209              	.L18:
 210              		.align	2
 211              	.L17:
 212 0018 00ED00E0 		.word	-536810240
 213              		.cfi_endproc
 214              	.LFE115:
 216              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 217              		.align	1
 218              		.global	SysTick_CLKSourceConfig
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	SysTick_CLKSourceConfig:
 225              	.LFB116:
 214:./FWLIB/src/misc.c **** 
 215:./FWLIB/src/misc.c **** /**
 216:./FWLIB/src/misc.c ****   * @brief  Configures the SysTick clock source.
 217:./FWLIB/src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 218:./FWLIB/src/misc.c ****   *   This parameter can be one of the following values:
 219:./FWLIB/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 220:./FWLIB/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 221:./FWLIB/src/misc.c ****   * @retval None
 222:./FWLIB/src/misc.c ****   */
 223:./FWLIB/src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 224:./FWLIB/src/misc.c **** {
 226              		.loc 1 224 0
 227              		.cfi_startproc
ARM GAS  /tmp/ccQ8j3Tc.s 			page 9


 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231              	.LVL22:
 225:./FWLIB/src/misc.c ****   /* Check the parameters */
 226:./FWLIB/src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 227:./FWLIB/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 232              		.loc 1 227 0
 233 0000 0428     		cmp	r0, #4
 234 0002 05D0     		beq	.L22
 228:./FWLIB/src/misc.c ****   {
 229:./FWLIB/src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 230:./FWLIB/src/misc.c ****   }
 231:./FWLIB/src/misc.c ****   else
 232:./FWLIB/src/misc.c ****   {
 233:./FWLIB/src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 235              		.loc 1 233 0
 236 0004 054A     		ldr	r2, .L23
 237 0006 1368     		ldr	r3, [r2]
 238 0008 23F00403 		bic	r3, r3, #4
 239 000c 1360     		str	r3, [r2]
 234:./FWLIB/src/misc.c ****   }
 235:./FWLIB/src/misc.c **** }
 240              		.loc 1 235 0
 241 000e 7047     		bx	lr
 242              	.L22:
 229:./FWLIB/src/misc.c ****   }
 243              		.loc 1 229 0
 244 0010 024A     		ldr	r2, .L23
 245 0012 1368     		ldr	r3, [r2]
 246 0014 43F00403 		orr	r3, r3, #4
 247 0018 1360     		str	r3, [r2]
 248 001a 7047     		bx	lr
 249              	.L24:
 250              		.align	2
 251              	.L23:
 252 001c 10E000E0 		.word	-536813552
 253              		.cfi_endproc
 254              	.LFE116:
 256              		.text
 257              	.Letext0:
 258              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 259              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 260              		.file 4 "build/lnInclude/core_cm4.h"
 261              		.file 5 "build/lnInclude/system_stm32f4xx.h"
 262              		.file 6 "build/lnInclude/stm32f4xx.h"
 263              		.file 7 "build/lnInclude/misc.h"
ARM GAS  /tmp/ccQ8j3Tc.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 misc.c
     /tmp/ccQ8j3Tc.s:18     .text.NVIC_PriorityGroupConfig:0000000000000000 $t
     /tmp/ccQ8j3Tc.s:25     .text.NVIC_PriorityGroupConfig:0000000000000000 NVIC_PriorityGroupConfig
     /tmp/ccQ8j3Tc.s:45     .text.NVIC_PriorityGroupConfig:0000000000000010 $d
     /tmp/ccQ8j3Tc.s:50     .text.NVIC_Init:0000000000000000 $t
     /tmp/ccQ8j3Tc.s:57     .text.NVIC_Init:0000000000000000 NVIC_Init
     /tmp/ccQ8j3Tc.s:137    .text.NVIC_Init:000000000000005c $d
     /tmp/ccQ8j3Tc.s:143    .text.NVIC_SetVectorTable:0000000000000000 $t
     /tmp/ccQ8j3Tc.s:150    .text.NVIC_SetVectorTable:0000000000000000 NVIC_SetVectorTable
     /tmp/ccQ8j3Tc.s:170    .text.NVIC_SetVectorTable:0000000000000010 $d
     /tmp/ccQ8j3Tc.s:175    .text.NVIC_SystemLPConfig:0000000000000000 $t
     /tmp/ccQ8j3Tc.s:182    .text.NVIC_SystemLPConfig:0000000000000000 NVIC_SystemLPConfig
     /tmp/ccQ8j3Tc.s:212    .text.NVIC_SystemLPConfig:0000000000000018 $d
     /tmp/ccQ8j3Tc.s:217    .text.SysTick_CLKSourceConfig:0000000000000000 $t
     /tmp/ccQ8j3Tc.s:224    .text.SysTick_CLKSourceConfig:0000000000000000 SysTick_CLKSourceConfig
     /tmp/ccQ8j3Tc.s:252    .text.SysTick_CLKSourceConfig:000000000000001c $d

NO UNDEFINED SYMBOLS
