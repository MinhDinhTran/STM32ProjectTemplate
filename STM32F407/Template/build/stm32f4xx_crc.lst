ARM GAS  /tmp/cc0ILU5V.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_crc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CRC_ResetDR,"ax",%progbits
  18              		.align	1
  19              		.global	CRC_ResetDR
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	CRC_ResetDR:
  26              	.LFB112:
  27              		.file 1 "./FWLIB/src/stm32f4xx_crc.c"
   1:./FWLIB/src/stm32f4xx_crc.c **** /**
   2:./FWLIB/src/stm32f4xx_crc.c ****   ******************************************************************************
   3:./FWLIB/src/stm32f4xx_crc.c ****   * @file    stm32f4xx_crc.c
   4:./FWLIB/src/stm32f4xx_crc.c ****   * @author  MCD Application Team
   5:./FWLIB/src/stm32f4xx_crc.c ****   * @version V1.4.0
   6:./FWLIB/src/stm32f4xx_crc.c ****   * @date    04-August-2014
   7:./FWLIB/src/stm32f4xx_crc.c ****   * @brief   This file provides all the CRC firmware functions.
   8:./FWLIB/src/stm32f4xx_crc.c ****   ******************************************************************************
   9:./FWLIB/src/stm32f4xx_crc.c ****   * @attention
  10:./FWLIB/src/stm32f4xx_crc.c ****   *
  11:./FWLIB/src/stm32f4xx_crc.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  12:./FWLIB/src/stm32f4xx_crc.c ****   *
  13:./FWLIB/src/stm32f4xx_crc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:./FWLIB/src/stm32f4xx_crc.c ****   * You may not use this file except in compliance with the License.
  15:./FWLIB/src/stm32f4xx_crc.c ****   * You may obtain a copy of the License at:
  16:./FWLIB/src/stm32f4xx_crc.c ****   *
  17:./FWLIB/src/stm32f4xx_crc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:./FWLIB/src/stm32f4xx_crc.c ****   *
  19:./FWLIB/src/stm32f4xx_crc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:./FWLIB/src/stm32f4xx_crc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:./FWLIB/src/stm32f4xx_crc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:./FWLIB/src/stm32f4xx_crc.c ****   * See the License for the specific language governing permissions and
  23:./FWLIB/src/stm32f4xx_crc.c ****   * limitations under the License.
  24:./FWLIB/src/stm32f4xx_crc.c ****   *
  25:./FWLIB/src/stm32f4xx_crc.c ****   ******************************************************************************
  26:./FWLIB/src/stm32f4xx_crc.c ****   */
  27:./FWLIB/src/stm32f4xx_crc.c **** 
  28:./FWLIB/src/stm32f4xx_crc.c **** /* Includes ------------------------------------------------------------------*/
  29:./FWLIB/src/stm32f4xx_crc.c **** #include "stm32f4xx_crc.h"
  30:./FWLIB/src/stm32f4xx_crc.c **** 
  31:./FWLIB/src/stm32f4xx_crc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
ARM GAS  /tmp/cc0ILU5V.s 			page 2


  32:./FWLIB/src/stm32f4xx_crc.c ****   * @{
  33:./FWLIB/src/stm32f4xx_crc.c ****   */
  34:./FWLIB/src/stm32f4xx_crc.c **** 
  35:./FWLIB/src/stm32f4xx_crc.c **** /** @defgroup CRC 
  36:./FWLIB/src/stm32f4xx_crc.c ****   * @brief CRC driver modules
  37:./FWLIB/src/stm32f4xx_crc.c ****   * @{
  38:./FWLIB/src/stm32f4xx_crc.c ****   */
  39:./FWLIB/src/stm32f4xx_crc.c **** 
  40:./FWLIB/src/stm32f4xx_crc.c **** /* Private typedef -----------------------------------------------------------*/
  41:./FWLIB/src/stm32f4xx_crc.c **** /* Private define ------------------------------------------------------------*/
  42:./FWLIB/src/stm32f4xx_crc.c **** /* Private macro -------------------------------------------------------------*/
  43:./FWLIB/src/stm32f4xx_crc.c **** /* Private variables ---------------------------------------------------------*/
  44:./FWLIB/src/stm32f4xx_crc.c **** /* Private function prototypes -----------------------------------------------*/
  45:./FWLIB/src/stm32f4xx_crc.c **** /* Private functions ---------------------------------------------------------*/
  46:./FWLIB/src/stm32f4xx_crc.c **** 
  47:./FWLIB/src/stm32f4xx_crc.c **** /** @defgroup CRC_Private_Functions
  48:./FWLIB/src/stm32f4xx_crc.c ****   * @{
  49:./FWLIB/src/stm32f4xx_crc.c ****   */
  50:./FWLIB/src/stm32f4xx_crc.c **** 
  51:./FWLIB/src/stm32f4xx_crc.c **** /**
  52:./FWLIB/src/stm32f4xx_crc.c ****   * @brief  Resets the CRC Data register (DR).
  53:./FWLIB/src/stm32f4xx_crc.c ****   * @param  None
  54:./FWLIB/src/stm32f4xx_crc.c ****   * @retval None
  55:./FWLIB/src/stm32f4xx_crc.c ****   */
  56:./FWLIB/src/stm32f4xx_crc.c **** void CRC_ResetDR(void)
  57:./FWLIB/src/stm32f4xx_crc.c **** {
  28              		.loc 1 57 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  58:./FWLIB/src/stm32f4xx_crc.c ****   /* Reset CRC generator */
  59:./FWLIB/src/stm32f4xx_crc.c ****   CRC->CR = CRC_CR_RESET;
  33              		.loc 1 59 0
  34 0000 014B     		ldr	r3, .L2
  35 0002 0122     		movs	r2, #1
  36 0004 9A60     		str	r2, [r3, #8]
  60:./FWLIB/src/stm32f4xx_crc.c **** }
  37              		.loc 1 60 0
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00300240 		.word	1073885184
  43              		.cfi_endproc
  44              	.LFE112:
  46              		.section	.text.CRC_CalcCRC,"ax",%progbits
  47              		.align	1
  48              		.global	CRC_CalcCRC
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	CRC_CalcCRC:
  55              	.LFB113:
  61:./FWLIB/src/stm32f4xx_crc.c **** 
  62:./FWLIB/src/stm32f4xx_crc.c **** /**
ARM GAS  /tmp/cc0ILU5V.s 			page 3


  63:./FWLIB/src/stm32f4xx_crc.c ****   * @brief  Computes the 32-bit CRC of a given data word(32-bit).
  64:./FWLIB/src/stm32f4xx_crc.c ****   * @param  Data: data word(32-bit) to compute its CRC
  65:./FWLIB/src/stm32f4xx_crc.c ****   * @retval 32-bit CRC
  66:./FWLIB/src/stm32f4xx_crc.c ****   */
  67:./FWLIB/src/stm32f4xx_crc.c **** uint32_t CRC_CalcCRC(uint32_t Data)
  68:./FWLIB/src/stm32f4xx_crc.c **** {
  56              		.loc 1 68 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL0:
  69:./FWLIB/src/stm32f4xx_crc.c ****   CRC->DR = Data;
  62              		.loc 1 69 0
  63 0000 014B     		ldr	r3, .L5
  64 0002 1860     		str	r0, [r3]
  70:./FWLIB/src/stm32f4xx_crc.c ****   
  71:./FWLIB/src/stm32f4xx_crc.c ****   return (CRC->DR);
  65              		.loc 1 71 0
  66 0004 1868     		ldr	r0, [r3]
  67              	.LVL1:
  72:./FWLIB/src/stm32f4xx_crc.c **** }
  68              		.loc 1 72 0
  69 0006 7047     		bx	lr
  70              	.L6:
  71              		.align	2
  72              	.L5:
  73 0008 00300240 		.word	1073885184
  74              		.cfi_endproc
  75              	.LFE113:
  77              		.section	.text.CRC_CalcBlockCRC,"ax",%progbits
  78              		.align	1
  79              		.global	CRC_CalcBlockCRC
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	CRC_CalcBlockCRC:
  86              	.LFB114:
  73:./FWLIB/src/stm32f4xx_crc.c **** 
  74:./FWLIB/src/stm32f4xx_crc.c **** /**
  75:./FWLIB/src/stm32f4xx_crc.c ****   * @brief  Computes the 32-bit CRC of a given buffer of data word(32-bit).
  76:./FWLIB/src/stm32f4xx_crc.c ****   * @param  pBuffer: pointer to the buffer containing the data to be computed
  77:./FWLIB/src/stm32f4xx_crc.c ****   * @param  BufferLength: length of the buffer to be computed					
  78:./FWLIB/src/stm32f4xx_crc.c ****   * @retval 32-bit CRC
  79:./FWLIB/src/stm32f4xx_crc.c ****   */
  80:./FWLIB/src/stm32f4xx_crc.c **** uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
  81:./FWLIB/src/stm32f4xx_crc.c **** {
  87              		.loc 1 81 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL2:
  82:./FWLIB/src/stm32f4xx_crc.c ****   uint32_t index = 0;
  83:./FWLIB/src/stm32f4xx_crc.c ****   
  84:./FWLIB/src/stm32f4xx_crc.c ****   for(index = 0; index < BufferLength; index++)
ARM GAS  /tmp/cc0ILU5V.s 			page 4


  93              		.loc 1 84 0
  94 0000 0023     		movs	r3, #0
  95              	.LVL3:
  96 0002 8B42     		cmp	r3, r1
  97 0004 0CD2     		bcs	.L14
  81:./FWLIB/src/stm32f4xx_crc.c ****   uint32_t index = 0;
  98              		.loc 1 81 0
  99 0006 10B4     		push	{r4}
 100              	.LCFI0:
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 4, -4
 103              	.L9:
  85:./FWLIB/src/stm32f4xx_crc.c ****   {
  86:./FWLIB/src/stm32f4xx_crc.c ****     CRC->DR = pBuffer[index];
 104              		.loc 1 86 0 discriminator 3
 105 0008 50F82340 		ldr	r4, [r0, r3, lsl #2]
 106 000c 064A     		ldr	r2, .L15
 107 000e 1460     		str	r4, [r2]
  84:./FWLIB/src/stm32f4xx_crc.c ****   {
 108              		.loc 1 84 0 discriminator 3
 109 0010 0133     		adds	r3, r3, #1
 110              	.LVL4:
 111 0012 8B42     		cmp	r3, r1
 112 0014 F8D3     		bcc	.L9
  87:./FWLIB/src/stm32f4xx_crc.c ****   }
  88:./FWLIB/src/stm32f4xx_crc.c ****   return (CRC->DR);
 113              		.loc 1 88 0
 114 0016 044B     		ldr	r3, .L15
 115              	.LVL5:
 116 0018 1868     		ldr	r0, [r3]
 117              	.LVL6:
  89:./FWLIB/src/stm32f4xx_crc.c **** }
 118              		.loc 1 89 0
 119 001a 5DF8044B 		ldr	r4, [sp], #4
 120              	.LCFI1:
 121              		.cfi_restore 4
 122              		.cfi_def_cfa_offset 0
 123 001e 7047     		bx	lr
 124              	.LVL7:
 125              	.L14:
  88:./FWLIB/src/stm32f4xx_crc.c **** }
 126              		.loc 1 88 0
 127 0020 014B     		ldr	r3, .L15
 128              	.LVL8:
 129 0022 1868     		ldr	r0, [r3]
 130              	.LVL9:
 131              		.loc 1 89 0
 132 0024 7047     		bx	lr
 133              	.L16:
 134 0026 00BF     		.align	2
 135              	.L15:
 136 0028 00300240 		.word	1073885184
 137              		.cfi_endproc
 138              	.LFE114:
 140              		.section	.text.CRC_GetCRC,"ax",%progbits
 141              		.align	1
 142              		.global	CRC_GetCRC
ARM GAS  /tmp/cc0ILU5V.s 			page 5


 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	CRC_GetCRC:
 149              	.LFB115:
  90:./FWLIB/src/stm32f4xx_crc.c **** 
  91:./FWLIB/src/stm32f4xx_crc.c **** /**
  92:./FWLIB/src/stm32f4xx_crc.c ****   * @brief  Returns the current CRC value.
  93:./FWLIB/src/stm32f4xx_crc.c ****   * @param  None
  94:./FWLIB/src/stm32f4xx_crc.c ****   * @retval 32-bit CRC
  95:./FWLIB/src/stm32f4xx_crc.c ****   */
  96:./FWLIB/src/stm32f4xx_crc.c **** uint32_t CRC_GetCRC(void)
  97:./FWLIB/src/stm32f4xx_crc.c **** {
 150              		.loc 1 97 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
  98:./FWLIB/src/stm32f4xx_crc.c ****   return (CRC->DR);
 155              		.loc 1 98 0
 156 0000 014B     		ldr	r3, .L18
 157 0002 1868     		ldr	r0, [r3]
  99:./FWLIB/src/stm32f4xx_crc.c **** }
 158              		.loc 1 99 0
 159 0004 7047     		bx	lr
 160              	.L19:
 161 0006 00BF     		.align	2
 162              	.L18:
 163 0008 00300240 		.word	1073885184
 164              		.cfi_endproc
 165              	.LFE115:
 167              		.section	.text.CRC_SetIDRegister,"ax",%progbits
 168              		.align	1
 169              		.global	CRC_SetIDRegister
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	CRC_SetIDRegister:
 176              	.LFB116:
 100:./FWLIB/src/stm32f4xx_crc.c **** 
 101:./FWLIB/src/stm32f4xx_crc.c **** /**
 102:./FWLIB/src/stm32f4xx_crc.c ****   * @brief  Stores a 8-bit data in the Independent Data(ID) register.
 103:./FWLIB/src/stm32f4xx_crc.c ****   * @param  IDValue: 8-bit value to be stored in the ID register 					
 104:./FWLIB/src/stm32f4xx_crc.c ****   * @retval None
 105:./FWLIB/src/stm32f4xx_crc.c ****   */
 106:./FWLIB/src/stm32f4xx_crc.c **** void CRC_SetIDRegister(uint8_t IDValue)
 107:./FWLIB/src/stm32f4xx_crc.c **** {
 177              		.loc 1 107 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182              	.LVL10:
 108:./FWLIB/src/stm32f4xx_crc.c ****   CRC->IDR = IDValue;
 183              		.loc 1 108 0
ARM GAS  /tmp/cc0ILU5V.s 			page 6


 184 0000 014B     		ldr	r3, .L21
 185 0002 1871     		strb	r0, [r3, #4]
 109:./FWLIB/src/stm32f4xx_crc.c **** }
 186              		.loc 1 109 0
 187 0004 7047     		bx	lr
 188              	.L22:
 189 0006 00BF     		.align	2
 190              	.L21:
 191 0008 00300240 		.word	1073885184
 192              		.cfi_endproc
 193              	.LFE116:
 195              		.section	.text.CRC_GetIDRegister,"ax",%progbits
 196              		.align	1
 197              		.global	CRC_GetIDRegister
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	CRC_GetIDRegister:
 204              	.LFB117:
 110:./FWLIB/src/stm32f4xx_crc.c **** 
 111:./FWLIB/src/stm32f4xx_crc.c **** /**
 112:./FWLIB/src/stm32f4xx_crc.c ****   * @brief  Returns the 8-bit data stored in the Independent Data(ID) register
 113:./FWLIB/src/stm32f4xx_crc.c ****   * @param  None
 114:./FWLIB/src/stm32f4xx_crc.c ****   * @retval 8-bit value of the ID register 
 115:./FWLIB/src/stm32f4xx_crc.c ****   */
 116:./FWLIB/src/stm32f4xx_crc.c **** uint8_t CRC_GetIDRegister(void)
 117:./FWLIB/src/stm32f4xx_crc.c **** {
 205              		.loc 1 117 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 118:./FWLIB/src/stm32f4xx_crc.c ****   return (CRC->IDR);
 210              		.loc 1 118 0
 211 0000 014B     		ldr	r3, .L24
 212 0002 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 119:./FWLIB/src/stm32f4xx_crc.c **** }
 213              		.loc 1 119 0
 214 0004 7047     		bx	lr
 215              	.L25:
 216 0006 00BF     		.align	2
 217              	.L24:
 218 0008 00300240 		.word	1073885184
 219              		.cfi_endproc
 220              	.LFE117:
 222              		.text
 223              	.Letext0:
 224              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 225              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 226              		.file 4 "build/lnInclude/core_cm4.h"
 227              		.file 5 "build/lnInclude/system_stm32f4xx.h"
 228              		.file 6 "build/lnInclude/stm32f4xx.h"
ARM GAS  /tmp/cc0ILU5V.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_crc.c
     /tmp/cc0ILU5V.s:18     .text.CRC_ResetDR:0000000000000000 $t
     /tmp/cc0ILU5V.s:25     .text.CRC_ResetDR:0000000000000000 CRC_ResetDR
     /tmp/cc0ILU5V.s:42     .text.CRC_ResetDR:0000000000000008 $d
     /tmp/cc0ILU5V.s:47     .text.CRC_CalcCRC:0000000000000000 $t
     /tmp/cc0ILU5V.s:54     .text.CRC_CalcCRC:0000000000000000 CRC_CalcCRC
     /tmp/cc0ILU5V.s:73     .text.CRC_CalcCRC:0000000000000008 $d
     /tmp/cc0ILU5V.s:78     .text.CRC_CalcBlockCRC:0000000000000000 $t
     /tmp/cc0ILU5V.s:85     .text.CRC_CalcBlockCRC:0000000000000000 CRC_CalcBlockCRC
     /tmp/cc0ILU5V.s:136    .text.CRC_CalcBlockCRC:0000000000000028 $d
     /tmp/cc0ILU5V.s:141    .text.CRC_GetCRC:0000000000000000 $t
     /tmp/cc0ILU5V.s:148    .text.CRC_GetCRC:0000000000000000 CRC_GetCRC
     /tmp/cc0ILU5V.s:163    .text.CRC_GetCRC:0000000000000008 $d
     /tmp/cc0ILU5V.s:168    .text.CRC_SetIDRegister:0000000000000000 $t
     /tmp/cc0ILU5V.s:175    .text.CRC_SetIDRegister:0000000000000000 CRC_SetIDRegister
     /tmp/cc0ILU5V.s:191    .text.CRC_SetIDRegister:0000000000000008 $d
     /tmp/cc0ILU5V.s:196    .text.CRC_GetIDRegister:0000000000000000 $t
     /tmp/cc0ILU5V.s:203    .text.CRC_GetIDRegister:0000000000000000 CRC_GetIDRegister
     /tmp/cc0ILU5V.s:218    .text.CRC_GetIDRegister:0000000000000008 $d

NO UNDEFINED SYMBOLS
