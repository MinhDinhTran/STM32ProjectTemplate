ARM GAS  /tmp/cc07Bnrr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_syscfg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SYSCFG_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	SYSCFG_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SYSCFG_DeInit:
  26              	.LFB112:
  27              		.file 1 "./FWLIB/src/stm32f4xx_syscfg.c"
   1:./FWLIB/src/stm32f4xx_syscfg.c **** /**
   2:./FWLIB/src/stm32f4xx_syscfg.c ****   ******************************************************************************
   3:./FWLIB/src/stm32f4xx_syscfg.c ****   * @file    stm32f4xx_syscfg.c
   4:./FWLIB/src/stm32f4xx_syscfg.c ****   * @author  MCD Application Team
   5:./FWLIB/src/stm32f4xx_syscfg.c ****   * @version V1.4.0
   6:./FWLIB/src/stm32f4xx_syscfg.c ****   * @date    04-August-2014
   7:./FWLIB/src/stm32f4xx_syscfg.c ****   * @brief   This file provides firmware functions to manage the SYSCFG peripheral.
   8:./FWLIB/src/stm32f4xx_syscfg.c ****   *
   9:./FWLIB/src/stm32f4xx_syscfg.c ****  @verbatim
  10:./FWLIB/src/stm32f4xx_syscfg.c ****     
  11:./FWLIB/src/stm32f4xx_syscfg.c ****  ===============================================================================
  12:./FWLIB/src/stm32f4xx_syscfg.c ****                      ##### How to use this driver #####
  13:./FWLIB/src/stm32f4xx_syscfg.c ****  ===============================================================================
  14:./FWLIB/src/stm32f4xx_syscfg.c ****     [..] This driver provides functions for:
  15:./FWLIB/src/stm32f4xx_syscfg.c ****             
  16:./FWLIB/src/stm32f4xx_syscfg.c ****        (#) Remapping the memory accessible in the code area using SYSCFG_MemoryRemapConfig()
  17:./FWLIB/src/stm32f4xx_syscfg.c ****             
  18:./FWLIB/src/stm32f4xx_syscfg.c ****        (#) Swapping the internal flash Bank1 and Bank2 this features is only visible for 
  19:./FWLIB/src/stm32f4xx_syscfg.c ****            STM32F42xxx/43xxx devices Devices. 
  20:./FWLIB/src/stm32f4xx_syscfg.c ****                 
  21:./FWLIB/src/stm32f4xx_syscfg.c ****        (#) Manage the EXTI lines connection to the GPIOs using SYSCFG_EXTILineConfig()
  22:./FWLIB/src/stm32f4xx_syscfg.c ****               
  23:./FWLIB/src/stm32f4xx_syscfg.c ****        (#) Select the ETHERNET media interface (RMII/RII) using SYSCFG_ETH_MediaInterfaceConfig()
  24:./FWLIB/src/stm32f4xx_syscfg.c ****   
  25:./FWLIB/src/stm32f4xx_syscfg.c ****        -@- SYSCFG APB clock must be enabled to get write access to SYSCFG registers,
  26:./FWLIB/src/stm32f4xx_syscfg.c ****            using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  27:./FWLIB/src/stm32f4xx_syscfg.c ****                    
  28:./FWLIB/src/stm32f4xx_syscfg.c ****  @endverbatim      
  29:./FWLIB/src/stm32f4xx_syscfg.c ****   ******************************************************************************
  30:./FWLIB/src/stm32f4xx_syscfg.c ****   * @attention
  31:./FWLIB/src/stm32f4xx_syscfg.c ****   *
ARM GAS  /tmp/cc07Bnrr.s 			page 2


  32:./FWLIB/src/stm32f4xx_syscfg.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  33:./FWLIB/src/stm32f4xx_syscfg.c ****   *
  34:./FWLIB/src/stm32f4xx_syscfg.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  35:./FWLIB/src/stm32f4xx_syscfg.c ****   * You may not use this file except in compliance with the License.
  36:./FWLIB/src/stm32f4xx_syscfg.c ****   * You may obtain a copy of the License at:
  37:./FWLIB/src/stm32f4xx_syscfg.c ****   *
  38:./FWLIB/src/stm32f4xx_syscfg.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  39:./FWLIB/src/stm32f4xx_syscfg.c ****   *
  40:./FWLIB/src/stm32f4xx_syscfg.c ****   * Unless required by applicable law or agreed to in writing, software 
  41:./FWLIB/src/stm32f4xx_syscfg.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  42:./FWLIB/src/stm32f4xx_syscfg.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  43:./FWLIB/src/stm32f4xx_syscfg.c ****   * See the License for the specific language governing permissions and
  44:./FWLIB/src/stm32f4xx_syscfg.c ****   * limitations under the License.
  45:./FWLIB/src/stm32f4xx_syscfg.c ****   *
  46:./FWLIB/src/stm32f4xx_syscfg.c ****   ******************************************************************************
  47:./FWLIB/src/stm32f4xx_syscfg.c ****   */
  48:./FWLIB/src/stm32f4xx_syscfg.c **** 
  49:./FWLIB/src/stm32f4xx_syscfg.c **** /* Includes ------------------------------------------------------------------*/
  50:./FWLIB/src/stm32f4xx_syscfg.c **** #include "stm32f4xx_syscfg.h"
  51:./FWLIB/src/stm32f4xx_syscfg.c **** #include "stm32f4xx_rcc.h"
  52:./FWLIB/src/stm32f4xx_syscfg.c **** 
  53:./FWLIB/src/stm32f4xx_syscfg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  54:./FWLIB/src/stm32f4xx_syscfg.c ****   * @{
  55:./FWLIB/src/stm32f4xx_syscfg.c ****   */
  56:./FWLIB/src/stm32f4xx_syscfg.c **** 
  57:./FWLIB/src/stm32f4xx_syscfg.c **** /** @defgroup SYSCFG 
  58:./FWLIB/src/stm32f4xx_syscfg.c ****   * @brief SYSCFG driver modules
  59:./FWLIB/src/stm32f4xx_syscfg.c ****   * @{
  60:./FWLIB/src/stm32f4xx_syscfg.c ****   */ 
  61:./FWLIB/src/stm32f4xx_syscfg.c **** 
  62:./FWLIB/src/stm32f4xx_syscfg.c **** /* Private typedef -----------------------------------------------------------*/
  63:./FWLIB/src/stm32f4xx_syscfg.c **** /* Private define ------------------------------------------------------------*/
  64:./FWLIB/src/stm32f4xx_syscfg.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  65:./FWLIB/src/stm32f4xx_syscfg.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  66:./FWLIB/src/stm32f4xx_syscfg.c **** /* ---  MEMRMP Register ---*/ 
  67:./FWLIB/src/stm32f4xx_syscfg.c **** /* Alias word address of UFB_MODE bit */ 
  68:./FWLIB/src/stm32f4xx_syscfg.c **** #define MEMRMP_OFFSET             SYSCFG_OFFSET 
  69:./FWLIB/src/stm32f4xx_syscfg.c **** #define UFB_MODE_BitNumber        ((uint8_t)0x8) 
  70:./FWLIB/src/stm32f4xx_syscfg.c **** #define UFB_MODE_BB               (PERIPH_BB_BASE + (MEMRMP_OFFSET * 32) + (UFB_MODE_BitNumber * 4)
  71:./FWLIB/src/stm32f4xx_syscfg.c **** 
  72:./FWLIB/src/stm32f4xx_syscfg.c **** 
  73:./FWLIB/src/stm32f4xx_syscfg.c **** /* ---  PMC Register ---*/ 
  74:./FWLIB/src/stm32f4xx_syscfg.c **** /* Alias word address of MII_RMII_SEL bit */ 
  75:./FWLIB/src/stm32f4xx_syscfg.c **** #define PMC_OFFSET                (SYSCFG_OFFSET + 0x04) 
  76:./FWLIB/src/stm32f4xx_syscfg.c **** #define MII_RMII_SEL_BitNumber    ((uint8_t)0x17) 
  77:./FWLIB/src/stm32f4xx_syscfg.c **** #define PMC_MII_RMII_SEL_BB       (PERIPH_BB_BASE + (PMC_OFFSET * 32) + (MII_RMII_SEL_BitNumber * 4
  78:./FWLIB/src/stm32f4xx_syscfg.c **** 
  79:./FWLIB/src/stm32f4xx_syscfg.c **** /* ---  CMPCR Register ---*/ 
  80:./FWLIB/src/stm32f4xx_syscfg.c **** /* Alias word address of CMP_PD bit */ 
  81:./FWLIB/src/stm32f4xx_syscfg.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20) 
  82:./FWLIB/src/stm32f4xx_syscfg.c **** #define CMP_PD_BitNumber          ((uint8_t)0x00) 
  83:./FWLIB/src/stm32f4xx_syscfg.c **** #define CMPCR_CMP_PD_BB           (PERIPH_BB_BASE + (CMPCR_OFFSET * 32) + (CMP_PD_BitNumber * 4)) 
  84:./FWLIB/src/stm32f4xx_syscfg.c **** 
  85:./FWLIB/src/stm32f4xx_syscfg.c **** /* Private macro -------------------------------------------------------------*/
  86:./FWLIB/src/stm32f4xx_syscfg.c **** /* Private variables ---------------------------------------------------------*/
  87:./FWLIB/src/stm32f4xx_syscfg.c **** /* Private function prototypes -----------------------------------------------*/
  88:./FWLIB/src/stm32f4xx_syscfg.c **** /* Private functions ---------------------------------------------------------*/
ARM GAS  /tmp/cc07Bnrr.s 			page 3


  89:./FWLIB/src/stm32f4xx_syscfg.c **** 
  90:./FWLIB/src/stm32f4xx_syscfg.c **** /** @defgroup SYSCFG_Private_Functions
  91:./FWLIB/src/stm32f4xx_syscfg.c ****   * @{
  92:./FWLIB/src/stm32f4xx_syscfg.c ****   */ 
  93:./FWLIB/src/stm32f4xx_syscfg.c **** 
  94:./FWLIB/src/stm32f4xx_syscfg.c **** /**
  95:./FWLIB/src/stm32f4xx_syscfg.c ****   * @brief  Deinitializes the Alternate Functions (remap and EXTI configuration)
  96:./FWLIB/src/stm32f4xx_syscfg.c ****   *   registers to their default reset values.
  97:./FWLIB/src/stm32f4xx_syscfg.c ****   * @param  None
  98:./FWLIB/src/stm32f4xx_syscfg.c ****   * @retval None
  99:./FWLIB/src/stm32f4xx_syscfg.c ****   */
 100:./FWLIB/src/stm32f4xx_syscfg.c **** void SYSCFG_DeInit(void)
 101:./FWLIB/src/stm32f4xx_syscfg.c **** {
  28              		.loc 1 101 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 102:./FWLIB/src/stm32f4xx_syscfg.c ****    RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  37              		.loc 1 102 0
  38 0002 0121     		movs	r1, #1
  39 0004 4FF48040 		mov	r0, #16384
  40 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  41              	.LVL0:
 103:./FWLIB/src/stm32f4xx_syscfg.c ****    RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
  42              		.loc 1 103 0
  43 000c 0021     		movs	r1, #0
  44 000e 4FF48040 		mov	r0, #16384
  45 0012 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  46              	.LVL1:
 104:./FWLIB/src/stm32f4xx_syscfg.c **** }
  47              		.loc 1 104 0
  48 0016 08BD     		pop	{r3, pc}
  49              		.cfi_endproc
  50              	.LFE112:
  52              		.section	.text.SYSCFG_MemoryRemapConfig,"ax",%progbits
  53              		.align	1
  54              		.global	SYSCFG_MemoryRemapConfig
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	SYSCFG_MemoryRemapConfig:
  61              	.LFB113:
 105:./FWLIB/src/stm32f4xx_syscfg.c **** 
 106:./FWLIB/src/stm32f4xx_syscfg.c **** /**
 107:./FWLIB/src/stm32f4xx_syscfg.c ****   * @brief  Changes the mapping of the specified pin.
 108:./FWLIB/src/stm32f4xx_syscfg.c ****   * @param  SYSCFG_Memory: selects the memory remapping.
 109:./FWLIB/src/stm32f4xx_syscfg.c ****   *         This parameter can be one of the following values:
 110:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_Flash:       Main Flash memory mapped at 0x00000000  
 111:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_SystemFlash: System Flash memory mapped at 0x00000000
 112:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_FSMC:        FSMC (Bank1 (NOR/PSRAM 1 and 2) mapped at 0x000
 113:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_FMC:         FMC (Bank1 (NOR/PSRAM 1 and 2) mapped at 0x0000
ARM GAS  /tmp/cc07Bnrr.s 			page 4


 114:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_SRAM:        Embedded SRAM (112kB) mapped at 0x00000000
 115:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_SDRAM:       FMC (External SDRAM)  mapped at 0x00000000 for 
 116:./FWLIB/src/stm32f4xx_syscfg.c ****   * @retval None
 117:./FWLIB/src/stm32f4xx_syscfg.c ****   */
 118:./FWLIB/src/stm32f4xx_syscfg.c **** void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
 119:./FWLIB/src/stm32f4xx_syscfg.c **** {
  62              		.loc 1 119 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67              	.LVL2:
 120:./FWLIB/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 121:./FWLIB/src/stm32f4xx_syscfg.c ****   assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));
 122:./FWLIB/src/stm32f4xx_syscfg.c **** 
 123:./FWLIB/src/stm32f4xx_syscfg.c ****   SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
  68              		.loc 1 123 0
  69 0000 014B     		ldr	r3, .L4
  70 0002 1860     		str	r0, [r3]
 124:./FWLIB/src/stm32f4xx_syscfg.c **** }
  71              		.loc 1 124 0
  72 0004 7047     		bx	lr
  73              	.L5:
  74 0006 00BF     		.align	2
  75              	.L4:
  76 0008 00380140 		.word	1073821696
  77              		.cfi_endproc
  78              	.LFE113:
  80              		.section	.text.SYSCFG_MemorySwappingBank,"ax",%progbits
  81              		.align	1
  82              		.global	SYSCFG_MemorySwappingBank
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	SYSCFG_MemorySwappingBank:
  89              	.LFB114:
 125:./FWLIB/src/stm32f4xx_syscfg.c **** 
 126:./FWLIB/src/stm32f4xx_syscfg.c **** /**
 127:./FWLIB/src/stm32f4xx_syscfg.c ****   * @brief  Enables or disables the Interal FLASH Bank Swapping.
 128:./FWLIB/src/stm32f4xx_syscfg.c ****   *   
 129:./FWLIB/src/stm32f4xx_syscfg.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices. 
 130:./FWLIB/src/stm32f4xx_syscfg.c ****   *
 131:./FWLIB/src/stm32f4xx_syscfg.c ****   * @param  NewState: new state of Interal FLASH Bank swapping.
 132:./FWLIB/src/stm32f4xx_syscfg.c ****   *          This parameter can be one of the following values:
 133:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg ENABLE: Flash Bank2 mapped at 0x08000000 (and aliased @0x00000000) 
 134:./FWLIB/src/stm32f4xx_syscfg.c ****   *                         and Flash Bank1 mapped at 0x08100000 (and aliased at 0x00100000)   
 135:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg DISABLE:(the default state) Flash Bank1 mapped at 0x08000000 (and aliased @0x00
 136:./FWLIB/src/stm32f4xx_syscfg.c ****                             and Flash Bank2 mapped at 0x08100000 (and aliased at 0x00100000)  
 137:./FWLIB/src/stm32f4xx_syscfg.c ****   * @retval None
 138:./FWLIB/src/stm32f4xx_syscfg.c ****   */
 139:./FWLIB/src/stm32f4xx_syscfg.c **** void SYSCFG_MemorySwappingBank(FunctionalState NewState)
 140:./FWLIB/src/stm32f4xx_syscfg.c **** {
  90              		.loc 1 140 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc07Bnrr.s 			page 5


  94              		@ link register save eliminated.
  95              	.LVL3:
 141:./FWLIB/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 142:./FWLIB/src/stm32f4xx_syscfg.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 143:./FWLIB/src/stm32f4xx_syscfg.c **** 
 144:./FWLIB/src/stm32f4xx_syscfg.c ****   *(__IO uint32_t *) UFB_MODE_BB = (uint32_t)NewState;
  96              		.loc 1 144 0
  97 0000 014B     		ldr	r3, .L7
  98 0002 1860     		str	r0, [r3]
 145:./FWLIB/src/stm32f4xx_syscfg.c **** }
  99              		.loc 1 145 0
 100 0004 7047     		bx	lr
 101              	.L8:
 102 0006 00BF     		.align	2
 103              	.L7:
 104 0008 20002742 		.word	1109852192
 105              		.cfi_endproc
 106              	.LFE114:
 108              		.section	.text.SYSCFG_EXTILineConfig,"ax",%progbits
 109              		.align	1
 110              		.global	SYSCFG_EXTILineConfig
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	SYSCFG_EXTILineConfig:
 117              	.LFB115:
 146:./FWLIB/src/stm32f4xx_syscfg.c **** 
 147:./FWLIB/src/stm32f4xx_syscfg.c **** /**
 148:./FWLIB/src/stm32f4xx_syscfg.c ****   * @brief  Selects the GPIO pin used as EXTI Line.
 149:./FWLIB/src/stm32f4xx_syscfg.c ****   * @param  EXTI_PortSourceGPIOx : selects the GPIO port to be used as source for
 150:./FWLIB/src/stm32f4xx_syscfg.c ****   *          EXTI lines where x can be (A..K) for STM32F42xxx/43xxx devices, (A..I) 
 151:./FWLIB/src/stm32f4xx_syscfg.c ****   *          for STM32F405xx/407xx and STM32F415xx/417xx devices or (A, B, C, D and H)
 152:./FWLIB/src/stm32f4xx_syscfg.c ****   *          for STM32401xx devices.  
 153:./FWLIB/src/stm32f4xx_syscfg.c ****   *            
 154:./FWLIB/src/stm32f4xx_syscfg.c ****   * @param  EXTI_PinSourcex: specifies the EXTI line to be configured.
 155:./FWLIB/src/stm32f4xx_syscfg.c ****   *           This parameter can be EXTI_PinSourcex where x can be (0..15, except
 156:./FWLIB/src/stm32f4xx_syscfg.c ****   *           for EXTI_PortSourceGPIOI x can be (0..11) for STM32F405xx/407xx
 157:./FWLIB/src/stm32f4xx_syscfg.c ****   *           and STM32F405xx/407xx devices and for EXTI_PortSourceGPIOK x can   
 158:./FWLIB/src/stm32f4xx_syscfg.c ****   *           be (0..7) for STM32F42xxx/43xxx devices. 
 159:./FWLIB/src/stm32f4xx_syscfg.c ****   *             
 160:./FWLIB/src/stm32f4xx_syscfg.c ****   * @retval None
 161:./FWLIB/src/stm32f4xx_syscfg.c ****   */
 162:./FWLIB/src/stm32f4xx_syscfg.c **** void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
 163:./FWLIB/src/stm32f4xx_syscfg.c **** {
 118              		.loc 1 163 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL4:
 124 0000 30B4     		push	{r4, r5}
 125              	.LCFI1:
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 4, -8
 128              		.cfi_offset 5, -4
 129              	.LVL5:
ARM GAS  /tmp/cc07Bnrr.s 			page 6


 164:./FWLIB/src/stm32f4xx_syscfg.c ****   uint32_t tmp = 0x00;
 165:./FWLIB/src/stm32f4xx_syscfg.c **** 
 166:./FWLIB/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 167:./FWLIB/src/stm32f4xx_syscfg.c ****   assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
 168:./FWLIB/src/stm32f4xx_syscfg.c ****   assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
 169:./FWLIB/src/stm32f4xx_syscfg.c **** 
 170:./FWLIB/src/stm32f4xx_syscfg.c ****   tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
 130              		.loc 1 170 0
 131 0002 01F00303 		and	r3, r1, #3
 132 0006 9B00     		lsls	r3, r3, #2
 133 0008 0F24     		movs	r4, #15
 134 000a 04FA03F5 		lsl	r5, r4, r3
 135              	.LVL6:
 171:./FWLIB/src/stm32f4xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
 136              		.loc 1 171 0
 137 000e 8908     		lsrs	r1, r1, #2
 138              	.LVL7:
 139 0010 074A     		ldr	r2, .L11
 140 0012 0231     		adds	r1, r1, #2
 141 0014 52F82140 		ldr	r4, [r2, r1, lsl #2]
 142 0018 24EA0504 		bic	r4, r4, r5
 143 001c 42F82140 		str	r4, [r2, r1, lsl #2]
 172:./FWLIB/src/stm32f4xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_Pin
 144              		.loc 1 172 0
 145 0020 52F82140 		ldr	r4, [r2, r1, lsl #2]
 146 0024 9840     		lsls	r0, r0, r3
 147              	.LVL8:
 148 0026 2043     		orrs	r0, r0, r4
 149 0028 42F82100 		str	r0, [r2, r1, lsl #2]
 173:./FWLIB/src/stm32f4xx_syscfg.c **** }
 150              		.loc 1 173 0
 151 002c 30BC     		pop	{r4, r5}
 152              	.LCFI2:
 153              		.cfi_restore 5
 154              		.cfi_restore 4
 155              		.cfi_def_cfa_offset 0
 156              	.LVL9:
 157 002e 7047     		bx	lr
 158              	.L12:
 159              		.align	2
 160              	.L11:
 161 0030 00380140 		.word	1073821696
 162              		.cfi_endproc
 163              	.LFE115:
 165              		.section	.text.SYSCFG_ETH_MediaInterfaceConfig,"ax",%progbits
 166              		.align	1
 167              		.global	SYSCFG_ETH_MediaInterfaceConfig
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv4-sp-d16
 173              	SYSCFG_ETH_MediaInterfaceConfig:
 174              	.LFB116:
 174:./FWLIB/src/stm32f4xx_syscfg.c **** 
 175:./FWLIB/src/stm32f4xx_syscfg.c **** /**
 176:./FWLIB/src/stm32f4xx_syscfg.c ****   * @brief  Selects the ETHERNET media interface 
 177:./FWLIB/src/stm32f4xx_syscfg.c ****   * @param  SYSCFG_ETH_MediaInterface: specifies the Media Interface mode. 
ARM GAS  /tmp/cc07Bnrr.s 			page 7


 178:./FWLIB/src/stm32f4xx_syscfg.c ****   *          This parameter can be one of the following values: 
 179:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_ETH_MediaInterface_MII: MII mode selected
 180:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_ETH_MediaInterface_RMII: RMII mode selected 
 181:./FWLIB/src/stm32f4xx_syscfg.c ****   * @retval None 
 182:./FWLIB/src/stm32f4xx_syscfg.c ****   */
 183:./FWLIB/src/stm32f4xx_syscfg.c **** void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
 184:./FWLIB/src/stm32f4xx_syscfg.c **** { 
 175              		.loc 1 184 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL10:
 185:./FWLIB/src/stm32f4xx_syscfg.c ****   assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
 186:./FWLIB/src/stm32f4xx_syscfg.c ****   /* Configure MII_RMII selection bit */ 
 187:./FWLIB/src/stm32f4xx_syscfg.c ****   *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
 181              		.loc 1 187 0
 182 0000 014B     		ldr	r3, .L14
 183 0002 1860     		str	r0, [r3]
 188:./FWLIB/src/stm32f4xx_syscfg.c **** }
 184              		.loc 1 188 0
 185 0004 7047     		bx	lr
 186              	.L15:
 187 0006 00BF     		.align	2
 188              	.L14:
 189 0008 DC002742 		.word	1109852380
 190              		.cfi_endproc
 191              	.LFE116:
 193              		.section	.text.SYSCFG_CompensationCellCmd,"ax",%progbits
 194              		.align	1
 195              		.global	SYSCFG_CompensationCellCmd
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv4-sp-d16
 201              	SYSCFG_CompensationCellCmd:
 202              	.LFB117:
 189:./FWLIB/src/stm32f4xx_syscfg.c **** 
 190:./FWLIB/src/stm32f4xx_syscfg.c **** /**
 191:./FWLIB/src/stm32f4xx_syscfg.c ****   * @brief  Enables or disables the I/O Compensation Cell.
 192:./FWLIB/src/stm32f4xx_syscfg.c ****   * @note   The I/O compensation cell can be used only when the device supply
 193:./FWLIB/src/stm32f4xx_syscfg.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 194:./FWLIB/src/stm32f4xx_syscfg.c ****   * @param  NewState: new state of the I/O Compensation Cell.
 195:./FWLIB/src/stm32f4xx_syscfg.c ****   *          This parameter can be one of the following values:
 196:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg ENABLE: I/O compensation cell enabled  
 197:./FWLIB/src/stm32f4xx_syscfg.c ****   *            @arg DISABLE: I/O compensation cell power-down mode  
 198:./FWLIB/src/stm32f4xx_syscfg.c ****   * @retval None
 199:./FWLIB/src/stm32f4xx_syscfg.c ****   */
 200:./FWLIB/src/stm32f4xx_syscfg.c **** void SYSCFG_CompensationCellCmd(FunctionalState NewState)
 201:./FWLIB/src/stm32f4xx_syscfg.c **** {
 203              		.loc 1 201 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 208              	.LVL11:
 202:./FWLIB/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
ARM GAS  /tmp/cc07Bnrr.s 			page 8


 203:./FWLIB/src/stm32f4xx_syscfg.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 204:./FWLIB/src/stm32f4xx_syscfg.c **** 
 205:./FWLIB/src/stm32f4xx_syscfg.c ****   *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
 209              		.loc 1 205 0
 210 0000 014B     		ldr	r3, .L17
 211 0002 1860     		str	r0, [r3]
 206:./FWLIB/src/stm32f4xx_syscfg.c **** }
 212              		.loc 1 206 0
 213 0004 7047     		bx	lr
 214              	.L18:
 215 0006 00BF     		.align	2
 216              	.L17:
 217 0008 00042742 		.word	1109853184
 218              		.cfi_endproc
 219              	.LFE117:
 221              		.section	.text.SYSCFG_GetCompensationCellStatus,"ax",%progbits
 222              		.align	1
 223              		.global	SYSCFG_GetCompensationCellStatus
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	SYSCFG_GetCompensationCellStatus:
 230              	.LFB118:
 207:./FWLIB/src/stm32f4xx_syscfg.c **** 
 208:./FWLIB/src/stm32f4xx_syscfg.c **** /**
 209:./FWLIB/src/stm32f4xx_syscfg.c ****   * @brief  Checks whether the I/O Compensation Cell ready flag is set or not.
 210:./FWLIB/src/stm32f4xx_syscfg.c ****   * @param  None
 211:./FWLIB/src/stm32f4xx_syscfg.c ****   * @retval The new state of the I/O Compensation Cell ready flag (SET or RESET)
 212:./FWLIB/src/stm32f4xx_syscfg.c ****   */
 213:./FWLIB/src/stm32f4xx_syscfg.c **** FlagStatus SYSCFG_GetCompensationCellStatus(void)
 214:./FWLIB/src/stm32f4xx_syscfg.c **** {
 231              		.loc 1 214 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL12:
 215:./FWLIB/src/stm32f4xx_syscfg.c ****   FlagStatus bitstatus = RESET;
 216:./FWLIB/src/stm32f4xx_syscfg.c ****     
 217:./FWLIB/src/stm32f4xx_syscfg.c ****   if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
 237              		.loc 1 217 0
 238 0000 044B     		ldr	r3, .L23
 239 0002 1B6A     		ldr	r3, [r3, #32]
 240 0004 13F4807F 		tst	r3, #256
 241 0008 01D1     		bne	.L22
 218:./FWLIB/src/stm32f4xx_syscfg.c ****   {
 219:./FWLIB/src/stm32f4xx_syscfg.c ****     bitstatus = SET;
 220:./FWLIB/src/stm32f4xx_syscfg.c ****   }
 221:./FWLIB/src/stm32f4xx_syscfg.c ****   else
 222:./FWLIB/src/stm32f4xx_syscfg.c ****   {
 223:./FWLIB/src/stm32f4xx_syscfg.c ****     bitstatus = RESET;
 242              		.loc 1 223 0
 243 000a 0020     		movs	r0, #0
 244              	.LVL13:
 224:./FWLIB/src/stm32f4xx_syscfg.c ****   }
 225:./FWLIB/src/stm32f4xx_syscfg.c ****   return bitstatus;
ARM GAS  /tmp/cc07Bnrr.s 			page 9


 226:./FWLIB/src/stm32f4xx_syscfg.c **** }
 245              		.loc 1 226 0
 246 000c 7047     		bx	lr
 247              	.LVL14:
 248              	.L22:
 219:./FWLIB/src/stm32f4xx_syscfg.c ****   }
 249              		.loc 1 219 0
 250 000e 0120     		movs	r0, #1
 251 0010 7047     		bx	lr
 252              	.L24:
 253 0012 00BF     		.align	2
 254              	.L23:
 255 0014 00380140 		.word	1073821696
 256              		.cfi_endproc
 257              	.LFE118:
 259              		.text
 260              	.Letext0:
 261              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 262              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 263              		.file 4 "build/lnInclude/core_cm4.h"
 264              		.file 5 "build/lnInclude/system_stm32f4xx.h"
 265              		.file 6 "build/lnInclude/stm32f4xx.h"
 266              		.file 7 "build/lnInclude/stm32f4xx_rcc.h"
ARM GAS  /tmp/cc07Bnrr.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_syscfg.c
     /tmp/cc07Bnrr.s:18     .text.SYSCFG_DeInit:0000000000000000 $t
     /tmp/cc07Bnrr.s:25     .text.SYSCFG_DeInit:0000000000000000 SYSCFG_DeInit
     /tmp/cc07Bnrr.s:53     .text.SYSCFG_MemoryRemapConfig:0000000000000000 $t
     /tmp/cc07Bnrr.s:60     .text.SYSCFG_MemoryRemapConfig:0000000000000000 SYSCFG_MemoryRemapConfig
     /tmp/cc07Bnrr.s:76     .text.SYSCFG_MemoryRemapConfig:0000000000000008 $d
     /tmp/cc07Bnrr.s:81     .text.SYSCFG_MemorySwappingBank:0000000000000000 $t
     /tmp/cc07Bnrr.s:88     .text.SYSCFG_MemorySwappingBank:0000000000000000 SYSCFG_MemorySwappingBank
     /tmp/cc07Bnrr.s:104    .text.SYSCFG_MemorySwappingBank:0000000000000008 $d
     /tmp/cc07Bnrr.s:109    .text.SYSCFG_EXTILineConfig:0000000000000000 $t
     /tmp/cc07Bnrr.s:116    .text.SYSCFG_EXTILineConfig:0000000000000000 SYSCFG_EXTILineConfig
     /tmp/cc07Bnrr.s:161    .text.SYSCFG_EXTILineConfig:0000000000000030 $d
     /tmp/cc07Bnrr.s:166    .text.SYSCFG_ETH_MediaInterfaceConfig:0000000000000000 $t
     /tmp/cc07Bnrr.s:173    .text.SYSCFG_ETH_MediaInterfaceConfig:0000000000000000 SYSCFG_ETH_MediaInterfaceConfig
     /tmp/cc07Bnrr.s:189    .text.SYSCFG_ETH_MediaInterfaceConfig:0000000000000008 $d
     /tmp/cc07Bnrr.s:194    .text.SYSCFG_CompensationCellCmd:0000000000000000 $t
     /tmp/cc07Bnrr.s:201    .text.SYSCFG_CompensationCellCmd:0000000000000000 SYSCFG_CompensationCellCmd
     /tmp/cc07Bnrr.s:217    .text.SYSCFG_CompensationCellCmd:0000000000000008 $d
     /tmp/cc07Bnrr.s:222    .text.SYSCFG_GetCompensationCellStatus:0000000000000000 $t
     /tmp/cc07Bnrr.s:229    .text.SYSCFG_GetCompensationCellStatus:0000000000000000 SYSCFG_GetCompensationCellStatus
     /tmp/cc07Bnrr.s:255    .text.SYSCFG_GetCompensationCellStatus:0000000000000014 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
