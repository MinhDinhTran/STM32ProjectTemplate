ARM GAS  /tmp/ccDix85Y.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_gpio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.GPIO_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	GPIO_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	GPIO_DeInit:
  26              	.LFB112:
  27              		.file 1 "./FWLIB/src/stm32f4xx_gpio.c"
   1:./FWLIB/src/stm32f4xx_gpio.c **** /**
   2:./FWLIB/src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:./FWLIB/src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:./FWLIB/src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:./FWLIB/src/stm32f4xx_gpio.c ****   * @version V1.4.0
   6:./FWLIB/src/stm32f4xx_gpio.c ****   * @date    04-August-2014
   7:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./FWLIB/src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:./FWLIB/src/stm32f4xx_gpio.c ****   *           + Initialization and Configuration
  10:./FWLIB/src/stm32f4xx_gpio.c ****   *           + GPIO Read and Write
  11:./FWLIB/src/stm32f4xx_gpio.c ****   *           + GPIO Alternate functions configuration
  12:./FWLIB/src/stm32f4xx_gpio.c ****   * 
  13:./FWLIB/src/stm32f4xx_gpio.c **** @verbatim  
  14:./FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================
  15:./FWLIB/src/stm32f4xx_gpio.c ****                       ##### How to use this driver #####
  16:./FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================       
  17:./FWLIB/src/stm32f4xx_gpio.c ****  [..]             
  18:./FWLIB/src/stm32f4xx_gpio.c ****    (#) Enable the GPIO AHB clock using the following function
  19:./FWLIB/src/stm32f4xx_gpio.c ****        RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:./FWLIB/src/stm32f4xx_gpio.c ****                
  21:./FWLIB/src/stm32f4xx_gpio.c ****    (#) Configure the GPIO pin(s) using GPIO_Init()
  22:./FWLIB/src/stm32f4xx_gpio.c ****        Four possible configuration are available for each pin:
  23:./FWLIB/src/stm32f4xx_gpio.c ****        (++) Input: Floating, Pull-up, Pull-down.
  24:./FWLIB/src/stm32f4xx_gpio.c ****        (++) Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:./FWLIB/src/stm32f4xx_gpio.c ****             Open Drain (Pull-up, Pull-down or no Pull). In output mode, the speed 
  26:./FWLIB/src/stm32f4xx_gpio.c ****             is configurable: 2 MHz, 25 MHz, 50 MHz or 100 MHz.
  27:./FWLIB/src/stm32f4xx_gpio.c ****        (++) Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull) Open 
  28:./FWLIB/src/stm32f4xx_gpio.c ****             Drain (Pull-up, Pull-down or no Pull).
  29:./FWLIB/src/stm32f4xx_gpio.c ****        (++) Analog: required mode when a pin is to be used as ADC channel or DAC 
  30:./FWLIB/src/stm32f4xx_gpio.c ****             output.
  31:./FWLIB/src/stm32f4xx_gpio.c ****    
ARM GAS  /tmp/ccDix85Y.s 			page 2


  32:./FWLIB/src/stm32f4xx_gpio.c ****    (#) Peripherals alternate function:
  33:./FWLIB/src/stm32f4xx_gpio.c ****        (++) For ADC and DAC, configure the desired pin in analog mode using 
  34:./FWLIB/src/stm32f4xx_gpio.c ****             GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  35:./FWLIB/src/stm32f4xx_gpio.c ****             (+++) For other peripherals (TIM, USART...):
  36:./FWLIB/src/stm32f4xx_gpio.c ****             (+++) Connect the pin to the desired peripherals' Alternate 
  37:./FWLIB/src/stm32f4xx_gpio.c ****                      Function (AF) using GPIO_PinAFConfig() function
  38:./FWLIB/src/stm32f4xx_gpio.c ****             (+++) Configure the desired pin in alternate function mode using
  39:./FWLIB/src/stm32f4xx_gpio.c ****                      GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  40:./FWLIB/src/stm32f4xx_gpio.c ****             (+++) Select the type, pull-up/pull-down and output speed via 
  41:./FWLIB/src/stm32f4xx_gpio.c ****                      GPIO_PuPd, GPIO_OType and GPIO_Speed members
  42:./FWLIB/src/stm32f4xx_gpio.c ****             (+++) Call GPIO_Init() function
  43:./FWLIB/src/stm32f4xx_gpio.c ****           
  44:./FWLIB/src/stm32f4xx_gpio.c ****    (#) To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  45:./FWLIB/src/stm32f4xx_gpio.c ****             
  46:./FWLIB/src/stm32f4xx_gpio.c ****    (#) To set/reset the level of a pin configured in output mode use 
  47:./FWLIB/src/stm32f4xx_gpio.c ****        GPIO_SetBits()/GPIO_ResetBits()
  48:./FWLIB/src/stm32f4xx_gpio.c ****                  
  49:./FWLIB/src/stm32f4xx_gpio.c ****    (#) During and just after reset, the alternate functions are not 
  50:./FWLIB/src/stm32f4xx_gpio.c ****        active and the GPIO pins are configured in input floating mode (except JTAG
  51:./FWLIB/src/stm32f4xx_gpio.c ****        pins).
  52:./FWLIB/src/stm32f4xx_gpio.c ****   
  53:./FWLIB/src/stm32f4xx_gpio.c ****    (#) The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as general purpose 
  54:./FWLIB/src/stm32f4xx_gpio.c ****        (PC14 and PC15, respectively) when the LSE oscillator is off. The LSE has 
  55:./FWLIB/src/stm32f4xx_gpio.c ****        priority over the GPIO function.
  56:./FWLIB/src/stm32f4xx_gpio.c ****   
  57:./FWLIB/src/stm32f4xx_gpio.c ****    (#) The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  58:./FWLIB/src/stm32f4xx_gpio.c ****        general purpose PH0 and PH1, respectively, when the HSE oscillator is off. 
  59:./FWLIB/src/stm32f4xx_gpio.c ****        The HSE has priority over the GPIO function.
  60:./FWLIB/src/stm32f4xx_gpio.c ****                
  61:./FWLIB/src/stm32f4xx_gpio.c **** @endverbatim        
  62:./FWLIB/src/stm32f4xx_gpio.c ****   *
  63:./FWLIB/src/stm32f4xx_gpio.c ****   ******************************************************************************
  64:./FWLIB/src/stm32f4xx_gpio.c ****   * @attention
  65:./FWLIB/src/stm32f4xx_gpio.c ****   *
  66:./FWLIB/src/stm32f4xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  67:./FWLIB/src/stm32f4xx_gpio.c ****   *
  68:./FWLIB/src/stm32f4xx_gpio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  69:./FWLIB/src/stm32f4xx_gpio.c ****   * You may not use this file except in compliance with the License.
  70:./FWLIB/src/stm32f4xx_gpio.c ****   * You may obtain a copy of the License at:
  71:./FWLIB/src/stm32f4xx_gpio.c ****   *
  72:./FWLIB/src/stm32f4xx_gpio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  73:./FWLIB/src/stm32f4xx_gpio.c ****   *
  74:./FWLIB/src/stm32f4xx_gpio.c ****   * Unless required by applicable law or agreed to in writing, software 
  75:./FWLIB/src/stm32f4xx_gpio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  76:./FWLIB/src/stm32f4xx_gpio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  77:./FWLIB/src/stm32f4xx_gpio.c ****   * See the License for the specific language governing permissions and
  78:./FWLIB/src/stm32f4xx_gpio.c ****   * limitations under the License.
  79:./FWLIB/src/stm32f4xx_gpio.c ****   *
  80:./FWLIB/src/stm32f4xx_gpio.c ****   ******************************************************************************
  81:./FWLIB/src/stm32f4xx_gpio.c ****   */
  82:./FWLIB/src/stm32f4xx_gpio.c **** 
  83:./FWLIB/src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  84:./FWLIB/src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  85:./FWLIB/src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  86:./FWLIB/src/stm32f4xx_gpio.c **** 
  87:./FWLIB/src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  88:./FWLIB/src/stm32f4xx_gpio.c ****   * @{
ARM GAS  /tmp/ccDix85Y.s 			page 3


  89:./FWLIB/src/stm32f4xx_gpio.c ****   */
  90:./FWLIB/src/stm32f4xx_gpio.c **** 
  91:./FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  92:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  93:./FWLIB/src/stm32f4xx_gpio.c ****   * @{
  94:./FWLIB/src/stm32f4xx_gpio.c ****   */ 
  95:./FWLIB/src/stm32f4xx_gpio.c **** 
  96:./FWLIB/src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  97:./FWLIB/src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  98:./FWLIB/src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  99:./FWLIB/src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
 100:./FWLIB/src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
 101:./FWLIB/src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
 102:./FWLIB/src/stm32f4xx_gpio.c **** 
 103:./FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
 104:./FWLIB/src/stm32f4xx_gpio.c ****   * @{
 105:./FWLIB/src/stm32f4xx_gpio.c ****   */ 
 106:./FWLIB/src/stm32f4xx_gpio.c **** 
 107:./FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 108:./FWLIB/src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 109:./FWLIB/src/stm32f4xx_gpio.c ****  *
 110:./FWLIB/src/stm32f4xx_gpio.c **** @verbatim   
 111:./FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================
 112:./FWLIB/src/stm32f4xx_gpio.c ****                  ##### Initialization and Configuration #####
 113:./FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================  
 114:./FWLIB/src/stm32f4xx_gpio.c **** 
 115:./FWLIB/src/stm32f4xx_gpio.c **** @endverbatim
 116:./FWLIB/src/stm32f4xx_gpio.c ****   * @{
 117:./FWLIB/src/stm32f4xx_gpio.c ****   */
 118:./FWLIB/src/stm32f4xx_gpio.c **** 
 119:./FWLIB/src/stm32f4xx_gpio.c **** /**
 120:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  De-initializes the GPIOx peripheral registers to their default reset values.
 121:./FWLIB/src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 122:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 123:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 124:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 125:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 126:./FWLIB/src/stm32f4xx_gpio.c ****   */
 127:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 128:./FWLIB/src/stm32f4xx_gpio.c **** {
  28              		.loc 1 128 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 129:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 130:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 131:./FWLIB/src/stm32f4xx_gpio.c **** 
 132:./FWLIB/src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
  38              		.loc 1 132 0
  39 0002 454B     		ldr	r3, .L25
  40 0004 9842     		cmp	r0, r3
ARM GAS  /tmp/ccDix85Y.s 			page 4


  41 0006 1ED0     		beq	.L14
 133:./FWLIB/src/stm32f4xx_gpio.c ****   {
 134:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 135:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
 136:./FWLIB/src/stm32f4xx_gpio.c ****   }
 137:./FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
  42              		.loc 1 137 0
  43 0008 444B     		ldr	r3, .L25+4
  44 000a 9842     		cmp	r0, r3
  45 000c 24D0     		beq	.L15
 138:./FWLIB/src/stm32f4xx_gpio.c ****   {
 139:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 140:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
 141:./FWLIB/src/stm32f4xx_gpio.c ****   }
 142:./FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
  46              		.loc 1 142 0
  47 000e 444B     		ldr	r3, .L25+8
  48 0010 9842     		cmp	r0, r3
  49 0012 2AD0     		beq	.L16
 143:./FWLIB/src/stm32f4xx_gpio.c ****   {
 144:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 145:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
 146:./FWLIB/src/stm32f4xx_gpio.c ****   }
 147:./FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
  50              		.loc 1 147 0
  51 0014 434B     		ldr	r3, .L25+12
  52 0016 9842     		cmp	r0, r3
  53 0018 30D0     		beq	.L17
 148:./FWLIB/src/stm32f4xx_gpio.c ****   {
 149:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 150:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 151:./FWLIB/src/stm32f4xx_gpio.c ****   }
 152:./FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
  54              		.loc 1 152 0
  55 001a 434B     		ldr	r3, .L25+16
  56 001c 9842     		cmp	r0, r3
  57 001e 36D0     		beq	.L18
 153:./FWLIB/src/stm32f4xx_gpio.c ****   {
 154:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 155:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 156:./FWLIB/src/stm32f4xx_gpio.c ****   }
 157:./FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
  58              		.loc 1 157 0
  59 0020 424B     		ldr	r3, .L25+20
  60 0022 9842     		cmp	r0, r3
  61 0024 3CD0     		beq	.L19
 158:./FWLIB/src/stm32f4xx_gpio.c ****   {
 159:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 160:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 161:./FWLIB/src/stm32f4xx_gpio.c ****   }
 162:./FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
  62              		.loc 1 162 0
  63 0026 424B     		ldr	r3, .L25+24
  64 0028 9842     		cmp	r0, r3
  65 002a 42D0     		beq	.L20
 163:./FWLIB/src/stm32f4xx_gpio.c ****   {
 164:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
ARM GAS  /tmp/ccDix85Y.s 			page 5


 165:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 166:./FWLIB/src/stm32f4xx_gpio.c ****   }
 167:./FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
  66              		.loc 1 167 0
  67 002c 414B     		ldr	r3, .L25+28
  68 002e 9842     		cmp	r0, r3
  69 0030 48D0     		beq	.L21
 168:./FWLIB/src/stm32f4xx_gpio.c ****   {
 169:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 170:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 171:./FWLIB/src/stm32f4xx_gpio.c ****   }
 172:./FWLIB/src/stm32f4xx_gpio.c **** 
 173:./FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOI)
  70              		.loc 1 173 0
  71 0032 414B     		ldr	r3, .L25+32
  72 0034 9842     		cmp	r0, r3
  73 0036 4ED0     		beq	.L22
 174:./FWLIB/src/stm32f4xx_gpio.c ****   {
 175:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
 176:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 177:./FWLIB/src/stm32f4xx_gpio.c ****   }
 178:./FWLIB/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOJ)
  74              		.loc 1 178 0
  75 0038 404B     		ldr	r3, .L25+36
  76 003a 9842     		cmp	r0, r3
  77 003c 56D0     		beq	.L23
 179:./FWLIB/src/stm32f4xx_gpio.c ****   {
 180:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOJ, ENABLE);
 181:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOJ, DISABLE);
 182:./FWLIB/src/stm32f4xx_gpio.c ****   }
 183:./FWLIB/src/stm32f4xx_gpio.c ****   else
 184:./FWLIB/src/stm32f4xx_gpio.c ****   {
 185:./FWLIB/src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOK)
  78              		.loc 1 185 0
  79 003e 404B     		ldr	r3, .L25+40
  80 0040 9842     		cmp	r0, r3
  81 0042 5ED0     		beq	.L24
  82              	.LVL1:
  83              	.L1:
 186:./FWLIB/src/stm32f4xx_gpio.c ****     {
 187:./FWLIB/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOK, ENABLE);
 188:./FWLIB/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOK, DISABLE);
 189:./FWLIB/src/stm32f4xx_gpio.c ****     }
 190:./FWLIB/src/stm32f4xx_gpio.c ****   }
 191:./FWLIB/src/stm32f4xx_gpio.c **** }
  84              		.loc 1 191 0
  85 0044 08BD     		pop	{r3, pc}
  86              	.LVL2:
  87              	.L14:
 134:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  88              		.loc 1 134 0
  89 0046 0121     		movs	r1, #1
  90 0048 0846     		mov	r0, r1
  91              	.LVL3:
  92 004a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  93              	.LVL4:
 135:./FWLIB/src/stm32f4xx_gpio.c ****   }
ARM GAS  /tmp/ccDix85Y.s 			page 6


  94              		.loc 1 135 0
  95 004e 0021     		movs	r1, #0
  96 0050 0120     		movs	r0, #1
  97 0052 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  98              	.LVL5:
  99 0056 F5E7     		b	.L1
 100              	.LVL6:
 101              	.L15:
 139:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
 102              		.loc 1 139 0
 103 0058 0121     		movs	r1, #1
 104 005a 0220     		movs	r0, #2
 105              	.LVL7:
 106 005c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 107              	.LVL8:
 140:./FWLIB/src/stm32f4xx_gpio.c ****   }
 108              		.loc 1 140 0
 109 0060 0021     		movs	r1, #0
 110 0062 0220     		movs	r0, #2
 111 0064 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 112              	.LVL9:
 113 0068 ECE7     		b	.L1
 114              	.LVL10:
 115              	.L16:
 144:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
 116              		.loc 1 144 0
 117 006a 0121     		movs	r1, #1
 118 006c 0420     		movs	r0, #4
 119              	.LVL11:
 120 006e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 121              	.LVL12:
 145:./FWLIB/src/stm32f4xx_gpio.c ****   }
 122              		.loc 1 145 0
 123 0072 0021     		movs	r1, #0
 124 0074 0420     		movs	r0, #4
 125 0076 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 126              	.LVL13:
 127 007a E3E7     		b	.L1
 128              	.LVL14:
 129              	.L17:
 149:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 130              		.loc 1 149 0
 131 007c 0121     		movs	r1, #1
 132 007e 0820     		movs	r0, #8
 133              	.LVL15:
 134 0080 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 135              	.LVL16:
 150:./FWLIB/src/stm32f4xx_gpio.c ****   }
 136              		.loc 1 150 0
 137 0084 0021     		movs	r1, #0
 138 0086 0820     		movs	r0, #8
 139 0088 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 140              	.LVL17:
 141 008c DAE7     		b	.L1
 142              	.LVL18:
 143              	.L18:
 154:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
ARM GAS  /tmp/ccDix85Y.s 			page 7


 144              		.loc 1 154 0
 145 008e 0121     		movs	r1, #1
 146 0090 1020     		movs	r0, #16
 147              	.LVL19:
 148 0092 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 149              	.LVL20:
 155:./FWLIB/src/stm32f4xx_gpio.c ****   }
 150              		.loc 1 155 0
 151 0096 0021     		movs	r1, #0
 152 0098 1020     		movs	r0, #16
 153 009a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 154              	.LVL21:
 155 009e D1E7     		b	.L1
 156              	.LVL22:
 157              	.L19:
 159:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 158              		.loc 1 159 0
 159 00a0 0121     		movs	r1, #1
 160 00a2 2020     		movs	r0, #32
 161              	.LVL23:
 162 00a4 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 163              	.LVL24:
 160:./FWLIB/src/stm32f4xx_gpio.c ****   }
 164              		.loc 1 160 0
 165 00a8 0021     		movs	r1, #0
 166 00aa 2020     		movs	r0, #32
 167 00ac FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 168              	.LVL25:
 169 00b0 C8E7     		b	.L1
 170              	.LVL26:
 171              	.L20:
 164:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 172              		.loc 1 164 0
 173 00b2 0121     		movs	r1, #1
 174 00b4 4020     		movs	r0, #64
 175              	.LVL27:
 176 00b6 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 177              	.LVL28:
 165:./FWLIB/src/stm32f4xx_gpio.c ****   }
 178              		.loc 1 165 0
 179 00ba 0021     		movs	r1, #0
 180 00bc 4020     		movs	r0, #64
 181 00be FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 182              	.LVL29:
 183 00c2 BFE7     		b	.L1
 184              	.LVL30:
 185              	.L21:
 169:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 186              		.loc 1 169 0
 187 00c4 0121     		movs	r1, #1
 188 00c6 8020     		movs	r0, #128
 189              	.LVL31:
 190 00c8 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 191              	.LVL32:
 170:./FWLIB/src/stm32f4xx_gpio.c ****   }
 192              		.loc 1 170 0
 193 00cc 0021     		movs	r1, #0
ARM GAS  /tmp/ccDix85Y.s 			page 8


 194 00ce 8020     		movs	r0, #128
 195 00d0 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 196              	.LVL33:
 197 00d4 B6E7     		b	.L1
 198              	.LVL34:
 199              	.L22:
 175:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 200              		.loc 1 175 0
 201 00d6 0121     		movs	r1, #1
 202 00d8 4FF48070 		mov	r0, #256
 203              	.LVL35:
 204 00dc FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 205              	.LVL36:
 176:./FWLIB/src/stm32f4xx_gpio.c ****   }
 206              		.loc 1 176 0
 207 00e0 0021     		movs	r1, #0
 208 00e2 4FF48070 		mov	r0, #256
 209 00e6 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 210              	.LVL37:
 211 00ea ABE7     		b	.L1
 212              	.LVL38:
 213              	.L23:
 180:./FWLIB/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOJ, DISABLE);
 214              		.loc 1 180 0
 215 00ec 0121     		movs	r1, #1
 216 00ee 4FF40070 		mov	r0, #512
 217              	.LVL39:
 218 00f2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 219              	.LVL40:
 181:./FWLIB/src/stm32f4xx_gpio.c ****   }
 220              		.loc 1 181 0
 221 00f6 0021     		movs	r1, #0
 222 00f8 4FF40070 		mov	r0, #512
 223 00fc FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 224              	.LVL41:
 225 0100 A0E7     		b	.L1
 226              	.LVL42:
 227              	.L24:
 187:./FWLIB/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOK, DISABLE);
 228              		.loc 1 187 0
 229 0102 0121     		movs	r1, #1
 230 0104 4FF48060 		mov	r0, #1024
 231              	.LVL43:
 232 0108 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 233              	.LVL44:
 188:./FWLIB/src/stm32f4xx_gpio.c ****     }
 234              		.loc 1 188 0
 235 010c 0021     		movs	r1, #0
 236 010e 4FF48060 		mov	r0, #1024
 237 0112 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 238              	.LVL45:
 239              		.loc 1 191 0
 240 0116 95E7     		b	.L1
 241              	.L26:
 242              		.align	2
 243              	.L25:
 244 0118 00000240 		.word	1073872896
ARM GAS  /tmp/ccDix85Y.s 			page 9


 245 011c 00040240 		.word	1073873920
 246 0120 00080240 		.word	1073874944
 247 0124 000C0240 		.word	1073875968
 248 0128 00100240 		.word	1073876992
 249 012c 00140240 		.word	1073878016
 250 0130 00180240 		.word	1073879040
 251 0134 001C0240 		.word	1073880064
 252 0138 00200240 		.word	1073881088
 253 013c 00240240 		.word	1073882112
 254 0140 00280240 		.word	1073883136
 255              		.cfi_endproc
 256              	.LFE112:
 258              		.section	.text.GPIO_Init,"ax",%progbits
 259              		.align	1
 260              		.global	GPIO_Init
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv4-sp-d16
 266              	GPIO_Init:
 267              	.LFB113:
 192:./FWLIB/src/stm32f4xx_gpio.c **** 
 193:./FWLIB/src/stm32f4xx_gpio.c **** /**
 194:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 195:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 196:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 197:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 198:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 199:./FWLIB/src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 200:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 201:./FWLIB/src/stm32f4xx_gpio.c ****   */
 202:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 203:./FWLIB/src/stm32f4xx_gpio.c **** {
 268              		.loc 1 203 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273              	.LVL46:
 204:./FWLIB/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 205:./FWLIB/src/stm32f4xx_gpio.c **** 
 206:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 207:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 208:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 209:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 210:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 211:./FWLIB/src/stm32f4xx_gpio.c **** 
 212:./FWLIB/src/stm32f4xx_gpio.c ****   /* ------------------------- Configure the port pins ---------------- */
 213:./FWLIB/src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 214:./FWLIB/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 274              		.loc 1 214 0
 275 0000 0023     		movs	r3, #0
 276              	.LVL47:
 277 0002 0F2B     		cmp	r3, #15
 278 0004 40D8     		bhi	.L35
 203:./FWLIB/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 279              		.loc 1 203 0
ARM GAS  /tmp/ccDix85Y.s 			page 10


 280 0006 F0B4     		push	{r4, r5, r6, r7}
 281              	.LCFI1:
 282              		.cfi_def_cfa_offset 16
 283              		.cfi_offset 4, -16
 284              		.cfi_offset 5, -12
 285              		.cfi_offset 6, -8
 286              		.cfi_offset 7, -4
 287 0008 10E0     		b	.L31
 288              	.LVL48:
 289              	.L30:
 215:./FWLIB/src/stm32f4xx_gpio.c ****   {
 216:./FWLIB/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 217:./FWLIB/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 218:./FWLIB/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 219:./FWLIB/src/stm32f4xx_gpio.c **** 
 220:./FWLIB/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 221:./FWLIB/src/stm32f4xx_gpio.c ****     {
 222:./FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 223:./FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 224:./FWLIB/src/stm32f4xx_gpio.c **** 
 225:./FWLIB/src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 226:./FWLIB/src/stm32f4xx_gpio.c ****       {
 227:./FWLIB/src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 228:./FWLIB/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 229:./FWLIB/src/stm32f4xx_gpio.c **** 
 230:./FWLIB/src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 231:./FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 232:./FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 233:./FWLIB/src/stm32f4xx_gpio.c **** 
 234:./FWLIB/src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 235:./FWLIB/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 236:./FWLIB/src/stm32f4xx_gpio.c **** 
 237:./FWLIB/src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 238:./FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 239:./FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 240:./FWLIB/src/stm32f4xx_gpio.c ****       }
 241:./FWLIB/src/stm32f4xx_gpio.c **** 
 242:./FWLIB/src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 243:./FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 290              		.loc 1 243 0
 291 000a C268     		ldr	r2, [r0, #12]
 292 000c 9CB2     		uxth	r4, r3
 293 000e 6600     		lsls	r6, r4, #1
 294 0010 0324     		movs	r4, #3
 295 0012 B440     		lsls	r4, r4, r6
 296 0014 22EA0402 		bic	r2, r2, r4
 297 0018 C260     		str	r2, [r0, #12]
 244:./FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 298              		.loc 1 244 0
 299 001a C268     		ldr	r2, [r0, #12]
 300 001c CC79     		ldrb	r4, [r1, #7]	@ zero_extendqisi2
 301 001e 04FA05F5 		lsl	r5, r4, r5
 302 0022 1543     		orrs	r5, r5, r2
 303 0024 C560     		str	r5, [r0, #12]
 304              	.L29:
 214:./FWLIB/src/stm32f4xx_gpio.c ****   {
 305              		.loc 1 214 0 discriminator 2
ARM GAS  /tmp/ccDix85Y.s 			page 11


 306 0026 0133     		adds	r3, r3, #1
 307              	.LVL49:
 308 0028 0F2B     		cmp	r3, #15
 309 002a 2BD8     		bhi	.L36
 310              	.LVL50:
 311              	.L31:
 216:./FWLIB/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 312              		.loc 1 216 0
 313 002c 0122     		movs	r2, #1
 314 002e 9A40     		lsls	r2, r2, r3
 315              	.LVL51:
 218:./FWLIB/src/stm32f4xx_gpio.c **** 
 316              		.loc 1 218 0
 317 0030 0C68     		ldr	r4, [r1]
 318              	.LVL52:
 220:./FWLIB/src/stm32f4xx_gpio.c ****     {
 319              		.loc 1 220 0
 320 0032 A243     		bics	r2, r2, r4
 321              	.LVL53:
 322 0034 F7D1     		bne	.L29
 222:./FWLIB/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 323              		.loc 1 222 0
 324 0036 0468     		ldr	r4, [r0]
 325              	.LVL54:
 326 0038 5D00     		lsls	r5, r3, #1
 327 003a 0322     		movs	r2, #3
 328 003c AA40     		lsls	r2, r2, r5
 329 003e D243     		mvns	r2, r2
 330 0040 1440     		ands	r4, r4, r2
 331 0042 0460     		str	r4, [r0]
 332              	.LVL55:
 223:./FWLIB/src/stm32f4xx_gpio.c **** 
 333              		.loc 1 223 0
 334 0044 0468     		ldr	r4, [r0]
 335 0046 0E79     		ldrb	r6, [r1, #4]	@ zero_extendqisi2
 336 0048 AE40     		lsls	r6, r6, r5
 337 004a 3443     		orrs	r4, r4, r6
 338 004c 0460     		str	r4, [r0]
 225:./FWLIB/src/stm32f4xx_gpio.c ****       {
 339              		.loc 1 225 0
 340 004e 0C79     		ldrb	r4, [r1, #4]	@ zero_extendqisi2
 341 0050 013C     		subs	r4, r4, #1
 342 0052 E4B2     		uxtb	r4, r4
 343 0054 012C     		cmp	r4, #1
 344 0056 D8D8     		bhi	.L30
 231:./FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 345              		.loc 1 231 0
 346 0058 8468     		ldr	r4, [r0, #8]
 347 005a 2240     		ands	r2, r2, r4
 348 005c 8260     		str	r2, [r0, #8]
 232:./FWLIB/src/stm32f4xx_gpio.c **** 
 349              		.loc 1 232 0
 350 005e 8268     		ldr	r2, [r0, #8]
 351 0060 4C79     		ldrb	r4, [r1, #5]	@ zero_extendqisi2
 352 0062 AC40     		lsls	r4, r4, r5
 353 0064 2243     		orrs	r2, r2, r4
 354 0066 8260     		str	r2, [r0, #8]
ARM GAS  /tmp/ccDix85Y.s 			page 12


 238:./FWLIB/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 355              		.loc 1 238 0
 356 0068 4468     		ldr	r4, [r0, #4]
 357 006a 9FB2     		uxth	r7, r3
 358 006c 0126     		movs	r6, #1
 359              	.LVL56:
 360 006e BE40     		lsls	r6, r6, r7
 361              	.LVL57:
 362 0070 24EA0604 		bic	r4, r4, r6
 363 0074 4460     		str	r4, [r0, #4]
 239:./FWLIB/src/stm32f4xx_gpio.c ****       }
 364              		.loc 1 239 0
 365 0076 4468     		ldr	r4, [r0, #4]
 366 0078 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 367 007a BA40     		lsls	r2, r2, r7
 368 007c 92B2     		uxth	r2, r2
 369 007e 2243     		orrs	r2, r2, r4
 370 0080 4260     		str	r2, [r0, #4]
 371 0082 C2E7     		b	.L30
 372              	.LVL58:
 373              	.L36:
 245:./FWLIB/src/stm32f4xx_gpio.c ****     }
 246:./FWLIB/src/stm32f4xx_gpio.c ****   }
 247:./FWLIB/src/stm32f4xx_gpio.c **** }
 374              		.loc 1 247 0
 375 0084 F0BC     		pop	{r4, r5, r6, r7}
 376              	.LCFI2:
 377              		.cfi_restore 7
 378              		.cfi_restore 6
 379              		.cfi_restore 5
 380              		.cfi_restore 4
 381              		.cfi_def_cfa_offset 0
 382 0086 7047     		bx	lr
 383              	.LVL59:
 384              	.L35:
 385 0088 7047     		bx	lr
 386              		.cfi_endproc
 387              	.LFE113:
 389              		.section	.text.GPIO_StructInit,"ax",%progbits
 390              		.align	1
 391              		.global	GPIO_StructInit
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu fpv4-sp-d16
 397              	GPIO_StructInit:
 398              	.LFB114:
 248:./FWLIB/src/stm32f4xx_gpio.c **** 
 249:./FWLIB/src/stm32f4xx_gpio.c **** /**
 250:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 251:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 252:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 253:./FWLIB/src/stm32f4xx_gpio.c ****   */
 254:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 255:./FWLIB/src/stm32f4xx_gpio.c **** {
 399              		.loc 1 255 0
 400              		.cfi_startproc
ARM GAS  /tmp/ccDix85Y.s 			page 13


 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL60:
 256:./FWLIB/src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 257:./FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 405              		.loc 1 257 0
 406 0000 4FF6FF73 		movw	r3, #65535
 407 0004 0360     		str	r3, [r0]
 258:./FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 408              		.loc 1 258 0
 409 0006 0023     		movs	r3, #0
 410 0008 0371     		strb	r3, [r0, #4]
 259:./FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 411              		.loc 1 259 0
 412 000a 4371     		strb	r3, [r0, #5]
 260:./FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 413              		.loc 1 260 0
 414 000c 8371     		strb	r3, [r0, #6]
 261:./FWLIB/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 415              		.loc 1 261 0
 416 000e C371     		strb	r3, [r0, #7]
 262:./FWLIB/src/stm32f4xx_gpio.c **** }
 417              		.loc 1 262 0
 418 0010 7047     		bx	lr
 419              		.cfi_endproc
 420              	.LFE114:
 422              		.section	.text.GPIO_PinLockConfig,"ax",%progbits
 423              		.align	1
 424              		.global	GPIO_PinLockConfig
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 428              		.fpu fpv4-sp-d16
 430              	GPIO_PinLockConfig:
 431              	.LFB115:
 263:./FWLIB/src/stm32f4xx_gpio.c **** 
 264:./FWLIB/src/stm32f4xx_gpio.c **** /**
 265:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 266:./FWLIB/src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 267:./FWLIB/src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 268:./FWLIB/src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 269:./FWLIB/src/stm32f4xx_gpio.c ****   *         until the next reset.
 270:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 271:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 272:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 273:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 274:./FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 275:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 276:./FWLIB/src/stm32f4xx_gpio.c ****   */
 277:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 278:./FWLIB/src/stm32f4xx_gpio.c **** {
 432              		.loc 1 278 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
ARM GAS  /tmp/ccDix85Y.s 			page 14


 437              	.LVL61:
 438 0000 82B0     		sub	sp, sp, #8
 439              	.LCFI3:
 440              		.cfi_def_cfa_offset 8
 279:./FWLIB/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 441              		.loc 1 279 0
 442 0002 4FF48033 		mov	r3, #65536
 443 0006 0193     		str	r3, [sp, #4]
 280:./FWLIB/src/stm32f4xx_gpio.c **** 
 281:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 282:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 283:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 284:./FWLIB/src/stm32f4xx_gpio.c **** 
 285:./FWLIB/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 444              		.loc 1 285 0
 445 0008 019B     		ldr	r3, [sp, #4]
 446 000a 0B43     		orrs	r3, r3, r1
 447 000c 0193     		str	r3, [sp, #4]
 286:./FWLIB/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 287:./FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 448              		.loc 1 287 0
 449 000e 019B     		ldr	r3, [sp, #4]
 450 0010 C361     		str	r3, [r0, #28]
 288:./FWLIB/src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 289:./FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 451              		.loc 1 289 0
 452 0012 C161     		str	r1, [r0, #28]
 290:./FWLIB/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 291:./FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 453              		.loc 1 291 0
 454 0014 019B     		ldr	r3, [sp, #4]
 455 0016 C361     		str	r3, [r0, #28]
 292:./FWLIB/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 293:./FWLIB/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 456              		.loc 1 293 0
 457 0018 C369     		ldr	r3, [r0, #28]
 458 001a 0193     		str	r3, [sp, #4]
 294:./FWLIB/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 295:./FWLIB/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 459              		.loc 1 295 0
 460 001c C369     		ldr	r3, [r0, #28]
 461 001e 0193     		str	r3, [sp, #4]
 296:./FWLIB/src/stm32f4xx_gpio.c **** }
 462              		.loc 1 296 0
 463 0020 02B0     		add	sp, sp, #8
 464              	.LCFI4:
 465              		.cfi_def_cfa_offset 0
 466              		@ sp needed
 467 0022 7047     		bx	lr
 468              		.cfi_endproc
 469              	.LFE115:
 471              		.section	.text.GPIO_ReadInputDataBit,"ax",%progbits
 472              		.align	1
 473              		.global	GPIO_ReadInputDataBit
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
ARM GAS  /tmp/ccDix85Y.s 			page 15


 477              		.fpu fpv4-sp-d16
 479              	GPIO_ReadInputDataBit:
 480              	.LFB116:
 297:./FWLIB/src/stm32f4xx_gpio.c **** 
 298:./FWLIB/src/stm32f4xx_gpio.c **** /**
 299:./FWLIB/src/stm32f4xx_gpio.c ****   * @}
 300:./FWLIB/src/stm32f4xx_gpio.c ****   */
 301:./FWLIB/src/stm32f4xx_gpio.c **** 
 302:./FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 303:./FWLIB/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 304:./FWLIB/src/stm32f4xx_gpio.c ****  *
 305:./FWLIB/src/stm32f4xx_gpio.c **** @verbatim   
 306:./FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================
 307:./FWLIB/src/stm32f4xx_gpio.c ****                          ##### GPIO Read and Write #####
 308:./FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================  
 309:./FWLIB/src/stm32f4xx_gpio.c **** 
 310:./FWLIB/src/stm32f4xx_gpio.c **** @endverbatim
 311:./FWLIB/src/stm32f4xx_gpio.c ****   * @{
 312:./FWLIB/src/stm32f4xx_gpio.c ****   */
 313:./FWLIB/src/stm32f4xx_gpio.c **** 
 314:./FWLIB/src/stm32f4xx_gpio.c **** /**
 315:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 316:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 317:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 318:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 319:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 320:./FWLIB/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 321:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 322:./FWLIB/src/stm32f4xx_gpio.c ****   */
 323:./FWLIB/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 324:./FWLIB/src/stm32f4xx_gpio.c **** {
 481              		.loc 1 324 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486              	.LVL62:
 325:./FWLIB/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 326:./FWLIB/src/stm32f4xx_gpio.c **** 
 327:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 328:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 329:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 330:./FWLIB/src/stm32f4xx_gpio.c **** 
 331:./FWLIB/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 487              		.loc 1 331 0
 488 0000 0369     		ldr	r3, [r0, #16]
 489 0002 1942     		tst	r1, r3
 490 0004 01D1     		bne	.L43
 332:./FWLIB/src/stm32f4xx_gpio.c ****   {
 333:./FWLIB/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 334:./FWLIB/src/stm32f4xx_gpio.c ****   }
 335:./FWLIB/src/stm32f4xx_gpio.c ****   else
 336:./FWLIB/src/stm32f4xx_gpio.c ****   {
 337:./FWLIB/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 491              		.loc 1 337 0
 492 0006 0020     		movs	r0, #0
 493              	.LVL63:
ARM GAS  /tmp/ccDix85Y.s 			page 16


 338:./FWLIB/src/stm32f4xx_gpio.c ****   }
 339:./FWLIB/src/stm32f4xx_gpio.c ****   return bitstatus;
 340:./FWLIB/src/stm32f4xx_gpio.c **** }
 494              		.loc 1 340 0
 495 0008 7047     		bx	lr
 496              	.LVL64:
 497              	.L43:
 333:./FWLIB/src/stm32f4xx_gpio.c ****   }
 498              		.loc 1 333 0
 499 000a 0120     		movs	r0, #1
 500              	.LVL65:
 501 000c 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE116:
 505              		.section	.text.GPIO_ReadInputData,"ax",%progbits
 506              		.align	1
 507              		.global	GPIO_ReadInputData
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu fpv4-sp-d16
 513              	GPIO_ReadInputData:
 514              	.LFB117:
 341:./FWLIB/src/stm32f4xx_gpio.c **** 
 342:./FWLIB/src/stm32f4xx_gpio.c **** /**
 343:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 344:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 345:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 346:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 347:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 348:./FWLIB/src/stm32f4xx_gpio.c ****   */
 349:./FWLIB/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 350:./FWLIB/src/stm32f4xx_gpio.c **** {
 515              		.loc 1 350 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520              	.LVL66:
 351:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 352:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 353:./FWLIB/src/stm32f4xx_gpio.c **** 
 354:./FWLIB/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 521              		.loc 1 354 0
 522 0000 0069     		ldr	r0, [r0, #16]
 523              	.LVL67:
 355:./FWLIB/src/stm32f4xx_gpio.c **** }
 524              		.loc 1 355 0
 525 0002 80B2     		uxth	r0, r0
 526 0004 7047     		bx	lr
 527              		.cfi_endproc
 528              	.LFE117:
 530              		.section	.text.GPIO_ReadOutputDataBit,"ax",%progbits
 531              		.align	1
 532              		.global	GPIO_ReadOutputDataBit
 533              		.syntax unified
 534              		.thumb
ARM GAS  /tmp/ccDix85Y.s 			page 17


 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	GPIO_ReadOutputDataBit:
 539              	.LFB118:
 356:./FWLIB/src/stm32f4xx_gpio.c **** 
 357:./FWLIB/src/stm32f4xx_gpio.c **** /**
 358:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 359:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 360:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 361:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 362:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 363:./FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 364:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 365:./FWLIB/src/stm32f4xx_gpio.c ****   */
 366:./FWLIB/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 367:./FWLIB/src/stm32f4xx_gpio.c **** {
 540              		.loc 1 367 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 545              	.LVL68:
 368:./FWLIB/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 369:./FWLIB/src/stm32f4xx_gpio.c **** 
 370:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 371:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 372:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 373:./FWLIB/src/stm32f4xx_gpio.c **** 
 374:./FWLIB/src/stm32f4xx_gpio.c ****   if (((GPIOx->ODR) & GPIO_Pin) != (uint32_t)Bit_RESET)
 546              		.loc 1 374 0
 547 0000 4369     		ldr	r3, [r0, #20]
 548 0002 1942     		tst	r1, r3
 549 0004 01D1     		bne	.L48
 375:./FWLIB/src/stm32f4xx_gpio.c ****   {
 376:./FWLIB/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 377:./FWLIB/src/stm32f4xx_gpio.c ****   }
 378:./FWLIB/src/stm32f4xx_gpio.c ****   else
 379:./FWLIB/src/stm32f4xx_gpio.c ****   {
 380:./FWLIB/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 550              		.loc 1 380 0
 551 0006 0020     		movs	r0, #0
 552              	.LVL69:
 381:./FWLIB/src/stm32f4xx_gpio.c ****   }
 382:./FWLIB/src/stm32f4xx_gpio.c ****   return bitstatus;
 383:./FWLIB/src/stm32f4xx_gpio.c **** }
 553              		.loc 1 383 0
 554 0008 7047     		bx	lr
 555              	.LVL70:
 556              	.L48:
 376:./FWLIB/src/stm32f4xx_gpio.c ****   }
 557              		.loc 1 376 0
 558 000a 0120     		movs	r0, #1
 559              	.LVL71:
 560 000c 7047     		bx	lr
 561              		.cfi_endproc
 562              	.LFE118:
 564              		.section	.text.GPIO_ReadOutputData,"ax",%progbits
ARM GAS  /tmp/ccDix85Y.s 			page 18


 565              		.align	1
 566              		.global	GPIO_ReadOutputData
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	GPIO_ReadOutputData:
 573              	.LFB119:
 384:./FWLIB/src/stm32f4xx_gpio.c **** 
 385:./FWLIB/src/stm32f4xx_gpio.c **** /**
 386:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 387:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 388:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 389:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 390:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 391:./FWLIB/src/stm32f4xx_gpio.c ****   */
 392:./FWLIB/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 393:./FWLIB/src/stm32f4xx_gpio.c **** {
 574              		.loc 1 393 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579              	.LVL72:
 394:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 395:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 396:./FWLIB/src/stm32f4xx_gpio.c **** 
 397:./FWLIB/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 580              		.loc 1 397 0
 581 0000 4069     		ldr	r0, [r0, #20]
 582              	.LVL73:
 398:./FWLIB/src/stm32f4xx_gpio.c **** }
 583              		.loc 1 398 0
 584 0002 80B2     		uxth	r0, r0
 585 0004 7047     		bx	lr
 586              		.cfi_endproc
 587              	.LFE119:
 589              		.section	.text.GPIO_SetBits,"ax",%progbits
 590              		.align	1
 591              		.global	GPIO_SetBits
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv4-sp-d16
 597              	GPIO_SetBits:
 598              	.LFB120:
 399:./FWLIB/src/stm32f4xx_gpio.c **** 
 400:./FWLIB/src/stm32f4xx_gpio.c **** /**
 401:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 402:./FWLIB/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 403:./FWLIB/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 404:./FWLIB/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 405:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 406:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 407:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 408:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 409:./FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
ARM GAS  /tmp/ccDix85Y.s 			page 19


 410:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 411:./FWLIB/src/stm32f4xx_gpio.c ****   */
 412:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 413:./FWLIB/src/stm32f4xx_gpio.c **** {
 599              		.loc 1 413 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604              	.LVL74:
 414:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 415:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 416:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 417:./FWLIB/src/stm32f4xx_gpio.c **** 
 418:./FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 605              		.loc 1 418 0
 606 0000 0183     		strh	r1, [r0, #24]	@ movhi
 419:./FWLIB/src/stm32f4xx_gpio.c **** }
 607              		.loc 1 419 0
 608 0002 7047     		bx	lr
 609              		.cfi_endproc
 610              	.LFE120:
 612              		.section	.text.GPIO_ResetBits,"ax",%progbits
 613              		.align	1
 614              		.global	GPIO_ResetBits
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu fpv4-sp-d16
 620              	GPIO_ResetBits:
 621              	.LFB121:
 420:./FWLIB/src/stm32f4xx_gpio.c **** 
 421:./FWLIB/src/stm32f4xx_gpio.c **** /**
 422:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 423:./FWLIB/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 424:./FWLIB/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 425:./FWLIB/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 426:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 427:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 428:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 429:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 430:./FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 431:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 432:./FWLIB/src/stm32f4xx_gpio.c ****   */
 433:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 434:./FWLIB/src/stm32f4xx_gpio.c **** {
 622              		.loc 1 434 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627              	.LVL75:
 435:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 436:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 437:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 438:./FWLIB/src/stm32f4xx_gpio.c **** 
 439:./FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
ARM GAS  /tmp/ccDix85Y.s 			page 20


 628              		.loc 1 439 0
 629 0000 4183     		strh	r1, [r0, #26]	@ movhi
 440:./FWLIB/src/stm32f4xx_gpio.c **** }
 630              		.loc 1 440 0
 631 0002 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE121:
 635              		.section	.text.GPIO_WriteBit,"ax",%progbits
 636              		.align	1
 637              		.global	GPIO_WriteBit
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu fpv4-sp-d16
 643              	GPIO_WriteBit:
 644              	.LFB122:
 441:./FWLIB/src/stm32f4xx_gpio.c **** 
 442:./FWLIB/src/stm32f4xx_gpio.c **** /**
 443:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 444:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 445:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 446:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 447:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 448:./FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 449:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 450:./FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 451:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 452:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 453:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 454:./FWLIB/src/stm32f4xx_gpio.c ****   */
 455:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 456:./FWLIB/src/stm32f4xx_gpio.c **** {
 645              		.loc 1 456 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650              	.LVL76:
 457:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 458:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 459:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 460:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 461:./FWLIB/src/stm32f4xx_gpio.c **** 
 462:./FWLIB/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 651              		.loc 1 462 0
 652 0000 0AB9     		cbnz	r2, .L55
 463:./FWLIB/src/stm32f4xx_gpio.c ****   {
 464:./FWLIB/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 465:./FWLIB/src/stm32f4xx_gpio.c ****   }
 466:./FWLIB/src/stm32f4xx_gpio.c ****   else
 467:./FWLIB/src/stm32f4xx_gpio.c ****   {
 468:./FWLIB/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 653              		.loc 1 468 0
 654 0002 4183     		strh	r1, [r0, #26]	@ movhi
 469:./FWLIB/src/stm32f4xx_gpio.c ****   }
 470:./FWLIB/src/stm32f4xx_gpio.c **** }
 655              		.loc 1 470 0
ARM GAS  /tmp/ccDix85Y.s 			page 21


 656 0004 7047     		bx	lr
 657              	.L55:
 464:./FWLIB/src/stm32f4xx_gpio.c ****   }
 658              		.loc 1 464 0
 659 0006 0183     		strh	r1, [r0, #24]	@ movhi
 660 0008 7047     		bx	lr
 661              		.cfi_endproc
 662              	.LFE122:
 664              		.section	.text.GPIO_Write,"ax",%progbits
 665              		.align	1
 666              		.global	GPIO_Write
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv4-sp-d16
 672              	GPIO_Write:
 673              	.LFB123:
 471:./FWLIB/src/stm32f4xx_gpio.c **** 
 472:./FWLIB/src/stm32f4xx_gpio.c **** /**
 473:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 474:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 475:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 476:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 477:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 478:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 479:./FWLIB/src/stm32f4xx_gpio.c ****   */
 480:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 481:./FWLIB/src/stm32f4xx_gpio.c **** {
 674              		.loc 1 481 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LVL77:
 482:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 483:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 484:./FWLIB/src/stm32f4xx_gpio.c **** 
 485:./FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 680              		.loc 1 485 0
 681 0000 4161     		str	r1, [r0, #20]
 486:./FWLIB/src/stm32f4xx_gpio.c **** }
 682              		.loc 1 486 0
 683 0002 7047     		bx	lr
 684              		.cfi_endproc
 685              	.LFE123:
 687              		.section	.text.GPIO_ToggleBits,"ax",%progbits
 688              		.align	1
 689              		.global	GPIO_ToggleBits
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 693              		.fpu fpv4-sp-d16
 695              	GPIO_ToggleBits:
 696              	.LFB124:
 487:./FWLIB/src/stm32f4xx_gpio.c **** 
 488:./FWLIB/src/stm32f4xx_gpio.c **** /**
 489:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
ARM GAS  /tmp/ccDix85Y.s 			page 22


 490:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 491:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 492:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 493:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 494:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 495:./FWLIB/src/stm32f4xx_gpio.c ****   */
 496:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 497:./FWLIB/src/stm32f4xx_gpio.c **** {
 697              		.loc 1 497 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702              	.LVL78:
 498:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 499:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 500:./FWLIB/src/stm32f4xx_gpio.c **** 
 501:./FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 703              		.loc 1 501 0
 704 0000 4369     		ldr	r3, [r0, #20]
 705 0002 5940     		eors	r1, r1, r3
 706              	.LVL79:
 707 0004 4161     		str	r1, [r0, #20]
 502:./FWLIB/src/stm32f4xx_gpio.c **** }
 708              		.loc 1 502 0
 709 0006 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE124:
 713              		.section	.text.GPIO_PinAFConfig,"ax",%progbits
 714              		.align	1
 715              		.global	GPIO_PinAFConfig
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	GPIO_PinAFConfig:
 722              	.LFB125:
 503:./FWLIB/src/stm32f4xx_gpio.c **** 
 504:./FWLIB/src/stm32f4xx_gpio.c **** /**
 505:./FWLIB/src/stm32f4xx_gpio.c ****   * @}
 506:./FWLIB/src/stm32f4xx_gpio.c ****   */
 507:./FWLIB/src/stm32f4xx_gpio.c **** 
 508:./FWLIB/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 509:./FWLIB/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 510:./FWLIB/src/stm32f4xx_gpio.c ****  *
 511:./FWLIB/src/stm32f4xx_gpio.c **** @verbatim   
 512:./FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================
 513:./FWLIB/src/stm32f4xx_gpio.c ****            ##### GPIO Alternate functions configuration function #####
 514:./FWLIB/src/stm32f4xx_gpio.c ****  ===============================================================================  
 515:./FWLIB/src/stm32f4xx_gpio.c **** 
 516:./FWLIB/src/stm32f4xx_gpio.c **** @endverbatim
 517:./FWLIB/src/stm32f4xx_gpio.c ****   * @{
 518:./FWLIB/src/stm32f4xx_gpio.c ****   */
 519:./FWLIB/src/stm32f4xx_gpio.c **** 
 520:./FWLIB/src/stm32f4xx_gpio.c **** /**
 521:./FWLIB/src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 522:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
ARM GAS  /tmp/ccDix85Y.s 			page 23


 523:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 524:./FWLIB/src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 525:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 526:./FWLIB/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 527:./FWLIB/src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 528:./FWLIB/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 529:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 530:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 531:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 532:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 533:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 534:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 535:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 536:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
 537:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 538:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 539:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 540:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 541:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 542:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 543:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 544:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 545:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 546:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 547:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 548:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI4: Connect SPI4 pins to AF5 
 549:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI5: Connect SPI5 pins to AF5 
 550:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI6: Connect SPI6 pins to AF5
 551:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SAI1: Connect SAI1 pins to AF6 for STM32F42xxx/43xxx devices.       
 552:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 553:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 554:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 555:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 556:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 557:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
 558:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 559:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 560:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART7: Connect UART7 pins to AF8
 561:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART8: Connect UART8 pins to AF8
 562:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 563:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 564:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 565:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 566:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 567:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 568:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 569:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 570:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12 
 571:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FMC: Connect FMC pins to AF12 for STM32F42xxx/43xxx devices.   
 572:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 573:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 574:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 575:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_LTDC: Connect LTDC pins to AF14 for STM32F429xx/439xx devices. 
 576:./FWLIB/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 577:./FWLIB/src/stm32f4xx_gpio.c ****   * @retval None
 578:./FWLIB/src/stm32f4xx_gpio.c ****   */
 579:./FWLIB/src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
ARM GAS  /tmp/ccDix85Y.s 			page 24


 580:./FWLIB/src/stm32f4xx_gpio.c **** {
 723              		.loc 1 580 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728              	.LVL80:
 729 0000 30B4     		push	{r4, r5}
 730              	.LCFI5:
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 4, -8
 733              		.cfi_offset 5, -4
 734              	.LVL81:
 581:./FWLIB/src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
 582:./FWLIB/src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 583:./FWLIB/src/stm32f4xx_gpio.c ****   
 584:./FWLIB/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 585:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 586:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 587:./FWLIB/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 588:./FWLIB/src/stm32f4xx_gpio.c ****   
 589:./FWLIB/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 735              		.loc 1 589 0
 736 0002 01F00703 		and	r3, r1, #7
 737 0006 9B00     		lsls	r3, r3, #2
 738 0008 9A40     		lsls	r2, r2, r3
 739              	.LVL82:
 590:./FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 740              		.loc 1 590 0
 741 000a C908     		lsrs	r1, r1, #3
 742              	.LVL83:
 743 000c 0831     		adds	r1, r1, #8
 744 000e 50F82140 		ldr	r4, [r0, r1, lsl #2]
 745 0012 0F25     		movs	r5, #15
 746 0014 05FA03F3 		lsl	r3, r5, r3
 747 0018 24EA0303 		bic	r3, r4, r3
 748 001c 40F82130 		str	r3, [r0, r1, lsl #2]
 591:./FWLIB/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 749              		.loc 1 591 0
 750 0020 50F82130 		ldr	r3, [r0, r1, lsl #2]
 751 0024 1A43     		orrs	r2, r2, r3
 752              	.LVL84:
 592:./FWLIB/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 753              		.loc 1 592 0
 754 0026 40F82120 		str	r2, [r0, r1, lsl #2]
 593:./FWLIB/src/stm32f4xx_gpio.c **** }
 755              		.loc 1 593 0
 756 002a 30BC     		pop	{r4, r5}
 757              	.LCFI6:
 758              		.cfi_restore 5
 759              		.cfi_restore 4
 760              		.cfi_def_cfa_offset 0
 761 002c 7047     		bx	lr
 762              		.cfi_endproc
 763              	.LFE125:
 765              		.text
 766              	.Letext0:
ARM GAS  /tmp/ccDix85Y.s 			page 25


 767              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 768              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 769              		.file 4 "build/lnInclude/core_cm4.h"
 770              		.file 5 "build/lnInclude/system_stm32f4xx.h"
 771              		.file 6 "build/lnInclude/stm32f4xx.h"
 772              		.file 7 "build/lnInclude/stm32f4xx_gpio.h"
 773              		.file 8 "build/lnInclude/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccDix85Y.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_gpio.c
     /tmp/ccDix85Y.s:18     .text.GPIO_DeInit:0000000000000000 $t
     /tmp/ccDix85Y.s:25     .text.GPIO_DeInit:0000000000000000 GPIO_DeInit
     /tmp/ccDix85Y.s:244    .text.GPIO_DeInit:0000000000000118 $d
     /tmp/ccDix85Y.s:259    .text.GPIO_Init:0000000000000000 $t
     /tmp/ccDix85Y.s:266    .text.GPIO_Init:0000000000000000 GPIO_Init
     /tmp/ccDix85Y.s:390    .text.GPIO_StructInit:0000000000000000 $t
     /tmp/ccDix85Y.s:397    .text.GPIO_StructInit:0000000000000000 GPIO_StructInit
     /tmp/ccDix85Y.s:423    .text.GPIO_PinLockConfig:0000000000000000 $t
     /tmp/ccDix85Y.s:430    .text.GPIO_PinLockConfig:0000000000000000 GPIO_PinLockConfig
     /tmp/ccDix85Y.s:472    .text.GPIO_ReadInputDataBit:0000000000000000 $t
     /tmp/ccDix85Y.s:479    .text.GPIO_ReadInputDataBit:0000000000000000 GPIO_ReadInputDataBit
     /tmp/ccDix85Y.s:506    .text.GPIO_ReadInputData:0000000000000000 $t
     /tmp/ccDix85Y.s:513    .text.GPIO_ReadInputData:0000000000000000 GPIO_ReadInputData
     /tmp/ccDix85Y.s:531    .text.GPIO_ReadOutputDataBit:0000000000000000 $t
     /tmp/ccDix85Y.s:538    .text.GPIO_ReadOutputDataBit:0000000000000000 GPIO_ReadOutputDataBit
     /tmp/ccDix85Y.s:565    .text.GPIO_ReadOutputData:0000000000000000 $t
     /tmp/ccDix85Y.s:572    .text.GPIO_ReadOutputData:0000000000000000 GPIO_ReadOutputData
     /tmp/ccDix85Y.s:590    .text.GPIO_SetBits:0000000000000000 $t
     /tmp/ccDix85Y.s:597    .text.GPIO_SetBits:0000000000000000 GPIO_SetBits
     /tmp/ccDix85Y.s:613    .text.GPIO_ResetBits:0000000000000000 $t
     /tmp/ccDix85Y.s:620    .text.GPIO_ResetBits:0000000000000000 GPIO_ResetBits
     /tmp/ccDix85Y.s:636    .text.GPIO_WriteBit:0000000000000000 $t
     /tmp/ccDix85Y.s:643    .text.GPIO_WriteBit:0000000000000000 GPIO_WriteBit
     /tmp/ccDix85Y.s:665    .text.GPIO_Write:0000000000000000 $t
     /tmp/ccDix85Y.s:672    .text.GPIO_Write:0000000000000000 GPIO_Write
     /tmp/ccDix85Y.s:688    .text.GPIO_ToggleBits:0000000000000000 $t
     /tmp/ccDix85Y.s:695    .text.GPIO_ToggleBits:0000000000000000 GPIO_ToggleBits
     /tmp/ccDix85Y.s:714    .text.GPIO_PinAFConfig:0000000000000000 $t
     /tmp/ccDix85Y.s:721    .text.GPIO_PinAFConfig:0000000000000000 GPIO_PinAFConfig

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
